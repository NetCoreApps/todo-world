// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: services.proto

#include "services.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_services_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AssignRolesResponse_MetaEntry_DoNotUse_services_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_services_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AssignRoles_MetaEntry_DoNotUse_services_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_services_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AuthenticateResponse_MetaEntry_DoNotUse_services_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_services_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Authenticate_MetaEntry_DoNotUse_services_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_services_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ConvertSessionToTokenResponse_MetaEntry_DoNotUse_services_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_services_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ConvertSessionToToken_MetaEntry_DoNotUse_services_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_services_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GetAccessTokenResponse_MetaEntry_DoNotUse_services_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_services_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GetAccessToken_MetaEntry_DoNotUse_services_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_services_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RegisterResponse_MetaEntry_DoNotUse_services_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_services_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Register_MetaEntry_DoNotUse_services_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_services_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ResponseError_MetaEntry_DoNotUse_services_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_services_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ResponseStatus_MetaEntry_DoNotUse_services_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_services_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StreamServerEventsResponse_MetaEntry_DoNotUse_services_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_services_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Todo_services_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_services_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UnAssignRolesResponse_MetaEntry_DoNotUse_services_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_services_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UnAssignRoles_MetaEntry_DoNotUse_services_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_services_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ResponseError_services_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_services_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ResponseStatus_services_2eproto;
class AssignRoles_MetaEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AssignRoles_MetaEntry_DoNotUse> _instance;
} _AssignRoles_MetaEntry_DoNotUse_default_instance_;
class AssignRolesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AssignRoles> _instance;
} _AssignRoles_default_instance_;
class AssignRolesResponse_MetaEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AssignRolesResponse_MetaEntry_DoNotUse> _instance;
} _AssignRolesResponse_MetaEntry_DoNotUse_default_instance_;
class AssignRolesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AssignRolesResponse> _instance;
} _AssignRolesResponse_default_instance_;
class Authenticate_MetaEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Authenticate_MetaEntry_DoNotUse> _instance;
} _Authenticate_MetaEntry_DoNotUse_default_instance_;
class AuthenticateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Authenticate> _instance;
} _Authenticate_default_instance_;
class AuthenticateResponse_MetaEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthenticateResponse_MetaEntry_DoNotUse> _instance;
} _AuthenticateResponse_MetaEntry_DoNotUse_default_instance_;
class AuthenticateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthenticateResponse> _instance;
} _AuthenticateResponse_default_instance_;
class ConvertSessionToToken_MetaEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConvertSessionToToken_MetaEntry_DoNotUse> _instance;
} _ConvertSessionToToken_MetaEntry_DoNotUse_default_instance_;
class ConvertSessionToTokenDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConvertSessionToToken> _instance;
} _ConvertSessionToToken_default_instance_;
class ConvertSessionToTokenResponse_MetaEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConvertSessionToTokenResponse_MetaEntry_DoNotUse> _instance;
} _ConvertSessionToTokenResponse_MetaEntry_DoNotUse_default_instance_;
class ConvertSessionToTokenResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConvertSessionToTokenResponse> _instance;
} _ConvertSessionToTokenResponse_default_instance_;
class CreateTodoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateTodo> _instance;
} _CreateTodo_default_instance_;
class CreateTodoResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateTodoResponse> _instance;
} _CreateTodoResponse_default_instance_;
class DeleteTodoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteTodo> _instance;
} _DeleteTodo_default_instance_;
class DeleteTodosDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteTodos> _instance;
} _DeleteTodos_default_instance_;
class EmptyResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EmptyResponse> _instance;
} _EmptyResponse_default_instance_;
class FileContentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FileContent> _instance;
} _FileContent_default_instance_;
class GetAccessToken_MetaEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetAccessToken_MetaEntry_DoNotUse> _instance;
} _GetAccessToken_MetaEntry_DoNotUse_default_instance_;
class GetAccessTokenDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetAccessToken> _instance;
} _GetAccessToken_default_instance_;
class GetAccessTokenResponse_MetaEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetAccessTokenResponse_MetaEntry_DoNotUse> _instance;
} _GetAccessTokenResponse_MetaEntry_DoNotUse_default_instance_;
class GetAccessTokenResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetAccessTokenResponse> _instance;
} _GetAccessTokenResponse_default_instance_;
class GetTodoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetTodo> _instance;
} _GetTodo_default_instance_;
class GetTodoResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetTodoResponse> _instance;
} _GetTodoResponse_default_instance_;
class GetTodosDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetTodos> _instance;
} _GetTodos_default_instance_;
class GetTodosResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetTodosResponse> _instance;
} _GetTodosResponse_default_instance_;
class HelloDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Hello> _instance;
} _Hello_default_instance_;
class HelloResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HelloResponse> _instance;
} _HelloResponse_default_instance_;
class HelloSecureDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HelloSecure> _instance;
} _HelloSecure_default_instance_;
class Register_MetaEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Register_MetaEntry_DoNotUse> _instance;
} _Register_MetaEntry_DoNotUse_default_instance_;
class RegisterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Register> _instance;
} _Register_default_instance_;
class RegisterResponse_MetaEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegisterResponse_MetaEntry_DoNotUse> _instance;
} _RegisterResponse_MetaEntry_DoNotUse_default_instance_;
class RegisterResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegisterResponse> _instance;
} _RegisterResponse_default_instance_;
class ResetTodosDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResetTodos> _instance;
} _ResetTodos_default_instance_;
class ResponseError_MetaEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResponseError_MetaEntry_DoNotUse> _instance;
} _ResponseError_MetaEntry_DoNotUse_default_instance_;
class ResponseErrorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResponseError> _instance;
} _ResponseError_default_instance_;
class ResponseStatus_MetaEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResponseStatus_MetaEntry_DoNotUse> _instance;
} _ResponseStatus_MetaEntry_DoNotUse_default_instance_;
class ResponseStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResponseStatus> _instance;
} _ResponseStatus_default_instance_;
class StreamFilesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StreamFiles> _instance;
} _StreamFiles_default_instance_;
class StreamServerEventsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StreamServerEvents> _instance;
} _StreamServerEvents_default_instance_;
class StreamServerEventsResponse_MetaEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StreamServerEventsResponse_MetaEntry_DoNotUse> _instance;
} _StreamServerEventsResponse_MetaEntry_DoNotUse_default_instance_;
class StreamServerEventsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StreamServerEventsResponse> _instance;
} _StreamServerEventsResponse_default_instance_;
class TodoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Todo> _instance;
} _Todo_default_instance_;
class UnAssignRoles_MetaEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnAssignRoles_MetaEntry_DoNotUse> _instance;
} _UnAssignRoles_MetaEntry_DoNotUse_default_instance_;
class UnAssignRolesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnAssignRoles> _instance;
} _UnAssignRoles_default_instance_;
class UnAssignRolesResponse_MetaEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnAssignRolesResponse_MetaEntry_DoNotUse> _instance;
} _UnAssignRolesResponse_MetaEntry_DoNotUse_default_instance_;
class UnAssignRolesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnAssignRolesResponse> _instance;
} _UnAssignRolesResponse_default_instance_;
class UpdateTodoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateTodo> _instance;
} _UpdateTodo_default_instance_;
static void InitDefaultsAssignRoles_MetaEntry_DoNotUse_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_AssignRoles_MetaEntry_DoNotUse_default_instance_;
    new (ptr) ::AssignRoles_MetaEntry_DoNotUse();
  }
  ::AssignRoles_MetaEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AssignRoles_MetaEntry_DoNotUse_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAssignRoles_MetaEntry_DoNotUse_services_2eproto}, {}};

static void InitDefaultsAssignRoles_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_AssignRoles_default_instance_;
    new (ptr) ::AssignRoles();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AssignRoles::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AssignRoles_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAssignRoles_services_2eproto}, {
      &scc_info_AssignRoles_MetaEntry_DoNotUse_services_2eproto.base,}};

static void InitDefaultsAssignRolesResponse_MetaEntry_DoNotUse_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_AssignRolesResponse_MetaEntry_DoNotUse_default_instance_;
    new (ptr) ::AssignRolesResponse_MetaEntry_DoNotUse();
  }
  ::AssignRolesResponse_MetaEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AssignRolesResponse_MetaEntry_DoNotUse_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAssignRolesResponse_MetaEntry_DoNotUse_services_2eproto}, {}};

static void InitDefaultsAssignRolesResponse_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_AssignRolesResponse_default_instance_;
    new (ptr) ::AssignRolesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AssignRolesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_AssignRolesResponse_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsAssignRolesResponse_services_2eproto}, {
      &scc_info_AssignRolesResponse_MetaEntry_DoNotUse_services_2eproto.base,
      &scc_info_ResponseStatus_services_2eproto.base,}};

static void InitDefaultsAuthenticate_MetaEntry_DoNotUse_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Authenticate_MetaEntry_DoNotUse_default_instance_;
    new (ptr) ::Authenticate_MetaEntry_DoNotUse();
  }
  ::Authenticate_MetaEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Authenticate_MetaEntry_DoNotUse_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAuthenticate_MetaEntry_DoNotUse_services_2eproto}, {}};

static void InitDefaultsAuthenticate_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Authenticate_default_instance_;
    new (ptr) ::Authenticate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Authenticate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Authenticate_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAuthenticate_services_2eproto}, {
      &scc_info_Authenticate_MetaEntry_DoNotUse_services_2eproto.base,}};

static void InitDefaultsAuthenticateResponse_MetaEntry_DoNotUse_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_AuthenticateResponse_MetaEntry_DoNotUse_default_instance_;
    new (ptr) ::AuthenticateResponse_MetaEntry_DoNotUse();
  }
  ::AuthenticateResponse_MetaEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AuthenticateResponse_MetaEntry_DoNotUse_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAuthenticateResponse_MetaEntry_DoNotUse_services_2eproto}, {}};

static void InitDefaultsAuthenticateResponse_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_AuthenticateResponse_default_instance_;
    new (ptr) ::AuthenticateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AuthenticateResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_AuthenticateResponse_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsAuthenticateResponse_services_2eproto}, {
      &scc_info_ResponseStatus_services_2eproto.base,
      &scc_info_AuthenticateResponse_MetaEntry_DoNotUse_services_2eproto.base,}};

static void InitDefaultsConvertSessionToToken_MetaEntry_DoNotUse_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ConvertSessionToToken_MetaEntry_DoNotUse_default_instance_;
    new (ptr) ::ConvertSessionToToken_MetaEntry_DoNotUse();
  }
  ::ConvertSessionToToken_MetaEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConvertSessionToToken_MetaEntry_DoNotUse_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConvertSessionToToken_MetaEntry_DoNotUse_services_2eproto}, {}};

static void InitDefaultsConvertSessionToToken_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ConvertSessionToToken_default_instance_;
    new (ptr) ::ConvertSessionToToken();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ConvertSessionToToken::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ConvertSessionToToken_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsConvertSessionToToken_services_2eproto}, {
      &scc_info_ConvertSessionToToken_MetaEntry_DoNotUse_services_2eproto.base,}};

static void InitDefaultsConvertSessionToTokenResponse_MetaEntry_DoNotUse_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ConvertSessionToTokenResponse_MetaEntry_DoNotUse_default_instance_;
    new (ptr) ::ConvertSessionToTokenResponse_MetaEntry_DoNotUse();
  }
  ::ConvertSessionToTokenResponse_MetaEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConvertSessionToTokenResponse_MetaEntry_DoNotUse_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConvertSessionToTokenResponse_MetaEntry_DoNotUse_services_2eproto}, {}};

static void InitDefaultsConvertSessionToTokenResponse_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ConvertSessionToTokenResponse_default_instance_;
    new (ptr) ::ConvertSessionToTokenResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ConvertSessionToTokenResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ConvertSessionToTokenResponse_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsConvertSessionToTokenResponse_services_2eproto}, {
      &scc_info_ConvertSessionToTokenResponse_MetaEntry_DoNotUse_services_2eproto.base,
      &scc_info_ResponseStatus_services_2eproto.base,}};

static void InitDefaultsCreateTodo_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CreateTodo_default_instance_;
    new (ptr) ::CreateTodo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CreateTodo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateTodo_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateTodo_services_2eproto}, {}};

static void InitDefaultsCreateTodoResponse_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CreateTodoResponse_default_instance_;
    new (ptr) ::CreateTodoResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CreateTodoResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CreateTodoResponse_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCreateTodoResponse_services_2eproto}, {
      &scc_info_Todo_services_2eproto.base,
      &scc_info_ResponseStatus_services_2eproto.base,}};

static void InitDefaultsDeleteTodo_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_DeleteTodo_default_instance_;
    new (ptr) ::DeleteTodo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DeleteTodo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteTodo_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteTodo_services_2eproto}, {}};

static void InitDefaultsDeleteTodos_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_DeleteTodos_default_instance_;
    new (ptr) ::DeleteTodos();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DeleteTodos::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteTodos_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteTodos_services_2eproto}, {}};

static void InitDefaultsEmptyResponse_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_EmptyResponse_default_instance_;
    new (ptr) ::EmptyResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::EmptyResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_EmptyResponse_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEmptyResponse_services_2eproto}, {
      &scc_info_ResponseStatus_services_2eproto.base,}};

static void InitDefaultsFileContent_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_FileContent_default_instance_;
    new (ptr) ::FileContent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FileContent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_FileContent_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsFileContent_services_2eproto}, {
      &scc_info_ResponseStatus_services_2eproto.base,}};

static void InitDefaultsGetAccessToken_MetaEntry_DoNotUse_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GetAccessToken_MetaEntry_DoNotUse_default_instance_;
    new (ptr) ::GetAccessToken_MetaEntry_DoNotUse();
  }
  ::GetAccessToken_MetaEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetAccessToken_MetaEntry_DoNotUse_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetAccessToken_MetaEntry_DoNotUse_services_2eproto}, {}};

static void InitDefaultsGetAccessToken_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GetAccessToken_default_instance_;
    new (ptr) ::GetAccessToken();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetAccessToken::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetAccessToken_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetAccessToken_services_2eproto}, {
      &scc_info_GetAccessToken_MetaEntry_DoNotUse_services_2eproto.base,}};

static void InitDefaultsGetAccessTokenResponse_MetaEntry_DoNotUse_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GetAccessTokenResponse_MetaEntry_DoNotUse_default_instance_;
    new (ptr) ::GetAccessTokenResponse_MetaEntry_DoNotUse();
  }
  ::GetAccessTokenResponse_MetaEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetAccessTokenResponse_MetaEntry_DoNotUse_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetAccessTokenResponse_MetaEntry_DoNotUse_services_2eproto}, {}};

static void InitDefaultsGetAccessTokenResponse_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GetAccessTokenResponse_default_instance_;
    new (ptr) ::GetAccessTokenResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetAccessTokenResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_GetAccessTokenResponse_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsGetAccessTokenResponse_services_2eproto}, {
      &scc_info_GetAccessTokenResponse_MetaEntry_DoNotUse_services_2eproto.base,
      &scc_info_ResponseStatus_services_2eproto.base,}};

static void InitDefaultsGetTodo_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GetTodo_default_instance_;
    new (ptr) ::GetTodo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetTodo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetTodo_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetTodo_services_2eproto}, {}};

static void InitDefaultsGetTodoResponse_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GetTodoResponse_default_instance_;
    new (ptr) ::GetTodoResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetTodoResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_GetTodoResponse_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsGetTodoResponse_services_2eproto}, {
      &scc_info_Todo_services_2eproto.base,
      &scc_info_ResponseStatus_services_2eproto.base,}};

static void InitDefaultsGetTodos_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GetTodos_default_instance_;
    new (ptr) ::GetTodos();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetTodos::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetTodos_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetTodos_services_2eproto}, {}};

static void InitDefaultsGetTodosResponse_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GetTodosResponse_default_instance_;
    new (ptr) ::GetTodosResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetTodosResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_GetTodosResponse_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsGetTodosResponse_services_2eproto}, {
      &scc_info_Todo_services_2eproto.base,
      &scc_info_ResponseStatus_services_2eproto.base,}};

static void InitDefaultsHello_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Hello_default_instance_;
    new (ptr) ::Hello();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Hello::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Hello_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHello_services_2eproto}, {}};

static void InitDefaultsHelloResponse_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_HelloResponse_default_instance_;
    new (ptr) ::HelloResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HelloResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_HelloResponse_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsHelloResponse_services_2eproto}, {
      &scc_info_ResponseStatus_services_2eproto.base,}};

static void InitDefaultsHelloSecure_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_HelloSecure_default_instance_;
    new (ptr) ::HelloSecure();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HelloSecure::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HelloSecure_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHelloSecure_services_2eproto}, {}};

static void InitDefaultsRegister_MetaEntry_DoNotUse_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Register_MetaEntry_DoNotUse_default_instance_;
    new (ptr) ::Register_MetaEntry_DoNotUse();
  }
  ::Register_MetaEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Register_MetaEntry_DoNotUse_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRegister_MetaEntry_DoNotUse_services_2eproto}, {}};

static void InitDefaultsRegister_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Register_default_instance_;
    new (ptr) ::Register();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Register::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Register_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRegister_services_2eproto}, {
      &scc_info_Register_MetaEntry_DoNotUse_services_2eproto.base,}};

static void InitDefaultsRegisterResponse_MetaEntry_DoNotUse_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_RegisterResponse_MetaEntry_DoNotUse_default_instance_;
    new (ptr) ::RegisterResponse_MetaEntry_DoNotUse();
  }
  ::RegisterResponse_MetaEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RegisterResponse_MetaEntry_DoNotUse_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRegisterResponse_MetaEntry_DoNotUse_services_2eproto}, {}};

static void InitDefaultsRegisterResponse_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_RegisterResponse_default_instance_;
    new (ptr) ::RegisterResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RegisterResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_RegisterResponse_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsRegisterResponse_services_2eproto}, {
      &scc_info_ResponseStatus_services_2eproto.base,
      &scc_info_RegisterResponse_MetaEntry_DoNotUse_services_2eproto.base,}};

static void InitDefaultsResetTodos_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ResetTodos_default_instance_;
    new (ptr) ::ResetTodos();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ResetTodos::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ResetTodos_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResetTodos_services_2eproto}, {}};

static void InitDefaultsResponseError_MetaEntry_DoNotUse_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ResponseError_MetaEntry_DoNotUse_default_instance_;
    new (ptr) ::ResponseError_MetaEntry_DoNotUse();
  }
  ::ResponseError_MetaEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ResponseError_MetaEntry_DoNotUse_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResponseError_MetaEntry_DoNotUse_services_2eproto}, {}};

static void InitDefaultsResponseError_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ResponseError_default_instance_;
    new (ptr) ::ResponseError();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ResponseError::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ResponseError_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsResponseError_services_2eproto}, {
      &scc_info_ResponseError_MetaEntry_DoNotUse_services_2eproto.base,}};

static void InitDefaultsResponseStatus_MetaEntry_DoNotUse_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ResponseStatus_MetaEntry_DoNotUse_default_instance_;
    new (ptr) ::ResponseStatus_MetaEntry_DoNotUse();
  }
  ::ResponseStatus_MetaEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ResponseStatus_MetaEntry_DoNotUse_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResponseStatus_MetaEntry_DoNotUse_services_2eproto}, {}};

static void InitDefaultsResponseStatus_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ResponseStatus_default_instance_;
    new (ptr) ::ResponseStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ResponseStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ResponseStatus_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsResponseStatus_services_2eproto}, {
      &scc_info_ResponseError_services_2eproto.base,
      &scc_info_ResponseStatus_MetaEntry_DoNotUse_services_2eproto.base,}};

static void InitDefaultsStreamFiles_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_StreamFiles_default_instance_;
    new (ptr) ::StreamFiles();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::StreamFiles::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StreamFiles_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStreamFiles_services_2eproto}, {}};

static void InitDefaultsStreamServerEvents_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_StreamServerEvents_default_instance_;
    new (ptr) ::StreamServerEvents();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::StreamServerEvents::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StreamServerEvents_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStreamServerEvents_services_2eproto}, {}};

static void InitDefaultsStreamServerEventsResponse_MetaEntry_DoNotUse_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_StreamServerEventsResponse_MetaEntry_DoNotUse_default_instance_;
    new (ptr) ::StreamServerEventsResponse_MetaEntry_DoNotUse();
  }
  ::StreamServerEventsResponse_MetaEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StreamServerEventsResponse_MetaEntry_DoNotUse_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStreamServerEventsResponse_MetaEntry_DoNotUse_services_2eproto}, {}};

static void InitDefaultsStreamServerEventsResponse_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_StreamServerEventsResponse_default_instance_;
    new (ptr) ::StreamServerEventsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::StreamServerEventsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_StreamServerEventsResponse_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsStreamServerEventsResponse_services_2eproto}, {
      &scc_info_StreamServerEventsResponse_MetaEntry_DoNotUse_services_2eproto.base,
      &scc_info_ResponseStatus_services_2eproto.base,}};

static void InitDefaultsTodo_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Todo_default_instance_;
    new (ptr) ::Todo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Todo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Todo_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTodo_services_2eproto}, {}};

static void InitDefaultsUnAssignRoles_MetaEntry_DoNotUse_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_UnAssignRoles_MetaEntry_DoNotUse_default_instance_;
    new (ptr) ::UnAssignRoles_MetaEntry_DoNotUse();
  }
  ::UnAssignRoles_MetaEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UnAssignRoles_MetaEntry_DoNotUse_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUnAssignRoles_MetaEntry_DoNotUse_services_2eproto}, {}};

static void InitDefaultsUnAssignRoles_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_UnAssignRoles_default_instance_;
    new (ptr) ::UnAssignRoles();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UnAssignRoles::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UnAssignRoles_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUnAssignRoles_services_2eproto}, {
      &scc_info_UnAssignRoles_MetaEntry_DoNotUse_services_2eproto.base,}};

static void InitDefaultsUnAssignRolesResponse_MetaEntry_DoNotUse_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_UnAssignRolesResponse_MetaEntry_DoNotUse_default_instance_;
    new (ptr) ::UnAssignRolesResponse_MetaEntry_DoNotUse();
  }
  ::UnAssignRolesResponse_MetaEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UnAssignRolesResponse_MetaEntry_DoNotUse_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUnAssignRolesResponse_MetaEntry_DoNotUse_services_2eproto}, {}};

static void InitDefaultsUnAssignRolesResponse_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_UnAssignRolesResponse_default_instance_;
    new (ptr) ::UnAssignRolesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UnAssignRolesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UnAssignRolesResponse_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUnAssignRolesResponse_services_2eproto}, {
      &scc_info_UnAssignRolesResponse_MetaEntry_DoNotUse_services_2eproto.base,
      &scc_info_ResponseStatus_services_2eproto.base,}};

static void InitDefaultsUpdateTodo_services_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_UpdateTodo_default_instance_;
    new (ptr) ::UpdateTodo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UpdateTodo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UpdateTodo_services_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUpdateTodo_services_2eproto}, {}};

void InitDefaults_services_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_AssignRoles_MetaEntry_DoNotUse_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AssignRoles_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AssignRolesResponse_MetaEntry_DoNotUse_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AssignRolesResponse_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Authenticate_MetaEntry_DoNotUse_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Authenticate_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AuthenticateResponse_MetaEntry_DoNotUse_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AuthenticateResponse_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConvertSessionToToken_MetaEntry_DoNotUse_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConvertSessionToToken_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConvertSessionToTokenResponse_MetaEntry_DoNotUse_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConvertSessionToTokenResponse_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateTodo_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateTodoResponse_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteTodo_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteTodos_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EmptyResponse_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FileContent_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetAccessToken_MetaEntry_DoNotUse_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetAccessToken_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetAccessTokenResponse_MetaEntry_DoNotUse_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetAccessTokenResponse_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetTodo_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetTodoResponse_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetTodos_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetTodosResponse_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Hello_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HelloResponse_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HelloSecure_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Register_MetaEntry_DoNotUse_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Register_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RegisterResponse_MetaEntry_DoNotUse_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RegisterResponse_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResetTodos_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResponseError_MetaEntry_DoNotUse_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResponseError_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResponseStatus_MetaEntry_DoNotUse_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResponseStatus_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StreamFiles_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StreamServerEvents_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StreamServerEventsResponse_MetaEntry_DoNotUse_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StreamServerEventsResponse_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Todo_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UnAssignRoles_MetaEntry_DoNotUse_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UnAssignRoles_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UnAssignRolesResponse_MetaEntry_DoNotUse_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UnAssignRolesResponse_services_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateTodo_services_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_services_2eproto[48];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_services_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_services_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_services_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::AssignRoles_MetaEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::AssignRoles_MetaEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AssignRoles_MetaEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::AssignRoles_MetaEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AssignRoles, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AssignRoles, username_),
  PROTOBUF_FIELD_OFFSET(::AssignRoles, permissions_),
  PROTOBUF_FIELD_OFFSET(::AssignRoles, roles_),
  PROTOBUF_FIELD_OFFSET(::AssignRoles, meta_),
  PROTOBUF_FIELD_OFFSET(::AssignRolesResponse_MetaEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::AssignRolesResponse_MetaEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AssignRolesResponse_MetaEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::AssignRolesResponse_MetaEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AssignRolesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AssignRolesResponse, allroles_),
  PROTOBUF_FIELD_OFFSET(::AssignRolesResponse, allpermissions_),
  PROTOBUF_FIELD_OFFSET(::AssignRolesResponse, meta_),
  PROTOBUF_FIELD_OFFSET(::AssignRolesResponse, responsestatus_),
  PROTOBUF_FIELD_OFFSET(::Authenticate_MetaEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::Authenticate_MetaEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Authenticate_MetaEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::Authenticate_MetaEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Authenticate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Authenticate, provider_),
  PROTOBUF_FIELD_OFFSET(::Authenticate, state_),
  PROTOBUF_FIELD_OFFSET(::Authenticate, oauth_token_),
  PROTOBUF_FIELD_OFFSET(::Authenticate, oauth_verifier_),
  PROTOBUF_FIELD_OFFSET(::Authenticate, username_),
  PROTOBUF_FIELD_OFFSET(::Authenticate, password_),
  PROTOBUF_FIELD_OFFSET(::Authenticate, rememberme_),
  PROTOBUF_FIELD_OFFSET(::Authenticate, continue__),
  PROTOBUF_FIELD_OFFSET(::Authenticate, errorview_),
  PROTOBUF_FIELD_OFFSET(::Authenticate, nonce_),
  PROTOBUF_FIELD_OFFSET(::Authenticate, uri_),
  PROTOBUF_FIELD_OFFSET(::Authenticate, response_),
  PROTOBUF_FIELD_OFFSET(::Authenticate, qop_),
  PROTOBUF_FIELD_OFFSET(::Authenticate, nc_),
  PROTOBUF_FIELD_OFFSET(::Authenticate, cnonce_),
  PROTOBUF_FIELD_OFFSET(::Authenticate, usetokencookie_),
  PROTOBUF_FIELD_OFFSET(::Authenticate, accesstoken_),
  PROTOBUF_FIELD_OFFSET(::Authenticate, accesstokensecret_),
  PROTOBUF_FIELD_OFFSET(::Authenticate, scope_),
  PROTOBUF_FIELD_OFFSET(::Authenticate, meta_),
  PROTOBUF_FIELD_OFFSET(::AuthenticateResponse_MetaEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::AuthenticateResponse_MetaEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AuthenticateResponse_MetaEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::AuthenticateResponse_MetaEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AuthenticateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AuthenticateResponse, userid_),
  PROTOBUF_FIELD_OFFSET(::AuthenticateResponse, sessionid_),
  PROTOBUF_FIELD_OFFSET(::AuthenticateResponse, username_),
  PROTOBUF_FIELD_OFFSET(::AuthenticateResponse, displayname_),
  PROTOBUF_FIELD_OFFSET(::AuthenticateResponse, referrerurl_),
  PROTOBUF_FIELD_OFFSET(::AuthenticateResponse, bearertoken_),
  PROTOBUF_FIELD_OFFSET(::AuthenticateResponse, refreshtoken_),
  PROTOBUF_FIELD_OFFSET(::AuthenticateResponse, profileurl_),
  PROTOBUF_FIELD_OFFSET(::AuthenticateResponse, roles_),
  PROTOBUF_FIELD_OFFSET(::AuthenticateResponse, permissions_),
  PROTOBUF_FIELD_OFFSET(::AuthenticateResponse, responsestatus_),
  PROTOBUF_FIELD_OFFSET(::AuthenticateResponse, meta_),
  PROTOBUF_FIELD_OFFSET(::ConvertSessionToToken_MetaEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ConvertSessionToToken_MetaEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ConvertSessionToToken_MetaEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::ConvertSessionToToken_MetaEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ConvertSessionToToken, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ConvertSessionToToken, preservesession_),
  PROTOBUF_FIELD_OFFSET(::ConvertSessionToToken, meta_),
  PROTOBUF_FIELD_OFFSET(::ConvertSessionToTokenResponse_MetaEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ConvertSessionToTokenResponse_MetaEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ConvertSessionToTokenResponse_MetaEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::ConvertSessionToTokenResponse_MetaEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ConvertSessionToTokenResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ConvertSessionToTokenResponse, meta_),
  PROTOBUF_FIELD_OFFSET(::ConvertSessionToTokenResponse, accesstoken_),
  PROTOBUF_FIELD_OFFSET(::ConvertSessionToTokenResponse, refreshtoken_),
  PROTOBUF_FIELD_OFFSET(::ConvertSessionToTokenResponse, responsestatus_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CreateTodo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CreateTodo, title_),
  PROTOBUF_FIELD_OFFSET(::CreateTodo, order_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CreateTodoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CreateTodoResponse, result_),
  PROTOBUF_FIELD_OFFSET(::CreateTodoResponse, responsestatus_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::DeleteTodo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::DeleteTodo, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::DeleteTodos, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::DeleteTodos, ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::EmptyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::EmptyResponse, responsestatus_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::FileContent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::FileContent, name_),
  PROTOBUF_FIELD_OFFSET(::FileContent, type_),
  PROTOBUF_FIELD_OFFSET(::FileContent, length_),
  PROTOBUF_FIELD_OFFSET(::FileContent, body_),
  PROTOBUF_FIELD_OFFSET(::FileContent, responsestatus_),
  PROTOBUF_FIELD_OFFSET(::GetAccessToken_MetaEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::GetAccessToken_MetaEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GetAccessToken_MetaEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::GetAccessToken_MetaEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GetAccessToken, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GetAccessToken, refreshtoken_),
  PROTOBUF_FIELD_OFFSET(::GetAccessToken, usetokencookie_),
  PROTOBUF_FIELD_OFFSET(::GetAccessToken, meta_),
  PROTOBUF_FIELD_OFFSET(::GetAccessTokenResponse_MetaEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::GetAccessTokenResponse_MetaEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GetAccessTokenResponse_MetaEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::GetAccessTokenResponse_MetaEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GetAccessTokenResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GetAccessTokenResponse, accesstoken_),
  PROTOBUF_FIELD_OFFSET(::GetAccessTokenResponse, meta_),
  PROTOBUF_FIELD_OFFSET(::GetAccessTokenResponse, responsestatus_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GetTodo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GetTodo, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GetTodoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GetTodoResponse, result_),
  PROTOBUF_FIELD_OFFSET(::GetTodoResponse, responsestatus_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GetTodos, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GetTodosResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GetTodosResponse, results_),
  PROTOBUF_FIELD_OFFSET(::GetTodosResponse, responsestatus_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Hello, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Hello, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::HelloResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::HelloResponse, result_),
  PROTOBUF_FIELD_OFFSET(::HelloResponse, responsestatus_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::HelloSecure, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::HelloSecure, name_),
  PROTOBUF_FIELD_OFFSET(::Register_MetaEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::Register_MetaEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Register_MetaEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::Register_MetaEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Register, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Register, username_),
  PROTOBUF_FIELD_OFFSET(::Register, firstname_),
  PROTOBUF_FIELD_OFFSET(::Register, lastname_),
  PROTOBUF_FIELD_OFFSET(::Register, displayname_),
  PROTOBUF_FIELD_OFFSET(::Register, email_),
  PROTOBUF_FIELD_OFFSET(::Register, password_),
  PROTOBUF_FIELD_OFFSET(::Register, confirmpassword_),
  PROTOBUF_FIELD_OFFSET(::Register, autologin_),
  PROTOBUF_FIELD_OFFSET(::Register, continue__),
  PROTOBUF_FIELD_OFFSET(::Register, errorview_),
  PROTOBUF_FIELD_OFFSET(::Register, meta_),
  PROTOBUF_FIELD_OFFSET(::RegisterResponse_MetaEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::RegisterResponse_MetaEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::RegisterResponse_MetaEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::RegisterResponse_MetaEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::RegisterResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::RegisterResponse, userid_),
  PROTOBUF_FIELD_OFFSET(::RegisterResponse, sessionid_),
  PROTOBUF_FIELD_OFFSET(::RegisterResponse, username_),
  PROTOBUF_FIELD_OFFSET(::RegisterResponse, referrerurl_),
  PROTOBUF_FIELD_OFFSET(::RegisterResponse, bearertoken_),
  PROTOBUF_FIELD_OFFSET(::RegisterResponse, refreshtoken_),
  PROTOBUF_FIELD_OFFSET(::RegisterResponse, responsestatus_),
  PROTOBUF_FIELD_OFFSET(::RegisterResponse, meta_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ResetTodos, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ResponseError_MetaEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ResponseError_MetaEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ResponseError_MetaEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::ResponseError_MetaEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ResponseError, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ResponseError, errorcode_),
  PROTOBUF_FIELD_OFFSET(::ResponseError, fieldname_),
  PROTOBUF_FIELD_OFFSET(::ResponseError, message_),
  PROTOBUF_FIELD_OFFSET(::ResponseError, meta_),
  PROTOBUF_FIELD_OFFSET(::ResponseStatus_MetaEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ResponseStatus_MetaEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ResponseStatus_MetaEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::ResponseStatus_MetaEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ResponseStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ResponseStatus, errorcode_),
  PROTOBUF_FIELD_OFFSET(::ResponseStatus, message_),
  PROTOBUF_FIELD_OFFSET(::ResponseStatus, stacktrace_),
  PROTOBUF_FIELD_OFFSET(::ResponseStatus, errors_),
  PROTOBUF_FIELD_OFFSET(::ResponseStatus, meta_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::StreamFiles, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::StreamFiles, paths_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::StreamServerEvents, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::StreamServerEvents, channels_),
  PROTOBUF_FIELD_OFFSET(::StreamServerEventsResponse_MetaEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::StreamServerEventsResponse_MetaEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::StreamServerEventsResponse_MetaEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::StreamServerEventsResponse_MetaEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::StreamServerEventsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::StreamServerEventsResponse, eventid_),
  PROTOBUF_FIELD_OFFSET(::StreamServerEventsResponse, channel_),
  PROTOBUF_FIELD_OFFSET(::StreamServerEventsResponse, selector_),
  PROTOBUF_FIELD_OFFSET(::StreamServerEventsResponse, json_),
  PROTOBUF_FIELD_OFFSET(::StreamServerEventsResponse, op_),
  PROTOBUF_FIELD_OFFSET(::StreamServerEventsResponse, target_),
  PROTOBUF_FIELD_OFFSET(::StreamServerEventsResponse, cssselector_),
  PROTOBUF_FIELD_OFFSET(::StreamServerEventsResponse, meta_),
  PROTOBUF_FIELD_OFFSET(::StreamServerEventsResponse, userid_),
  PROTOBUF_FIELD_OFFSET(::StreamServerEventsResponse, displayname_),
  PROTOBUF_FIELD_OFFSET(::StreamServerEventsResponse, profileurl_),
  PROTOBUF_FIELD_OFFSET(::StreamServerEventsResponse, isauthenticated_),
  PROTOBUF_FIELD_OFFSET(::StreamServerEventsResponse, channels_),
  PROTOBUF_FIELD_OFFSET(::StreamServerEventsResponse, createdat_),
  PROTOBUF_FIELD_OFFSET(::StreamServerEventsResponse, id_),
  PROTOBUF_FIELD_OFFSET(::StreamServerEventsResponse, unregisterurl_),
  PROTOBUF_FIELD_OFFSET(::StreamServerEventsResponse, updatesubscriberurl_),
  PROTOBUF_FIELD_OFFSET(::StreamServerEventsResponse, heartbeaturl_),
  PROTOBUF_FIELD_OFFSET(::StreamServerEventsResponse, heartbeatintervalms_),
  PROTOBUF_FIELD_OFFSET(::StreamServerEventsResponse, idletimeoutms_),
  PROTOBUF_FIELD_OFFSET(::StreamServerEventsResponse, responsestatus_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Todo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Todo, id_),
  PROTOBUF_FIELD_OFFSET(::Todo, title_),
  PROTOBUF_FIELD_OFFSET(::Todo, order_),
  PROTOBUF_FIELD_OFFSET(::Todo, completed_),
  PROTOBUF_FIELD_OFFSET(::UnAssignRoles_MetaEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::UnAssignRoles_MetaEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnAssignRoles_MetaEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::UnAssignRoles_MetaEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnAssignRoles, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnAssignRoles, username_),
  PROTOBUF_FIELD_OFFSET(::UnAssignRoles, permissions_),
  PROTOBUF_FIELD_OFFSET(::UnAssignRoles, roles_),
  PROTOBUF_FIELD_OFFSET(::UnAssignRoles, meta_),
  PROTOBUF_FIELD_OFFSET(::UnAssignRolesResponse_MetaEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::UnAssignRolesResponse_MetaEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnAssignRolesResponse_MetaEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::UnAssignRolesResponse_MetaEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnAssignRolesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnAssignRolesResponse, allroles_),
  PROTOBUF_FIELD_OFFSET(::UnAssignRolesResponse, allpermissions_),
  PROTOBUF_FIELD_OFFSET(::UnAssignRolesResponse, meta_),
  PROTOBUF_FIELD_OFFSET(::UnAssignRolesResponse, responsestatus_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UpdateTodo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UpdateTodo, id_),
  PROTOBUF_FIELD_OFFSET(::UpdateTodo, title_),
  PROTOBUF_FIELD_OFFSET(::UpdateTodo, order_),
  PROTOBUF_FIELD_OFFSET(::UpdateTodo, completed_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::AssignRoles_MetaEntry_DoNotUse)},
  { 9, -1, sizeof(::AssignRoles)},
  { 18, 25, sizeof(::AssignRolesResponse_MetaEntry_DoNotUse)},
  { 27, -1, sizeof(::AssignRolesResponse)},
  { 36, 43, sizeof(::Authenticate_MetaEntry_DoNotUse)},
  { 45, -1, sizeof(::Authenticate)},
  { 70, 77, sizeof(::AuthenticateResponse_MetaEntry_DoNotUse)},
  { 79, -1, sizeof(::AuthenticateResponse)},
  { 96, 103, sizeof(::ConvertSessionToToken_MetaEntry_DoNotUse)},
  { 105, -1, sizeof(::ConvertSessionToToken)},
  { 112, 119, sizeof(::ConvertSessionToTokenResponse_MetaEntry_DoNotUse)},
  { 121, -1, sizeof(::ConvertSessionToTokenResponse)},
  { 130, -1, sizeof(::CreateTodo)},
  { 137, -1, sizeof(::CreateTodoResponse)},
  { 144, -1, sizeof(::DeleteTodo)},
  { 150, -1, sizeof(::DeleteTodos)},
  { 156, -1, sizeof(::EmptyResponse)},
  { 162, -1, sizeof(::FileContent)},
  { 172, 179, sizeof(::GetAccessToken_MetaEntry_DoNotUse)},
  { 181, -1, sizeof(::GetAccessToken)},
  { 189, 196, sizeof(::GetAccessTokenResponse_MetaEntry_DoNotUse)},
  { 198, -1, sizeof(::GetAccessTokenResponse)},
  { 206, -1, sizeof(::GetTodo)},
  { 212, -1, sizeof(::GetTodoResponse)},
  { 219, -1, sizeof(::GetTodos)},
  { 224, -1, sizeof(::GetTodosResponse)},
  { 231, -1, sizeof(::Hello)},
  { 237, -1, sizeof(::HelloResponse)},
  { 244, -1, sizeof(::HelloSecure)},
  { 250, 257, sizeof(::Register_MetaEntry_DoNotUse)},
  { 259, -1, sizeof(::Register)},
  { 275, 282, sizeof(::RegisterResponse_MetaEntry_DoNotUse)},
  { 284, -1, sizeof(::RegisterResponse)},
  { 297, -1, sizeof(::ResetTodos)},
  { 302, 309, sizeof(::ResponseError_MetaEntry_DoNotUse)},
  { 311, -1, sizeof(::ResponseError)},
  { 320, 327, sizeof(::ResponseStatus_MetaEntry_DoNotUse)},
  { 329, -1, sizeof(::ResponseStatus)},
  { 339, -1, sizeof(::StreamFiles)},
  { 345, -1, sizeof(::StreamServerEvents)},
  { 351, 358, sizeof(::StreamServerEventsResponse_MetaEntry_DoNotUse)},
  { 360, -1, sizeof(::StreamServerEventsResponse)},
  { 386, -1, sizeof(::Todo)},
  { 395, 402, sizeof(::UnAssignRoles_MetaEntry_DoNotUse)},
  { 404, -1, sizeof(::UnAssignRoles)},
  { 413, 420, sizeof(::UnAssignRolesResponse_MetaEntry_DoNotUse)},
  { 422, -1, sizeof(::UnAssignRolesResponse)},
  { 431, -1, sizeof(::UpdateTodo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AssignRoles_MetaEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AssignRoles_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AssignRolesResponse_MetaEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AssignRolesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Authenticate_MetaEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Authenticate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AuthenticateResponse_MetaEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AuthenticateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ConvertSessionToToken_MetaEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ConvertSessionToToken_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ConvertSessionToTokenResponse_MetaEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ConvertSessionToTokenResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CreateTodo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CreateTodoResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DeleteTodo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DeleteTodos_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_EmptyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_FileContent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GetAccessToken_MetaEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GetAccessToken_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GetAccessTokenResponse_MetaEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GetAccessTokenResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GetTodo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GetTodoResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GetTodos_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GetTodosResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Hello_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_HelloResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_HelloSecure_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Register_MetaEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Register_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RegisterResponse_MetaEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RegisterResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ResetTodos_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ResponseError_MetaEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ResponseError_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ResponseStatus_MetaEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ResponseStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_StreamFiles_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_StreamServerEvents_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_StreamServerEventsResponse_MetaEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_StreamServerEventsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Todo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UnAssignRoles_MetaEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UnAssignRoles_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UnAssignRolesResponse_MetaEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UnAssignRolesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UpdateTodo_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_services_2eproto = {
  {}, AddDescriptors_services_2eproto, "services.proto", schemas,
  file_default_instances, TableStruct_services_2eproto::offsets,
  file_level_metadata_services_2eproto, 48, file_level_enum_descriptors_services_2eproto, file_level_service_descriptors_services_2eproto,
};

const char descriptor_table_protodef_services_2eproto[] =
  "\n\016services.proto\"\226\001\n\013AssignRoles\022\020\n\010User"
  "Name\030\001 \001(\t\022\023\n\013Permissions\030\002 \003(\t\022\r\n\005Roles"
  "\030\003 \003(\t\022$\n\004Meta\030\004 \003(\0132\026.AssignRoles.MetaE"
  "ntry\032+\n\tMetaEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030"
  "\002 \001(\t:\0028\001\"\303\001\n\023AssignRolesResponse\022\020\n\010All"
  "Roles\030\001 \003(\t\022\026\n\016AllPermissions\030\002 \003(\t\022,\n\004M"
  "eta\030\003 \003(\0132\036.AssignRolesResponse.MetaEntr"
  "y\022\'\n\016ResponseStatus\030\004 \001(\0132\017.ResponseStat"
  "us\032+\n\tMetaEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 "
  "\001(\t:\0028\001\"\273\003\n\014Authenticate\022\020\n\010provider\030\001 \001"
  "(\t\022\r\n\005State\030\002 \001(\t\022\023\n\013oauth_token\030\003 \001(\t\022\026"
  "\n\016oauth_verifier\030\004 \001(\t\022\020\n\010UserName\030\005 \001(\t"
  "\022\020\n\010Password\030\006 \001(\t\022\022\n\nRememberMe\030\007 \001(\010\022\020"
  "\n\010Continue\030\010 \001(\t\022\021\n\tErrorView\030\t \001(\t\022\r\n\005n"
  "once\030\n \001(\t\022\013\n\003uri\030\013 \001(\t\022\020\n\010response\030\014 \001("
  "\t\022\013\n\003qop\030\r \001(\t\022\n\n\002nc\030\016 \001(\t\022\016\n\006cnonce\030\017 \001"
  "(\t\022\026\n\016UseTokenCookie\030\020 \001(\010\022\023\n\013AccessToke"
  "n\030\021 \001(\t\022\031\n\021AccessTokenSecret\030\022 \001(\t\022\r\n\005sc"
  "ope\030\023 \001(\t\022%\n\004Meta\030\024 \003(\0132\027.Authenticate.M"
  "etaEntry\032+\n\tMetaEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005va"
  "lue\030\002 \001(\t:\0028\001\"\335\002\n\024AuthenticateResponse\022\016"
  "\n\006UserId\030\001 \001(\t\022\021\n\tSessionId\030\002 \001(\t\022\020\n\010Use"
  "rName\030\003 \001(\t\022\023\n\013DisplayName\030\004 \001(\t\022\023\n\013Refe"
  "rrerUrl\030\005 \001(\t\022\023\n\013BearerToken\030\006 \001(\t\022\024\n\014Re"
  "freshToken\030\007 \001(\t\022\022\n\nProfileUrl\030\010 \001(\t\022\r\n\005"
  "Roles\030\t \003(\t\022\023\n\013Permissions\030\n \003(\t\022\'\n\016Resp"
  "onseStatus\030\013 \001(\0132\017.ResponseStatus\022-\n\004Met"
  "a\030\014 \003(\0132\037.AuthenticateResponse.MetaEntry"
  "\032+\n\tMetaEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001("
  "\t:\0028\001\"\215\001\n\025ConvertSessionToToken\022\027\n\017Prese"
  "rveSession\030\001 \001(\010\022.\n\004Meta\030\002 \003(\0132 .Convert"
  "SessionToToken.MetaEntry\032+\n\tMetaEntry\022\013\n"
  "\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\330\001\n\035Conver"
  "tSessionToTokenResponse\0226\n\004Meta\030\001 \003(\0132(."
  "ConvertSessionToTokenResponse.MetaEntry\022"
  "\023\n\013AccessToken\030\002 \001(\t\022\024\n\014RefreshToken\030\003 \001"
  "(\t\022\'\n\016ResponseStatus\030\004 \001(\0132\017.ResponseSta"
  "tus\032+\n\tMetaEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002"
  " \001(\t:\0028\001\"*\n\nCreateTodo\022\r\n\005Title\030\001 \001(\t\022\r\n"
  "\005Order\030\002 \001(\005\"T\n\022CreateTodoResponse\022\025\n\006Re"
  "sult\030\001 \001(\0132\005.Todo\022\'\n\016ResponseStatus\030\002 \001("
  "\0132\017.ResponseStatus\"\030\n\nDeleteTodo\022\n\n\002Id\030\001"
  " \001(\003\"\036\n\013DeleteTodos\022\017\n\003Ids\030\001 \003(\003B\002\020\000\"8\n\r"
  "EmptyResponse\022\'\n\016ResponseStatus\030\001 \001(\0132\017."
  "ResponseStatus\"p\n\013FileContent\022\014\n\004Name\030\001 "
  "\001(\t\022\014\n\004Type\030\002 \001(\t\022\016\n\006Length\030\003 \001(\005\022\014\n\004Bod"
  "y\030\004 \001(\014\022\'\n\016ResponseStatus\030\005 \001(\0132\017.Respon"
  "seStatus\"\224\001\n\016GetAccessToken\022\024\n\014RefreshTo"
  "ken\030\001 \001(\t\022\026\n\016UseTokenCookie\030\002 \001(\010\022\'\n\004Met"
  "a\030\003 \003(\0132\031.GetAccessToken.MetaEntry\032+\n\tMe"
  "taEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\""
  "\264\001\n\026GetAccessTokenResponse\022\023\n\013AccessToke"
  "n\030\001 \001(\t\022/\n\004Meta\030\002 \003(\0132!.GetAccessTokenRe"
  "sponse.MetaEntry\022\'\n\016ResponseStatus\030\003 \001(\013"
  "2\017.ResponseStatus\032+\n\tMetaEntry\022\013\n\003key\030\001 "
  "\001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\025\n\007GetTodo\022\n\n\002Id\030"
  "\001 \001(\003\"Q\n\017GetTodoResponse\022\025\n\006Result\030\001 \001(\013"
  "2\005.Todo\022\'\n\016ResponseStatus\030\002 \001(\0132\017.Respon"
  "seStatus\"\n\n\010GetTodos\"S\n\020GetTodosResponse"
  "\022\026\n\007Results\030\001 \003(\0132\005.Todo\022\'\n\016ResponseStat"
  "us\030\002 \001(\0132\017.ResponseStatus\"\025\n\005Hello\022\014\n\004Na"
  "me\030\001 \001(\t\"H\n\rHelloResponse\022\016\n\006Result\030\001 \001("
  "\t\022\'\n\016ResponseStatus\030\002 \001(\0132\017.ResponseStat"
  "us\"\033\n\013HelloSecure\022\014\n\004Name\030\001 \001(\t\"\230\002\n\010Regi"
  "ster\022\020\n\010UserName\030\001 \001(\t\022\021\n\tFirstName\030\002 \001("
  "\t\022\020\n\010LastName\030\003 \001(\t\022\023\n\013DisplayName\030\004 \001(\t"
  "\022\r\n\005Email\030\005 \001(\t\022\020\n\010Password\030\006 \001(\t\022\027\n\017Con"
  "firmPassword\030\007 \001(\t\022\021\n\tAutoLogin\030\010 \001(\010\022\020\n"
  "\010Continue\030\t \001(\t\022\021\n\tErrorView\030\n \001(\t\022!\n\004Me"
  "ta\030\013 \003(\0132\023.Register.MetaEntry\032+\n\tMetaEnt"
  "ry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\210\002\n\020R"
  "egisterResponse\022\016\n\006UserId\030\001 \001(\t\022\021\n\tSessi"
  "onId\030\002 \001(\t\022\020\n\010UserName\030\003 \001(\t\022\023\n\013Referrer"
  "Url\030\004 \001(\t\022\023\n\013BearerToken\030\005 \001(\t\022\024\n\014Refres"
  "hToken\030\006 \001(\t\022\'\n\016ResponseStatus\030\007 \001(\0132\017.R"
  "esponseStatus\022)\n\004Meta\030\010 \003(\0132\033.RegisterRe"
  "sponse.MetaEntry\032+\n\tMetaEntry\022\013\n\003key\030\001 \001"
  "(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\014\n\nResetTodos\"\233\001\n\r"
  "ResponseError\022\021\n\tErrorCode\030\001 \001(\t\022\021\n\tFiel"
  "dName\030\002 \001(\t\022\017\n\007Message\030\003 \001(\t\022&\n\004Meta\030\004 \003"
  "(\0132\030.ResponseError.MetaEntry\032+\n\tMetaEntr"
  "y\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\276\001\n\016Re"
  "sponseStatus\022\021\n\tErrorCode\030\001 \001(\t\022\017\n\007Messa"
  "ge\030\002 \001(\t\022\022\n\nStackTrace\030\003 \001(\t\022\036\n\006Errors\030\004"
  " \003(\0132\016.ResponseError\022\'\n\004Meta\030\005 \003(\0132\031.Res"
  "ponseStatus.MetaEntry\032+\n\tMetaEntry\022\013\n\003ke"
  "y\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\034\n\013StreamFile"
  "s\022\r\n\005Paths\030\001 \003(\t\"&\n\022StreamServerEvents\022\020"
  "\n\010Channels\030\001 \003(\t\"\233\004\n\032StreamServerEventsR"
  "esponse\022\017\n\007EventId\030\001 \001(\003\022\017\n\007Channel\030\002 \001("
  "\t\022\020\n\010Selector\030\004 \001(\t\022\014\n\004Json\030\005 \001(\t\022\n\n\002Op\030"
  "\006 \001(\t\022\016\n\006Target\030\007 \001(\t\022\023\n\013CssSelector\030\010 \001"
  "(\t\0223\n\004Meta\030\t \003(\0132%.StreamServerEventsRes"
  "ponse.MetaEntry\022\016\n\006UserId\030\n \001(\t\022\023\n\013Displ"
  "ayName\030\013 \001(\t\022\022\n\nProfileUrl\030\014 \001(\t\022\027\n\017IsAu"
  "thenticated\030\r \001(\010\022\020\n\010Channels\030\016 \003(\t\022\021\n\tC"
  "reatedAt\030\017 \001(\003\022\n\n\002Id\030\025 \001(\t\022\025\n\rUnRegister"
  "Url\030\026 \001(\t\022\033\n\023UpdateSubscriberUrl\030\027 \001(\t\022\024"
  "\n\014HeartbeatUrl\030\030 \001(\t\022\033\n\023HeartbeatInterva"
  "lMs\030\031 \001(\003\022\025\n\rIdleTimeoutMs\030\032 \001(\003\022\'\n\016Resp"
  "onseStatus\030\036 \001(\0132\017.ResponseStatus\032+\n\tMet"
  "aEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"C"
  "\n\004Todo\022\n\n\002Id\030\001 \001(\003\022\r\n\005Title\030\002 \001(\t\022\r\n\005Ord"
  "er\030\003 \001(\005\022\021\n\tCompleted\030\004 \001(\010\"\232\001\n\rUnAssign"
  "Roles\022\020\n\010UserName\030\001 \001(\t\022\023\n\013Permissions\030\002"
  " \003(\t\022\r\n\005Roles\030\003 \003(\t\022&\n\004Meta\030\004 \003(\0132\030.UnAs"
  "signRoles.MetaEntry\032+\n\tMetaEntry\022\013\n\003key\030"
  "\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\307\001\n\025UnAssignRol"
  "esResponse\022\020\n\010AllRoles\030\001 \003(\t\022\026\n\016AllPermi"
  "ssions\030\002 \003(\t\022.\n\004Meta\030\003 \003(\0132 .UnAssignRol"
  "esResponse.MetaEntry\022\'\n\016ResponseStatus\030\004"
  " \001(\0132\017.ResponseStatus\032+\n\tMetaEntry\022\013\n\003ke"
  "y\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"I\n\nUpdateTodo"
  "\022\n\n\002Id\030\001 \001(\003\022\r\n\005Title\030\002 \001(\t\022\r\n\005Order\030\003 \001"
  "(\005\022\021\n\tCompleted\030\004 \001(\0102\225\014\n\014GrpcServices\0227"
  "\n\017PostAssignRoles\022\014.AssignRoles\032\024.Assign"
  "RolesResponse\"\000\022=\n\023OptionsAuthenticate\022\r"
  ".Authenticate\032\025.AuthenticateResponse\"\000\0229"
  "\n\017GetAuthenticate\022\r.Authenticate\032\025.Authe"
  "nticateResponse\"\000\022:\n\020PostAuthenticate\022\r."
  "Authenticate\032\025.AuthenticateResponse\"\000\022<\n"
  "\022DeleteAuthenticate\022\r.Authenticate\032\025.Aut"
  "henticateResponse\"\000\022U\n\031PostConvertSessio"
  "nToToken\022\026.ConvertSessionToToken\032\036.Conve"
  "rtSessionToTokenResponse\"\000\0224\n\016PostCreate"
  "Todo\022\013.CreateTodo\032\023.CreateTodoResponse\"\000"
  "\022/\n\016CallDeleteTodo\022\013.DeleteTodo\032\016.EmptyR"
  "esponse\"\000\0221\n\017CallDeleteTodos\022\014.DeleteTod"
  "os\032\016.EmptyResponse\"\000\022@\n\022PostGetAccessTok"
  "en\022\017.GetAccessToken\032\027.GetAccessTokenResp"
  "onse\"\000\022+\n\013CallGetTodo\022\010.GetTodo\032\020.GetTod"
  "oResponse\"\000\022.\n\014CallGetTodos\022\t.GetTodos\032\021"
  ".GetTodosResponse\"\000\022$\n\010GetHello\022\006.Hello\032"
  "\016.HelloResponse\"\000\022%\n\tPostHello\022\006.Hello\032\016"
  ".HelloResponse\"\000\022$\n\010PutHello\022\006.Hello\032\016.H"
  "elloResponse\"\000\022\'\n\013DeleteHello\022\006.Hello\032\016."
  "HelloResponse\"\000\022&\n\nPatchHello\022\006.Hello\032\016."
  "HelloResponse\"\000\0220\n\016GetHelloSecure\022\014.Hell"
  "oSecure\032\016.HelloResponse\"\000\0221\n\017PostHelloSe"
  "cure\022\014.HelloSecure\032\016.HelloResponse\"\000\0220\n\016"
  "PutHelloSecure\022\014.HelloSecure\032\016.HelloResp"
  "onse\"\000\0223\n\021DeleteHelloSecure\022\014.HelloSecur"
  "e\032\016.HelloResponse\"\000\0222\n\020PatchHelloSecure\022"
  "\014.HelloSecure\032\016.HelloResponse\"\000\022-\n\013PutRe"
  "gister\022\t.Register\032\021.RegisterResponse\"\000\022."
  "\n\014PostRegister\022\t.Register\032\021.RegisterResp"
  "onse\"\000\022/\n\016PostResetTodos\022\013.ResetTodos\032\016."
  "EmptyResponse\"\000\0223\n\021ServerStreamFiles\022\014.S"
  "treamFiles\032\014.FileContent\"\0000\001\022P\n\030ServerSt"
  "reamServerEvents\022\023.StreamServerEvents\032\033."
  "StreamServerEventsResponse\"\0000\001\022=\n\021PostUn"
  "AssignRoles\022\016.UnAssignRoles\032\026.UnAssignRo"
  "lesResponse\"\000\022.\n\rPutUpdateTodo\022\013.UpdateT"
  "odo\032\016.EmptyResponse\"\000B\014\252\002\tTodoWorldb\006pro"
  "to3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_services_2eproto = {
  false, InitDefaults_services_2eproto, 
  descriptor_table_protodef_services_2eproto,
  "services.proto", &assign_descriptors_table_services_2eproto, 6163,
};

void AddDescriptors_services_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_services_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_services_2eproto = []() { AddDescriptors_services_2eproto(); return true; }();

// ===================================================================

AssignRoles_MetaEntry_DoNotUse::AssignRoles_MetaEntry_DoNotUse() {}
AssignRoles_MetaEntry_DoNotUse::AssignRoles_MetaEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void AssignRoles_MetaEntry_DoNotUse::MergeFrom(const AssignRoles_MetaEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata AssignRoles_MetaEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[0];
}
void AssignRoles_MetaEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AssignRoles_MetaEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      AssignRoles_MetaEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "AssignRoles.MetaEntry.key"));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.value().data(), static_cast<int>(parser.value().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "AssignRoles.MetaEntry.value"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void AssignRoles::InitAsDefaultInstance() {
}
class AssignRoles::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AssignRoles::kUserNameFieldNumber;
const int AssignRoles::kPermissionsFieldNumber;
const int AssignRoles::kRolesFieldNumber;
const int AssignRoles::kMetaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AssignRoles::AssignRoles()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AssignRoles)
}
AssignRoles::AssignRoles(const AssignRoles& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      permissions_(from.permissions_),
      roles_(from.roles_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  meta_.MergeFrom(from.meta_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  // @@protoc_insertion_point(copy_constructor:AssignRoles)
}

void AssignRoles::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AssignRoles_services_2eproto.base);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AssignRoles::~AssignRoles() {
  // @@protoc_insertion_point(destructor:AssignRoles)
  SharedDtor();
}

void AssignRoles::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AssignRoles::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AssignRoles& AssignRoles::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AssignRoles_services_2eproto.base);
  return *internal_default_instance();
}


void AssignRoles::Clear() {
// @@protoc_insertion_point(message_clear_start:AssignRoles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  permissions_.Clear();
  roles_.Clear();
  meta_.Clear();
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AssignRoles::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AssignRoles*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string UserName = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("AssignRoles.UserName");
        object = msg->mutable_username();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated string Permissions = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("AssignRoles.Permissions");
          object = msg->add_permissions();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // repeated string Roles = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("AssignRoles.Roles");
          object = msg->add_roles();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // map<string, string> Meta = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::AssignRoles_MetaEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->meta_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AssignRoles::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AssignRoles)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string UserName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AssignRoles.UserName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string Permissions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_permissions()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->permissions(this->permissions_size() - 1).data(),
            static_cast<int>(this->permissions(this->permissions_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AssignRoles.Permissions"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string Roles = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_roles()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->roles(this->roles_size() - 1).data(),
            static_cast<int>(this->roles(this->roles_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AssignRoles.Roles"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> Meta = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          AssignRoles_MetaEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              AssignRoles_MetaEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&meta_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AssignRoles.MetaEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AssignRoles.MetaEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AssignRoles)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AssignRoles)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AssignRoles::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AssignRoles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string UserName = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AssignRoles.UserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // repeated string Permissions = 2;
  for (int i = 0, n = this->permissions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->permissions(i).data(), static_cast<int>(this->permissions(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AssignRoles.Permissions");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->permissions(i), output);
  }

  // repeated string Roles = 3;
  for (int i = 0, n = this->roles_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roles(i).data(), static_cast<int>(this->roles(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AssignRoles.Roles");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->roles(i), output);
  }

  // map<string, string> Meta = 4;
  if (!this->meta().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "AssignRoles.MetaEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "AssignRoles.MetaEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->meta().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->meta().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<AssignRoles_MetaEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(meta_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(4, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<AssignRoles_MetaEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it) {
        entry.reset(meta_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(4, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AssignRoles)
}

::google::protobuf::uint8* AssignRoles::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AssignRoles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string UserName = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AssignRoles.UserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // repeated string Permissions = 2;
  for (int i = 0, n = this->permissions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->permissions(i).data(), static_cast<int>(this->permissions(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AssignRoles.Permissions");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->permissions(i), target);
  }

  // repeated string Roles = 3;
  for (int i = 0, n = this->roles_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roles(i).data(), static_cast<int>(this->roles(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AssignRoles.Roles");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->roles(i), target);
  }

  // map<string, string> Meta = 4;
  if (!this->meta().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "AssignRoles.MetaEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "AssignRoles.MetaEntry.value");
      }
    };

    if (false &&
        this->meta().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->meta().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<AssignRoles_MetaEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(meta_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(4, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<AssignRoles_MetaEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it) {
        entry.reset(meta_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(4, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AssignRoles)
  return target;
}

size_t AssignRoles::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AssignRoles)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string Permissions = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->permissions_size());
  for (int i = 0, n = this->permissions_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->permissions(i));
  }

  // repeated string Roles = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->roles_size());
  for (int i = 0, n = this->roles_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->roles(i));
  }

  // map<string, string> Meta = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->meta_size());
  {
    ::std::unique_ptr<AssignRoles_MetaEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->meta().begin();
        it != this->meta().end(); ++it) {
      entry.reset(meta_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string UserName = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AssignRoles::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AssignRoles)
  GOOGLE_DCHECK_NE(&from, this);
  const AssignRoles* source =
      ::google::protobuf::DynamicCastToGenerated<AssignRoles>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AssignRoles)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AssignRoles)
    MergeFrom(*source);
  }
}

void AssignRoles::MergeFrom(const AssignRoles& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AssignRoles)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  permissions_.MergeFrom(from.permissions_);
  roles_.MergeFrom(from.roles_);
  meta_.MergeFrom(from.meta_);
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
}

void AssignRoles::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AssignRoles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AssignRoles::CopyFrom(const AssignRoles& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AssignRoles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssignRoles::IsInitialized() const {
  return true;
}

void AssignRoles::Swap(AssignRoles* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AssignRoles::InternalSwap(AssignRoles* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  permissions_.InternalSwap(CastToBase(&other->permissions_));
  roles_.InternalSwap(CastToBase(&other->roles_));
  meta_.Swap(&other->meta_);
  username_.Swap(&other->username_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata AssignRoles::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[kIndexInFileMessages];
}


// ===================================================================

AssignRolesResponse_MetaEntry_DoNotUse::AssignRolesResponse_MetaEntry_DoNotUse() {}
AssignRolesResponse_MetaEntry_DoNotUse::AssignRolesResponse_MetaEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void AssignRolesResponse_MetaEntry_DoNotUse::MergeFrom(const AssignRolesResponse_MetaEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata AssignRolesResponse_MetaEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[2];
}
void AssignRolesResponse_MetaEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AssignRolesResponse_MetaEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      AssignRolesResponse_MetaEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "AssignRolesResponse.MetaEntry.key"));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.value().data(), static_cast<int>(parser.value().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "AssignRolesResponse.MetaEntry.value"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void AssignRolesResponse::InitAsDefaultInstance() {
  ::_AssignRolesResponse_default_instance_._instance.get_mutable()->responsestatus_ = const_cast< ::ResponseStatus*>(
      ::ResponseStatus::internal_default_instance());
}
class AssignRolesResponse::HasBitSetters {
 public:
  static const ::ResponseStatus& responsestatus(const AssignRolesResponse* msg);
};

const ::ResponseStatus&
AssignRolesResponse::HasBitSetters::responsestatus(const AssignRolesResponse* msg) {
  return *msg->responsestatus_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AssignRolesResponse::kAllRolesFieldNumber;
const int AssignRolesResponse::kAllPermissionsFieldNumber;
const int AssignRolesResponse::kMetaFieldNumber;
const int AssignRolesResponse::kResponseStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AssignRolesResponse::AssignRolesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AssignRolesResponse)
}
AssignRolesResponse::AssignRolesResponse(const AssignRolesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      allroles_(from.allroles_),
      allpermissions_(from.allpermissions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  meta_.MergeFrom(from.meta_);
  if (from.has_responsestatus()) {
    responsestatus_ = new ::ResponseStatus(*from.responsestatus_);
  } else {
    responsestatus_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:AssignRolesResponse)
}

void AssignRolesResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AssignRolesResponse_services_2eproto.base);
  responsestatus_ = nullptr;
}

AssignRolesResponse::~AssignRolesResponse() {
  // @@protoc_insertion_point(destructor:AssignRolesResponse)
  SharedDtor();
}

void AssignRolesResponse::SharedDtor() {
  if (this != internal_default_instance()) delete responsestatus_;
}

void AssignRolesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AssignRolesResponse& AssignRolesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AssignRolesResponse_services_2eproto.base);
  return *internal_default_instance();
}


void AssignRolesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AssignRolesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  allroles_.Clear();
  allpermissions_.Clear();
  meta_.Clear();
  if (GetArenaNoVirtual() == nullptr && responsestatus_ != nullptr) {
    delete responsestatus_;
  }
  responsestatus_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AssignRolesResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AssignRolesResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated string AllRoles = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("AssignRolesResponse.AllRoles");
          object = msg->add_allroles();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // repeated string AllPermissions = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("AssignRolesResponse.AllPermissions");
          object = msg->add_allpermissions();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // map<string, string> Meta = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::AssignRolesResponse_MetaEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->meta_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // .ResponseStatus ResponseStatus = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::ResponseStatus::_InternalParse;
        object = msg->mutable_responsestatus();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AssignRolesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AssignRolesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string AllRoles = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_allroles()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->allroles(this->allroles_size() - 1).data(),
            static_cast<int>(this->allroles(this->allroles_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AssignRolesResponse.AllRoles"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string AllPermissions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_allpermissions()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->allpermissions(this->allpermissions_size() - 1).data(),
            static_cast<int>(this->allpermissions(this->allpermissions_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AssignRolesResponse.AllPermissions"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> Meta = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          AssignRolesResponse_MetaEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              AssignRolesResponse_MetaEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&meta_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AssignRolesResponse.MetaEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AssignRolesResponse.MetaEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ResponseStatus ResponseStatus = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_responsestatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AssignRolesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AssignRolesResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AssignRolesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AssignRolesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string AllRoles = 1;
  for (int i = 0, n = this->allroles_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->allroles(i).data(), static_cast<int>(this->allroles(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AssignRolesResponse.AllRoles");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->allroles(i), output);
  }

  // repeated string AllPermissions = 2;
  for (int i = 0, n = this->allpermissions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->allpermissions(i).data(), static_cast<int>(this->allpermissions(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AssignRolesResponse.AllPermissions");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->allpermissions(i), output);
  }

  // map<string, string> Meta = 3;
  if (!this->meta().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "AssignRolesResponse.MetaEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "AssignRolesResponse.MetaEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->meta().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->meta().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<AssignRolesResponse_MetaEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(meta_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(3, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<AssignRolesResponse_MetaEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it) {
        entry.reset(meta_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(3, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // .ResponseStatus ResponseStatus = 4;
  if (this->has_responsestatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::responsestatus(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AssignRolesResponse)
}

::google::protobuf::uint8* AssignRolesResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AssignRolesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string AllRoles = 1;
  for (int i = 0, n = this->allroles_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->allroles(i).data(), static_cast<int>(this->allroles(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AssignRolesResponse.AllRoles");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->allroles(i), target);
  }

  // repeated string AllPermissions = 2;
  for (int i = 0, n = this->allpermissions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->allpermissions(i).data(), static_cast<int>(this->allpermissions(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AssignRolesResponse.AllPermissions");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->allpermissions(i), target);
  }

  // map<string, string> Meta = 3;
  if (!this->meta().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "AssignRolesResponse.MetaEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "AssignRolesResponse.MetaEntry.value");
      }
    };

    if (false &&
        this->meta().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->meta().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<AssignRolesResponse_MetaEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(meta_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(3, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<AssignRolesResponse_MetaEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it) {
        entry.reset(meta_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(3, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // .ResponseStatus ResponseStatus = 4;
  if (this->has_responsestatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::responsestatus(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AssignRolesResponse)
  return target;
}

size_t AssignRolesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AssignRolesResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string AllRoles = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->allroles_size());
  for (int i = 0, n = this->allroles_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->allroles(i));
  }

  // repeated string AllPermissions = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->allpermissions_size());
  for (int i = 0, n = this->allpermissions_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->allpermissions(i));
  }

  // map<string, string> Meta = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->meta_size());
  {
    ::std::unique_ptr<AssignRolesResponse_MetaEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->meta().begin();
        it != this->meta().end(); ++it) {
      entry.reset(meta_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .ResponseStatus ResponseStatus = 4;
  if (this->has_responsestatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *responsestatus_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AssignRolesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AssignRolesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AssignRolesResponse* source =
      ::google::protobuf::DynamicCastToGenerated<AssignRolesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AssignRolesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AssignRolesResponse)
    MergeFrom(*source);
  }
}

void AssignRolesResponse::MergeFrom(const AssignRolesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AssignRolesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  allroles_.MergeFrom(from.allroles_);
  allpermissions_.MergeFrom(from.allpermissions_);
  meta_.MergeFrom(from.meta_);
  if (from.has_responsestatus()) {
    mutable_responsestatus()->::ResponseStatus::MergeFrom(from.responsestatus());
  }
}

void AssignRolesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AssignRolesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AssignRolesResponse::CopyFrom(const AssignRolesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AssignRolesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssignRolesResponse::IsInitialized() const {
  return true;
}

void AssignRolesResponse::Swap(AssignRolesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AssignRolesResponse::InternalSwap(AssignRolesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  allroles_.InternalSwap(CastToBase(&other->allroles_));
  allpermissions_.InternalSwap(CastToBase(&other->allpermissions_));
  meta_.Swap(&other->meta_);
  swap(responsestatus_, other->responsestatus_);
}

::google::protobuf::Metadata AssignRolesResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[kIndexInFileMessages];
}


// ===================================================================

Authenticate_MetaEntry_DoNotUse::Authenticate_MetaEntry_DoNotUse() {}
Authenticate_MetaEntry_DoNotUse::Authenticate_MetaEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void Authenticate_MetaEntry_DoNotUse::MergeFrom(const Authenticate_MetaEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Authenticate_MetaEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[4];
}
void Authenticate_MetaEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Authenticate_MetaEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      Authenticate_MetaEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "Authenticate.MetaEntry.key"));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.value().data(), static_cast<int>(parser.value().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "Authenticate.MetaEntry.value"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void Authenticate::InitAsDefaultInstance() {
}
class Authenticate::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Authenticate::kProviderFieldNumber;
const int Authenticate::kStateFieldNumber;
const int Authenticate::kOauthTokenFieldNumber;
const int Authenticate::kOauthVerifierFieldNumber;
const int Authenticate::kUserNameFieldNumber;
const int Authenticate::kPasswordFieldNumber;
const int Authenticate::kRememberMeFieldNumber;
const int Authenticate::kContinueFieldNumber;
const int Authenticate::kErrorViewFieldNumber;
const int Authenticate::kNonceFieldNumber;
const int Authenticate::kUriFieldNumber;
const int Authenticate::kResponseFieldNumber;
const int Authenticate::kQopFieldNumber;
const int Authenticate::kNcFieldNumber;
const int Authenticate::kCnonceFieldNumber;
const int Authenticate::kUseTokenCookieFieldNumber;
const int Authenticate::kAccessTokenFieldNumber;
const int Authenticate::kAccessTokenSecretFieldNumber;
const int Authenticate::kScopeFieldNumber;
const int Authenticate::kMetaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Authenticate::Authenticate()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Authenticate)
}
Authenticate::Authenticate(const Authenticate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  meta_.MergeFrom(from.meta_);
  provider_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.provider().size() > 0) {
    provider_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.provider_);
  }
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.state().size() > 0) {
    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  oauth_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.oauth_token().size() > 0) {
    oauth_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oauth_token_);
  }
  oauth_verifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.oauth_verifier().size() > 0) {
    oauth_verifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oauth_verifier_);
  }
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  continue__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.continue_().size() > 0) {
    continue__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.continue__);
  }
  errorview_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errorview().size() > 0) {
    errorview_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errorview_);
  }
  nonce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nonce().size() > 0) {
    nonce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nonce_);
  }
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uri().size() > 0) {
    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
  response_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.response().size() > 0) {
    response_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_);
  }
  qop_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.qop().size() > 0) {
    qop_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.qop_);
  }
  nc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nc().size() > 0) {
    nc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nc_);
  }
  cnonce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cnonce().size() > 0) {
    cnonce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cnonce_);
  }
  accesstoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.accesstoken().size() > 0) {
    accesstoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accesstoken_);
  }
  accesstokensecret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.accesstokensecret().size() > 0) {
    accesstokensecret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accesstokensecret_);
  }
  scope_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.scope().size() > 0) {
    scope_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scope_);
  }
  ::memcpy(&rememberme_, &from.rememberme_,
    static_cast<size_t>(reinterpret_cast<char*>(&usetokencookie_) -
    reinterpret_cast<char*>(&rememberme_)) + sizeof(usetokencookie_));
  // @@protoc_insertion_point(copy_constructor:Authenticate)
}

void Authenticate::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Authenticate_services_2eproto.base);
  provider_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oauth_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oauth_verifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  continue__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorview_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nonce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  qop_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cnonce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accesstoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accesstokensecret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scope_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&rememberme_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&usetokencookie_) -
      reinterpret_cast<char*>(&rememberme_)) + sizeof(usetokencookie_));
}

Authenticate::~Authenticate() {
  // @@protoc_insertion_point(destructor:Authenticate)
  SharedDtor();
}

void Authenticate::SharedDtor() {
  provider_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oauth_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oauth_verifier_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  continue__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorview_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nonce_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  qop_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cnonce_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accesstoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accesstokensecret_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scope_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Authenticate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Authenticate& Authenticate::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Authenticate_services_2eproto.base);
  return *internal_default_instance();
}


void Authenticate::Clear() {
// @@protoc_insertion_point(message_clear_start:Authenticate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  meta_.Clear();
  provider_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oauth_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oauth_verifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  continue__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorview_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  qop_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cnonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accesstoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accesstokensecret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scope_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&rememberme_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&usetokencookie_) -
      reinterpret_cast<char*>(&rememberme_)) + sizeof(usetokencookie_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Authenticate::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Authenticate*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string provider = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Authenticate.provider");
        object = msg->mutable_provider();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string State = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Authenticate.State");
        object = msg->mutable_state();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string oauth_token = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Authenticate.oauth_token");
        object = msg->mutable_oauth_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string oauth_verifier = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Authenticate.oauth_verifier");
        object = msg->mutable_oauth_verifier();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string UserName = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Authenticate.UserName");
        object = msg->mutable_username();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string Password = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Authenticate.Password");
        object = msg->mutable_password();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool RememberMe = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_rememberme(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string Continue = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Authenticate.Continue");
        object = msg->mutable_continue_();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string ErrorView = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Authenticate.ErrorView");
        object = msg->mutable_errorview();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string nonce = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Authenticate.nonce");
        object = msg->mutable_nonce();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string uri = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Authenticate.uri");
        object = msg->mutable_uri();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string response = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 98) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Authenticate.response");
        object = msg->mutable_response();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string qop = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 106) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Authenticate.qop");
        object = msg->mutable_qop();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string nc = 14;
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) != 114) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Authenticate.nc");
        object = msg->mutable_nc();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cnonce = 15;
      case 15: {
        if (static_cast<::google::protobuf::uint8>(tag) != 122) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Authenticate.cnonce");
        object = msg->mutable_cnonce();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool UseTokenCookie = 16;
      case 16: {
        if (static_cast<::google::protobuf::uint8>(tag) != 128) goto handle_unusual;
        msg->set_usetokencookie(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string AccessToken = 17;
      case 17: {
        if (static_cast<::google::protobuf::uint8>(tag) != 138) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Authenticate.AccessToken");
        object = msg->mutable_accesstoken();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string AccessTokenSecret = 18;
      case 18: {
        if (static_cast<::google::protobuf::uint8>(tag) != 146) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Authenticate.AccessTokenSecret");
        object = msg->mutable_accesstokensecret();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string scope = 19;
      case 19: {
        if (static_cast<::google::protobuf::uint8>(tag) != 154) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Authenticate.scope");
        object = msg->mutable_scope();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // map<string, string> Meta = 20;
      case 20: {
        if (static_cast<::google::protobuf::uint8>(tag) != 162) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::Authenticate_MetaEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->meta_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 65535) == 418 && (ptr += 2));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Authenticate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Authenticate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string provider = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_provider()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->provider().data(), static_cast<int>(this->provider().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Authenticate.provider"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string State = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_state()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->state().data(), static_cast<int>(this->state().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Authenticate.State"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string oauth_token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oauth_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oauth_token().data(), static_cast<int>(this->oauth_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Authenticate.oauth_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string oauth_verifier = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oauth_verifier()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oauth_verifier().data(), static_cast<int>(this->oauth_verifier().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Authenticate.oauth_verifier"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string UserName = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Authenticate.UserName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Password = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Authenticate.Password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool RememberMe = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &rememberme_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Continue = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_continue_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->continue_().data(), static_cast<int>(this->continue_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Authenticate.Continue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ErrorView = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errorview()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errorview().data(), static_cast<int>(this->errorview().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Authenticate.ErrorView"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nonce = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nonce()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nonce().data(), static_cast<int>(this->nonce().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Authenticate.nonce"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uri = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uri().data(), static_cast<int>(this->uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Authenticate.uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string response = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (98 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_response()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->response().data(), static_cast<int>(this->response().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Authenticate.response"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string qop = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (106 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_qop()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->qop().data(), static_cast<int>(this->qop().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Authenticate.qop"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nc = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (114 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nc().data(), static_cast<int>(this->nc().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Authenticate.nc"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cnonce = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (122 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cnonce()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cnonce().data(), static_cast<int>(this->cnonce().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Authenticate.cnonce"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool UseTokenCookie = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (128 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &usetokencookie_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string AccessToken = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (138 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accesstoken()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->accesstoken().data(), static_cast<int>(this->accesstoken().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Authenticate.AccessToken"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string AccessTokenSecret = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (146 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accesstokensecret()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->accesstokensecret().data(), static_cast<int>(this->accesstokensecret().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Authenticate.AccessTokenSecret"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string scope = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (154 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scope()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scope().data(), static_cast<int>(this->scope().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Authenticate.scope"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> Meta = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (162 & 0xFF)) {
          Authenticate_MetaEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Authenticate_MetaEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&meta_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Authenticate.MetaEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Authenticate.MetaEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Authenticate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Authenticate)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Authenticate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Authenticate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string provider = 1;
  if (this->provider().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->provider().data(), static_cast<int>(this->provider().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Authenticate.provider");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->provider(), output);
  }

  // string State = 2;
  if (this->state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->state().data(), static_cast<int>(this->state().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Authenticate.State");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->state(), output);
  }

  // string oauth_token = 3;
  if (this->oauth_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oauth_token().data(), static_cast<int>(this->oauth_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Authenticate.oauth_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->oauth_token(), output);
  }

  // string oauth_verifier = 4;
  if (this->oauth_verifier().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oauth_verifier().data(), static_cast<int>(this->oauth_verifier().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Authenticate.oauth_verifier");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->oauth_verifier(), output);
  }

  // string UserName = 5;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Authenticate.UserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->username(), output);
  }

  // string Password = 6;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Authenticate.Password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->password(), output);
  }

  // bool RememberMe = 7;
  if (this->rememberme() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->rememberme(), output);
  }

  // string Continue = 8;
  if (this->continue_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->continue_().data(), static_cast<int>(this->continue_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Authenticate.Continue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->continue_(), output);
  }

  // string ErrorView = 9;
  if (this->errorview().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errorview().data(), static_cast<int>(this->errorview().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Authenticate.ErrorView");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->errorview(), output);
  }

  // string nonce = 10;
  if (this->nonce().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nonce().data(), static_cast<int>(this->nonce().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Authenticate.nonce");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->nonce(), output);
  }

  // string uri = 11;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Authenticate.uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->uri(), output);
  }

  // string response = 12;
  if (this->response().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response().data(), static_cast<int>(this->response().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Authenticate.response");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->response(), output);
  }

  // string qop = 13;
  if (this->qop().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->qop().data(), static_cast<int>(this->qop().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Authenticate.qop");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->qop(), output);
  }

  // string nc = 14;
  if (this->nc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nc().data(), static_cast<int>(this->nc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Authenticate.nc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->nc(), output);
  }

  // string cnonce = 15;
  if (this->cnonce().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cnonce().data(), static_cast<int>(this->cnonce().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Authenticate.cnonce");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->cnonce(), output);
  }

  // bool UseTokenCookie = 16;
  if (this->usetokencookie() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->usetokencookie(), output);
  }

  // string AccessToken = 17;
  if (this->accesstoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accesstoken().data(), static_cast<int>(this->accesstoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Authenticate.AccessToken");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->accesstoken(), output);
  }

  // string AccessTokenSecret = 18;
  if (this->accesstokensecret().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accesstokensecret().data(), static_cast<int>(this->accesstokensecret().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Authenticate.AccessTokenSecret");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->accesstokensecret(), output);
  }

  // string scope = 19;
  if (this->scope().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scope().data(), static_cast<int>(this->scope().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Authenticate.scope");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->scope(), output);
  }

  // map<string, string> Meta = 20;
  if (!this->meta().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "Authenticate.MetaEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "Authenticate.MetaEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->meta().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->meta().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Authenticate_MetaEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(meta_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(20, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<Authenticate_MetaEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it) {
        entry.reset(meta_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(20, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Authenticate)
}

::google::protobuf::uint8* Authenticate::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Authenticate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string provider = 1;
  if (this->provider().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->provider().data(), static_cast<int>(this->provider().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Authenticate.provider");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->provider(), target);
  }

  // string State = 2;
  if (this->state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->state().data(), static_cast<int>(this->state().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Authenticate.State");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->state(), target);
  }

  // string oauth_token = 3;
  if (this->oauth_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oauth_token().data(), static_cast<int>(this->oauth_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Authenticate.oauth_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->oauth_token(), target);
  }

  // string oauth_verifier = 4;
  if (this->oauth_verifier().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oauth_verifier().data(), static_cast<int>(this->oauth_verifier().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Authenticate.oauth_verifier");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->oauth_verifier(), target);
  }

  // string UserName = 5;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Authenticate.UserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->username(), target);
  }

  // string Password = 6;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Authenticate.Password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->password(), target);
  }

  // bool RememberMe = 7;
  if (this->rememberme() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->rememberme(), target);
  }

  // string Continue = 8;
  if (this->continue_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->continue_().data(), static_cast<int>(this->continue_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Authenticate.Continue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->continue_(), target);
  }

  // string ErrorView = 9;
  if (this->errorview().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errorview().data(), static_cast<int>(this->errorview().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Authenticate.ErrorView");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->errorview(), target);
  }

  // string nonce = 10;
  if (this->nonce().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nonce().data(), static_cast<int>(this->nonce().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Authenticate.nonce");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->nonce(), target);
  }

  // string uri = 11;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Authenticate.uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->uri(), target);
  }

  // string response = 12;
  if (this->response().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response().data(), static_cast<int>(this->response().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Authenticate.response");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->response(), target);
  }

  // string qop = 13;
  if (this->qop().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->qop().data(), static_cast<int>(this->qop().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Authenticate.qop");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->qop(), target);
  }

  // string nc = 14;
  if (this->nc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nc().data(), static_cast<int>(this->nc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Authenticate.nc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->nc(), target);
  }

  // string cnonce = 15;
  if (this->cnonce().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cnonce().data(), static_cast<int>(this->cnonce().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Authenticate.cnonce");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->cnonce(), target);
  }

  // bool UseTokenCookie = 16;
  if (this->usetokencookie() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->usetokencookie(), target);
  }

  // string AccessToken = 17;
  if (this->accesstoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accesstoken().data(), static_cast<int>(this->accesstoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Authenticate.AccessToken");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->accesstoken(), target);
  }

  // string AccessTokenSecret = 18;
  if (this->accesstokensecret().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accesstokensecret().data(), static_cast<int>(this->accesstokensecret().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Authenticate.AccessTokenSecret");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->accesstokensecret(), target);
  }

  // string scope = 19;
  if (this->scope().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scope().data(), static_cast<int>(this->scope().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Authenticate.scope");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->scope(), target);
  }

  // map<string, string> Meta = 20;
  if (!this->meta().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "Authenticate.MetaEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "Authenticate.MetaEntry.value");
      }
    };

    if (false &&
        this->meta().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->meta().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Authenticate_MetaEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(meta_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(20, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<Authenticate_MetaEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it) {
        entry.reset(meta_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(20, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Authenticate)
  return target;
}

size_t Authenticate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Authenticate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> Meta = 20;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->meta_size());
  {
    ::std::unique_ptr<Authenticate_MetaEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->meta().begin();
        it != this->meta().end(); ++it) {
      entry.reset(meta_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string provider = 1;
  if (this->provider().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->provider());
  }

  // string State = 2;
  if (this->state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->state());
  }

  // string oauth_token = 3;
  if (this->oauth_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oauth_token());
  }

  // string oauth_verifier = 4;
  if (this->oauth_verifier().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oauth_verifier());
  }

  // string UserName = 5;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string Password = 6;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // string Continue = 8;
  if (this->continue_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->continue_());
  }

  // string ErrorView = 9;
  if (this->errorview().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errorview());
  }

  // string nonce = 10;
  if (this->nonce().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nonce());
  }

  // string uri = 11;
  if (this->uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uri());
  }

  // string response = 12;
  if (this->response().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->response());
  }

  // string qop = 13;
  if (this->qop().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->qop());
  }

  // string nc = 14;
  if (this->nc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nc());
  }

  // string cnonce = 15;
  if (this->cnonce().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cnonce());
  }

  // string AccessToken = 17;
  if (this->accesstoken().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->accesstoken());
  }

  // string AccessTokenSecret = 18;
  if (this->accesstokensecret().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->accesstokensecret());
  }

  // string scope = 19;
  if (this->scope().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scope());
  }

  // bool RememberMe = 7;
  if (this->rememberme() != 0) {
    total_size += 1 + 1;
  }

  // bool UseTokenCookie = 16;
  if (this->usetokencookie() != 0) {
    total_size += 2 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Authenticate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Authenticate)
  GOOGLE_DCHECK_NE(&from, this);
  const Authenticate* source =
      ::google::protobuf::DynamicCastToGenerated<Authenticate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Authenticate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Authenticate)
    MergeFrom(*source);
  }
}

void Authenticate::MergeFrom(const Authenticate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Authenticate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  meta_.MergeFrom(from.meta_);
  if (from.provider().size() > 0) {

    provider_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.provider_);
  }
  if (from.state().size() > 0) {

    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  if (from.oauth_token().size() > 0) {

    oauth_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oauth_token_);
  }
  if (from.oauth_verifier().size() > 0) {

    oauth_verifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oauth_verifier_);
  }
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.continue_().size() > 0) {

    continue__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.continue__);
  }
  if (from.errorview().size() > 0) {

    errorview_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errorview_);
  }
  if (from.nonce().size() > 0) {

    nonce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nonce_);
  }
  if (from.uri().size() > 0) {

    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
  if (from.response().size() > 0) {

    response_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_);
  }
  if (from.qop().size() > 0) {

    qop_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.qop_);
  }
  if (from.nc().size() > 0) {

    nc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nc_);
  }
  if (from.cnonce().size() > 0) {

    cnonce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cnonce_);
  }
  if (from.accesstoken().size() > 0) {

    accesstoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accesstoken_);
  }
  if (from.accesstokensecret().size() > 0) {

    accesstokensecret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accesstokensecret_);
  }
  if (from.scope().size() > 0) {

    scope_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scope_);
  }
  if (from.rememberme() != 0) {
    set_rememberme(from.rememberme());
  }
  if (from.usetokencookie() != 0) {
    set_usetokencookie(from.usetokencookie());
  }
}

void Authenticate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Authenticate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Authenticate::CopyFrom(const Authenticate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Authenticate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Authenticate::IsInitialized() const {
  return true;
}

void Authenticate::Swap(Authenticate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Authenticate::InternalSwap(Authenticate* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  meta_.Swap(&other->meta_);
  provider_.Swap(&other->provider_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  state_.Swap(&other->state_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  oauth_token_.Swap(&other->oauth_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  oauth_verifier_.Swap(&other->oauth_verifier_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  username_.Swap(&other->username_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  continue__.Swap(&other->continue__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  errorview_.Swap(&other->errorview_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nonce_.Swap(&other->nonce_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  uri_.Swap(&other->uri_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  response_.Swap(&other->response_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  qop_.Swap(&other->qop_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nc_.Swap(&other->nc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cnonce_.Swap(&other->cnonce_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  accesstoken_.Swap(&other->accesstoken_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  accesstokensecret_.Swap(&other->accesstokensecret_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  scope_.Swap(&other->scope_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(rememberme_, other->rememberme_);
  swap(usetokencookie_, other->usetokencookie_);
}

::google::protobuf::Metadata Authenticate::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[kIndexInFileMessages];
}


// ===================================================================

AuthenticateResponse_MetaEntry_DoNotUse::AuthenticateResponse_MetaEntry_DoNotUse() {}
AuthenticateResponse_MetaEntry_DoNotUse::AuthenticateResponse_MetaEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void AuthenticateResponse_MetaEntry_DoNotUse::MergeFrom(const AuthenticateResponse_MetaEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata AuthenticateResponse_MetaEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[6];
}
void AuthenticateResponse_MetaEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AuthenticateResponse_MetaEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      AuthenticateResponse_MetaEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "AuthenticateResponse.MetaEntry.key"));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.value().data(), static_cast<int>(parser.value().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "AuthenticateResponse.MetaEntry.value"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void AuthenticateResponse::InitAsDefaultInstance() {
  ::_AuthenticateResponse_default_instance_._instance.get_mutable()->responsestatus_ = const_cast< ::ResponseStatus*>(
      ::ResponseStatus::internal_default_instance());
}
class AuthenticateResponse::HasBitSetters {
 public:
  static const ::ResponseStatus& responsestatus(const AuthenticateResponse* msg);
};

const ::ResponseStatus&
AuthenticateResponse::HasBitSetters::responsestatus(const AuthenticateResponse* msg) {
  return *msg->responsestatus_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthenticateResponse::kUserIdFieldNumber;
const int AuthenticateResponse::kSessionIdFieldNumber;
const int AuthenticateResponse::kUserNameFieldNumber;
const int AuthenticateResponse::kDisplayNameFieldNumber;
const int AuthenticateResponse::kReferrerUrlFieldNumber;
const int AuthenticateResponse::kBearerTokenFieldNumber;
const int AuthenticateResponse::kRefreshTokenFieldNumber;
const int AuthenticateResponse::kProfileUrlFieldNumber;
const int AuthenticateResponse::kRolesFieldNumber;
const int AuthenticateResponse::kPermissionsFieldNumber;
const int AuthenticateResponse::kResponseStatusFieldNumber;
const int AuthenticateResponse::kMetaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthenticateResponse::AuthenticateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AuthenticateResponse)
}
AuthenticateResponse::AuthenticateResponse(const AuthenticateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      roles_(from.roles_),
      permissions_(from.permissions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  meta_.MergeFrom(from.meta_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userid().size() > 0) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sessionid().size() > 0) {
    sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
  }
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  displayname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.displayname().size() > 0) {
    displayname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.displayname_);
  }
  referrerurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.referrerurl().size() > 0) {
    referrerurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.referrerurl_);
  }
  bearertoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bearertoken().size() > 0) {
    bearertoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bearertoken_);
  }
  refreshtoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.refreshtoken().size() > 0) {
    refreshtoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.refreshtoken_);
  }
  profileurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.profileurl().size() > 0) {
    profileurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.profileurl_);
  }
  if (from.has_responsestatus()) {
    responsestatus_ = new ::ResponseStatus(*from.responsestatus_);
  } else {
    responsestatus_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:AuthenticateResponse)
}

void AuthenticateResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AuthenticateResponse_services_2eproto.base);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  displayname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  referrerurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bearertoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  refreshtoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  profileurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  responsestatus_ = nullptr;
}

AuthenticateResponse::~AuthenticateResponse() {
  // @@protoc_insertion_point(destructor:AuthenticateResponse)
  SharedDtor();
}

void AuthenticateResponse::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  displayname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  referrerurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bearertoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  refreshtoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  profileurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete responsestatus_;
}

void AuthenticateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AuthenticateResponse& AuthenticateResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AuthenticateResponse_services_2eproto.base);
  return *internal_default_instance();
}


void AuthenticateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AuthenticateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roles_.Clear();
  permissions_.Clear();
  meta_.Clear();
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  displayname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  referrerurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bearertoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  refreshtoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  profileurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && responsestatus_ != nullptr) {
    delete responsestatus_;
  }
  responsestatus_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AuthenticateResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AuthenticateResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string UserId = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("AuthenticateResponse.UserId");
        object = msg->mutable_userid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string SessionId = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("AuthenticateResponse.SessionId");
        object = msg->mutable_sessionid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string UserName = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("AuthenticateResponse.UserName");
        object = msg->mutable_username();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string DisplayName = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("AuthenticateResponse.DisplayName");
        object = msg->mutable_displayname();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string ReferrerUrl = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("AuthenticateResponse.ReferrerUrl");
        object = msg->mutable_referrerurl();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string BearerToken = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("AuthenticateResponse.BearerToken");
        object = msg->mutable_bearertoken();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string RefreshToken = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("AuthenticateResponse.RefreshToken");
        object = msg->mutable_refreshtoken();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string ProfileUrl = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("AuthenticateResponse.ProfileUrl");
        object = msg->mutable_profileurl();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated string Roles = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("AuthenticateResponse.Roles");
          object = msg->add_roles();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 74 && (ptr += 1));
        break;
      }
      // repeated string Permissions = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("AuthenticateResponse.Permissions");
          object = msg->add_permissions();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 82 && (ptr += 1));
        break;
      }
      // .ResponseStatus ResponseStatus = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::ResponseStatus::_InternalParse;
        object = msg->mutable_responsestatus();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // map<string, string> Meta = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 98) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::AuthenticateResponse_MetaEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->meta_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 98 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AuthenticateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AuthenticateResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string UserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), static_cast<int>(this->userid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AuthenticateResponse.UserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string SessionId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sessionid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sessionid().data(), static_cast<int>(this->sessionid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AuthenticateResponse.SessionId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string UserName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AuthenticateResponse.UserName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string DisplayName = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_displayname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->displayname().data(), static_cast<int>(this->displayname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AuthenticateResponse.DisplayName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ReferrerUrl = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_referrerurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->referrerurl().data(), static_cast<int>(this->referrerurl().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AuthenticateResponse.ReferrerUrl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string BearerToken = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bearertoken()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bearertoken().data(), static_cast<int>(this->bearertoken().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AuthenticateResponse.BearerToken"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string RefreshToken = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_refreshtoken()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->refreshtoken().data(), static_cast<int>(this->refreshtoken().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AuthenticateResponse.RefreshToken"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ProfileUrl = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_profileurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->profileurl().data(), static_cast<int>(this->profileurl().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AuthenticateResponse.ProfileUrl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string Roles = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_roles()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->roles(this->roles_size() - 1).data(),
            static_cast<int>(this->roles(this->roles_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AuthenticateResponse.Roles"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string Permissions = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_permissions()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->permissions(this->permissions_size() - 1).data(),
            static_cast<int>(this->permissions(this->permissions_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AuthenticateResponse.Permissions"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ResponseStatus ResponseStatus = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_responsestatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> Meta = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (98 & 0xFF)) {
          AuthenticateResponse_MetaEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              AuthenticateResponse_MetaEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&meta_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AuthenticateResponse.MetaEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AuthenticateResponse.MetaEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AuthenticateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AuthenticateResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AuthenticateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AuthenticateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string UserId = 1;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AuthenticateResponse.UserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->userid(), output);
  }

  // string SessionId = 2;
  if (this->sessionid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sessionid().data(), static_cast<int>(this->sessionid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AuthenticateResponse.SessionId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sessionid(), output);
  }

  // string UserName = 3;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AuthenticateResponse.UserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->username(), output);
  }

  // string DisplayName = 4;
  if (this->displayname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->displayname().data(), static_cast<int>(this->displayname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AuthenticateResponse.DisplayName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->displayname(), output);
  }

  // string ReferrerUrl = 5;
  if (this->referrerurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->referrerurl().data(), static_cast<int>(this->referrerurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AuthenticateResponse.ReferrerUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->referrerurl(), output);
  }

  // string BearerToken = 6;
  if (this->bearertoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bearertoken().data(), static_cast<int>(this->bearertoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AuthenticateResponse.BearerToken");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->bearertoken(), output);
  }

  // string RefreshToken = 7;
  if (this->refreshtoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->refreshtoken().data(), static_cast<int>(this->refreshtoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AuthenticateResponse.RefreshToken");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->refreshtoken(), output);
  }

  // string ProfileUrl = 8;
  if (this->profileurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->profileurl().data(), static_cast<int>(this->profileurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AuthenticateResponse.ProfileUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->profileurl(), output);
  }

  // repeated string Roles = 9;
  for (int i = 0, n = this->roles_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roles(i).data(), static_cast<int>(this->roles(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AuthenticateResponse.Roles");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->roles(i), output);
  }

  // repeated string Permissions = 10;
  for (int i = 0, n = this->permissions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->permissions(i).data(), static_cast<int>(this->permissions(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AuthenticateResponse.Permissions");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->permissions(i), output);
  }

  // .ResponseStatus ResponseStatus = 11;
  if (this->has_responsestatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, HasBitSetters::responsestatus(this), output);
  }

  // map<string, string> Meta = 12;
  if (!this->meta().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "AuthenticateResponse.MetaEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "AuthenticateResponse.MetaEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->meta().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->meta().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<AuthenticateResponse_MetaEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(meta_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(12, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<AuthenticateResponse_MetaEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it) {
        entry.reset(meta_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(12, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AuthenticateResponse)
}

::google::protobuf::uint8* AuthenticateResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AuthenticateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string UserId = 1;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AuthenticateResponse.UserId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->userid(), target);
  }

  // string SessionId = 2;
  if (this->sessionid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sessionid().data(), static_cast<int>(this->sessionid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AuthenticateResponse.SessionId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sessionid(), target);
  }

  // string UserName = 3;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AuthenticateResponse.UserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->username(), target);
  }

  // string DisplayName = 4;
  if (this->displayname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->displayname().data(), static_cast<int>(this->displayname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AuthenticateResponse.DisplayName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->displayname(), target);
  }

  // string ReferrerUrl = 5;
  if (this->referrerurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->referrerurl().data(), static_cast<int>(this->referrerurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AuthenticateResponse.ReferrerUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->referrerurl(), target);
  }

  // string BearerToken = 6;
  if (this->bearertoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bearertoken().data(), static_cast<int>(this->bearertoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AuthenticateResponse.BearerToken");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->bearertoken(), target);
  }

  // string RefreshToken = 7;
  if (this->refreshtoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->refreshtoken().data(), static_cast<int>(this->refreshtoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AuthenticateResponse.RefreshToken");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->refreshtoken(), target);
  }

  // string ProfileUrl = 8;
  if (this->profileurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->profileurl().data(), static_cast<int>(this->profileurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AuthenticateResponse.ProfileUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->profileurl(), target);
  }

  // repeated string Roles = 9;
  for (int i = 0, n = this->roles_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roles(i).data(), static_cast<int>(this->roles(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AuthenticateResponse.Roles");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(9, this->roles(i), target);
  }

  // repeated string Permissions = 10;
  for (int i = 0, n = this->permissions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->permissions(i).data(), static_cast<int>(this->permissions(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AuthenticateResponse.Permissions");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(10, this->permissions(i), target);
  }

  // .ResponseStatus ResponseStatus = 11;
  if (this->has_responsestatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, HasBitSetters::responsestatus(this), target);
  }

  // map<string, string> Meta = 12;
  if (!this->meta().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "AuthenticateResponse.MetaEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "AuthenticateResponse.MetaEntry.value");
      }
    };

    if (false &&
        this->meta().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->meta().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<AuthenticateResponse_MetaEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(meta_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(12, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<AuthenticateResponse_MetaEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it) {
        entry.reset(meta_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(12, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AuthenticateResponse)
  return target;
}

size_t AuthenticateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AuthenticateResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string Roles = 9;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->roles_size());
  for (int i = 0, n = this->roles_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->roles(i));
  }

  // repeated string Permissions = 10;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->permissions_size());
  for (int i = 0, n = this->permissions_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->permissions(i));
  }

  // map<string, string> Meta = 12;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->meta_size());
  {
    ::std::unique_ptr<AuthenticateResponse_MetaEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->meta().begin();
        it != this->meta().end(); ++it) {
      entry.reset(meta_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string UserId = 1;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // string SessionId = 2;
  if (this->sessionid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sessionid());
  }

  // string UserName = 3;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string DisplayName = 4;
  if (this->displayname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->displayname());
  }

  // string ReferrerUrl = 5;
  if (this->referrerurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->referrerurl());
  }

  // string BearerToken = 6;
  if (this->bearertoken().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bearertoken());
  }

  // string RefreshToken = 7;
  if (this->refreshtoken().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->refreshtoken());
  }

  // string ProfileUrl = 8;
  if (this->profileurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->profileurl());
  }

  // .ResponseStatus ResponseStatus = 11;
  if (this->has_responsestatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *responsestatus_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AuthenticateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AuthenticateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthenticateResponse* source =
      ::google::protobuf::DynamicCastToGenerated<AuthenticateResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AuthenticateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AuthenticateResponse)
    MergeFrom(*source);
  }
}

void AuthenticateResponse::MergeFrom(const AuthenticateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AuthenticateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  roles_.MergeFrom(from.roles_);
  permissions_.MergeFrom(from.permissions_);
  meta_.MergeFrom(from.meta_);
  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.sessionid().size() > 0) {

    sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
  }
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.displayname().size() > 0) {

    displayname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.displayname_);
  }
  if (from.referrerurl().size() > 0) {

    referrerurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.referrerurl_);
  }
  if (from.bearertoken().size() > 0) {

    bearertoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bearertoken_);
  }
  if (from.refreshtoken().size() > 0) {

    refreshtoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.refreshtoken_);
  }
  if (from.profileurl().size() > 0) {

    profileurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.profileurl_);
  }
  if (from.has_responsestatus()) {
    mutable_responsestatus()->::ResponseStatus::MergeFrom(from.responsestatus());
  }
}

void AuthenticateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AuthenticateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthenticateResponse::CopyFrom(const AuthenticateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AuthenticateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthenticateResponse::IsInitialized() const {
  return true;
}

void AuthenticateResponse::Swap(AuthenticateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthenticateResponse::InternalSwap(AuthenticateResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  roles_.InternalSwap(CastToBase(&other->roles_));
  permissions_.InternalSwap(CastToBase(&other->permissions_));
  meta_.Swap(&other->meta_);
  userid_.Swap(&other->userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sessionid_.Swap(&other->sessionid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  username_.Swap(&other->username_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  displayname_.Swap(&other->displayname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  referrerurl_.Swap(&other->referrerurl_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bearertoken_.Swap(&other->bearertoken_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  refreshtoken_.Swap(&other->refreshtoken_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  profileurl_.Swap(&other->profileurl_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(responsestatus_, other->responsestatus_);
}

::google::protobuf::Metadata AuthenticateResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[kIndexInFileMessages];
}


// ===================================================================

ConvertSessionToToken_MetaEntry_DoNotUse::ConvertSessionToToken_MetaEntry_DoNotUse() {}
ConvertSessionToToken_MetaEntry_DoNotUse::ConvertSessionToToken_MetaEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void ConvertSessionToToken_MetaEntry_DoNotUse::MergeFrom(const ConvertSessionToToken_MetaEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ConvertSessionToToken_MetaEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[8];
}
void ConvertSessionToToken_MetaEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ConvertSessionToToken_MetaEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      ConvertSessionToToken_MetaEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "ConvertSessionToToken.MetaEntry.key"));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.value().data(), static_cast<int>(parser.value().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "ConvertSessionToToken.MetaEntry.value"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void ConvertSessionToToken::InitAsDefaultInstance() {
}
class ConvertSessionToToken::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConvertSessionToToken::kPreserveSessionFieldNumber;
const int ConvertSessionToToken::kMetaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConvertSessionToToken::ConvertSessionToToken()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConvertSessionToToken)
}
ConvertSessionToToken::ConvertSessionToToken(const ConvertSessionToToken& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  meta_.MergeFrom(from.meta_);
  preservesession_ = from.preservesession_;
  // @@protoc_insertion_point(copy_constructor:ConvertSessionToToken)
}

void ConvertSessionToToken::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ConvertSessionToToken_services_2eproto.base);
  preservesession_ = false;
}

ConvertSessionToToken::~ConvertSessionToToken() {
  // @@protoc_insertion_point(destructor:ConvertSessionToToken)
  SharedDtor();
}

void ConvertSessionToToken::SharedDtor() {
}

void ConvertSessionToToken::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ConvertSessionToToken& ConvertSessionToToken::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ConvertSessionToToken_services_2eproto.base);
  return *internal_default_instance();
}


void ConvertSessionToToken::Clear() {
// @@protoc_insertion_point(message_clear_start:ConvertSessionToToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  meta_.Clear();
  preservesession_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ConvertSessionToToken::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ConvertSessionToToken*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool PreserveSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_preservesession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // map<string, string> Meta = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::ConvertSessionToToken_MetaEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->meta_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ConvertSessionToToken::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConvertSessionToToken)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool PreserveSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &preservesession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> Meta = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          ConvertSessionToToken_MetaEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ConvertSessionToToken_MetaEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&meta_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ConvertSessionToToken.MetaEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ConvertSessionToToken.MetaEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConvertSessionToToken)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConvertSessionToToken)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ConvertSessionToToken::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConvertSessionToToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool PreserveSession = 1;
  if (this->preservesession() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->preservesession(), output);
  }

  // map<string, string> Meta = 2;
  if (!this->meta().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ConvertSessionToToken.MetaEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ConvertSessionToToken.MetaEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->meta().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->meta().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ConvertSessionToToken_MetaEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(meta_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<ConvertSessionToToken_MetaEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it) {
        entry.reset(meta_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConvertSessionToToken)
}

::google::protobuf::uint8* ConvertSessionToToken::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConvertSessionToToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool PreserveSession = 1;
  if (this->preservesession() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->preservesession(), target);
  }

  // map<string, string> Meta = 2;
  if (!this->meta().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ConvertSessionToToken.MetaEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ConvertSessionToToken.MetaEntry.value");
      }
    };

    if (false &&
        this->meta().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->meta().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ConvertSessionToToken_MetaEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(meta_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(2, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<ConvertSessionToToken_MetaEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it) {
        entry.reset(meta_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(2, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConvertSessionToToken)
  return target;
}

size_t ConvertSessionToToken::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ConvertSessionToToken)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> Meta = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->meta_size());
  {
    ::std::unique_ptr<ConvertSessionToToken_MetaEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->meta().begin();
        it != this->meta().end(); ++it) {
      entry.reset(meta_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // bool PreserveSession = 1;
  if (this->preservesession() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConvertSessionToToken::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ConvertSessionToToken)
  GOOGLE_DCHECK_NE(&from, this);
  const ConvertSessionToToken* source =
      ::google::protobuf::DynamicCastToGenerated<ConvertSessionToToken>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ConvertSessionToToken)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ConvertSessionToToken)
    MergeFrom(*source);
  }
}

void ConvertSessionToToken::MergeFrom(const ConvertSessionToToken& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ConvertSessionToToken)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  meta_.MergeFrom(from.meta_);
  if (from.preservesession() != 0) {
    set_preservesession(from.preservesession());
  }
}

void ConvertSessionToToken::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ConvertSessionToToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConvertSessionToToken::CopyFrom(const ConvertSessionToToken& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ConvertSessionToToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConvertSessionToToken::IsInitialized() const {
  return true;
}

void ConvertSessionToToken::Swap(ConvertSessionToToken* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConvertSessionToToken::InternalSwap(ConvertSessionToToken* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  meta_.Swap(&other->meta_);
  swap(preservesession_, other->preservesession_);
}

::google::protobuf::Metadata ConvertSessionToToken::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[kIndexInFileMessages];
}


// ===================================================================

ConvertSessionToTokenResponse_MetaEntry_DoNotUse::ConvertSessionToTokenResponse_MetaEntry_DoNotUse() {}
ConvertSessionToTokenResponse_MetaEntry_DoNotUse::ConvertSessionToTokenResponse_MetaEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void ConvertSessionToTokenResponse_MetaEntry_DoNotUse::MergeFrom(const ConvertSessionToTokenResponse_MetaEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ConvertSessionToTokenResponse_MetaEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[10];
}
void ConvertSessionToTokenResponse_MetaEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ConvertSessionToTokenResponse_MetaEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      ConvertSessionToTokenResponse_MetaEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "ConvertSessionToTokenResponse.MetaEntry.key"));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.value().data(), static_cast<int>(parser.value().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "ConvertSessionToTokenResponse.MetaEntry.value"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void ConvertSessionToTokenResponse::InitAsDefaultInstance() {
  ::_ConvertSessionToTokenResponse_default_instance_._instance.get_mutable()->responsestatus_ = const_cast< ::ResponseStatus*>(
      ::ResponseStatus::internal_default_instance());
}
class ConvertSessionToTokenResponse::HasBitSetters {
 public:
  static const ::ResponseStatus& responsestatus(const ConvertSessionToTokenResponse* msg);
};

const ::ResponseStatus&
ConvertSessionToTokenResponse::HasBitSetters::responsestatus(const ConvertSessionToTokenResponse* msg) {
  return *msg->responsestatus_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConvertSessionToTokenResponse::kMetaFieldNumber;
const int ConvertSessionToTokenResponse::kAccessTokenFieldNumber;
const int ConvertSessionToTokenResponse::kRefreshTokenFieldNumber;
const int ConvertSessionToTokenResponse::kResponseStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConvertSessionToTokenResponse::ConvertSessionToTokenResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConvertSessionToTokenResponse)
}
ConvertSessionToTokenResponse::ConvertSessionToTokenResponse(const ConvertSessionToTokenResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  meta_.MergeFrom(from.meta_);
  accesstoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.accesstoken().size() > 0) {
    accesstoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accesstoken_);
  }
  refreshtoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.refreshtoken().size() > 0) {
    refreshtoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.refreshtoken_);
  }
  if (from.has_responsestatus()) {
    responsestatus_ = new ::ResponseStatus(*from.responsestatus_);
  } else {
    responsestatus_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ConvertSessionToTokenResponse)
}

void ConvertSessionToTokenResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ConvertSessionToTokenResponse_services_2eproto.base);
  accesstoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  refreshtoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  responsestatus_ = nullptr;
}

ConvertSessionToTokenResponse::~ConvertSessionToTokenResponse() {
  // @@protoc_insertion_point(destructor:ConvertSessionToTokenResponse)
  SharedDtor();
}

void ConvertSessionToTokenResponse::SharedDtor() {
  accesstoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  refreshtoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete responsestatus_;
}

void ConvertSessionToTokenResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ConvertSessionToTokenResponse& ConvertSessionToTokenResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ConvertSessionToTokenResponse_services_2eproto.base);
  return *internal_default_instance();
}


void ConvertSessionToTokenResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ConvertSessionToTokenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  meta_.Clear();
  accesstoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  refreshtoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && responsestatus_ != nullptr) {
    delete responsestatus_;
  }
  responsestatus_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ConvertSessionToTokenResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ConvertSessionToTokenResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // map<string, string> Meta = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::ConvertSessionToTokenResponse_MetaEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->meta_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // string AccessToken = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ConvertSessionToTokenResponse.AccessToken");
        object = msg->mutable_accesstoken();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string RefreshToken = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ConvertSessionToTokenResponse.RefreshToken");
        object = msg->mutable_refreshtoken();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .ResponseStatus ResponseStatus = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::ResponseStatus::_InternalParse;
        object = msg->mutable_responsestatus();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ConvertSessionToTokenResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConvertSessionToTokenResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> Meta = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          ConvertSessionToTokenResponse_MetaEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ConvertSessionToTokenResponse_MetaEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&meta_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ConvertSessionToTokenResponse.MetaEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ConvertSessionToTokenResponse.MetaEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string AccessToken = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accesstoken()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->accesstoken().data(), static_cast<int>(this->accesstoken().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ConvertSessionToTokenResponse.AccessToken"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string RefreshToken = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_refreshtoken()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->refreshtoken().data(), static_cast<int>(this->refreshtoken().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ConvertSessionToTokenResponse.RefreshToken"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ResponseStatus ResponseStatus = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_responsestatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConvertSessionToTokenResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConvertSessionToTokenResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ConvertSessionToTokenResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConvertSessionToTokenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> Meta = 1;
  if (!this->meta().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ConvertSessionToTokenResponse.MetaEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ConvertSessionToTokenResponse.MetaEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->meta().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->meta().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ConvertSessionToTokenResponse_MetaEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(meta_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(1, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<ConvertSessionToTokenResponse_MetaEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it) {
        entry.reset(meta_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(1, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // string AccessToken = 2;
  if (this->accesstoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accesstoken().data(), static_cast<int>(this->accesstoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ConvertSessionToTokenResponse.AccessToken");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->accesstoken(), output);
  }

  // string RefreshToken = 3;
  if (this->refreshtoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->refreshtoken().data(), static_cast<int>(this->refreshtoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ConvertSessionToTokenResponse.RefreshToken");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->refreshtoken(), output);
  }

  // .ResponseStatus ResponseStatus = 4;
  if (this->has_responsestatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::responsestatus(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConvertSessionToTokenResponse)
}

::google::protobuf::uint8* ConvertSessionToTokenResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConvertSessionToTokenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> Meta = 1;
  if (!this->meta().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ConvertSessionToTokenResponse.MetaEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ConvertSessionToTokenResponse.MetaEntry.value");
      }
    };

    if (false &&
        this->meta().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->meta().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ConvertSessionToTokenResponse_MetaEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(meta_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(1, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<ConvertSessionToTokenResponse_MetaEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it) {
        entry.reset(meta_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(1, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // string AccessToken = 2;
  if (this->accesstoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accesstoken().data(), static_cast<int>(this->accesstoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ConvertSessionToTokenResponse.AccessToken");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->accesstoken(), target);
  }

  // string RefreshToken = 3;
  if (this->refreshtoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->refreshtoken().data(), static_cast<int>(this->refreshtoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ConvertSessionToTokenResponse.RefreshToken");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->refreshtoken(), target);
  }

  // .ResponseStatus ResponseStatus = 4;
  if (this->has_responsestatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::responsestatus(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConvertSessionToTokenResponse)
  return target;
}

size_t ConvertSessionToTokenResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ConvertSessionToTokenResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> Meta = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->meta_size());
  {
    ::std::unique_ptr<ConvertSessionToTokenResponse_MetaEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->meta().begin();
        it != this->meta().end(); ++it) {
      entry.reset(meta_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string AccessToken = 2;
  if (this->accesstoken().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->accesstoken());
  }

  // string RefreshToken = 3;
  if (this->refreshtoken().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->refreshtoken());
  }

  // .ResponseStatus ResponseStatus = 4;
  if (this->has_responsestatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *responsestatus_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConvertSessionToTokenResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ConvertSessionToTokenResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ConvertSessionToTokenResponse* source =
      ::google::protobuf::DynamicCastToGenerated<ConvertSessionToTokenResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ConvertSessionToTokenResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ConvertSessionToTokenResponse)
    MergeFrom(*source);
  }
}

void ConvertSessionToTokenResponse::MergeFrom(const ConvertSessionToTokenResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ConvertSessionToTokenResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  meta_.MergeFrom(from.meta_);
  if (from.accesstoken().size() > 0) {

    accesstoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accesstoken_);
  }
  if (from.refreshtoken().size() > 0) {

    refreshtoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.refreshtoken_);
  }
  if (from.has_responsestatus()) {
    mutable_responsestatus()->::ResponseStatus::MergeFrom(from.responsestatus());
  }
}

void ConvertSessionToTokenResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ConvertSessionToTokenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConvertSessionToTokenResponse::CopyFrom(const ConvertSessionToTokenResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ConvertSessionToTokenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConvertSessionToTokenResponse::IsInitialized() const {
  return true;
}

void ConvertSessionToTokenResponse::Swap(ConvertSessionToTokenResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConvertSessionToTokenResponse::InternalSwap(ConvertSessionToTokenResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  meta_.Swap(&other->meta_);
  accesstoken_.Swap(&other->accesstoken_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  refreshtoken_.Swap(&other->refreshtoken_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(responsestatus_, other->responsestatus_);
}

::google::protobuf::Metadata ConvertSessionToTokenResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CreateTodo::InitAsDefaultInstance() {
}
class CreateTodo::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateTodo::kTitleFieldNumber;
const int CreateTodo::kOrderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateTodo::CreateTodo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CreateTodo)
}
CreateTodo::CreateTodo(const CreateTodo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  order_ = from.order_;
  // @@protoc_insertion_point(copy_constructor:CreateTodo)
}

void CreateTodo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CreateTodo_services_2eproto.base);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_ = 0;
}

CreateTodo::~CreateTodo() {
  // @@protoc_insertion_point(destructor:CreateTodo)
  SharedDtor();
}

void CreateTodo::SharedDtor() {
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateTodo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateTodo& CreateTodo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CreateTodo_services_2eproto.base);
  return *internal_default_instance();
}


void CreateTodo::Clear() {
// @@protoc_insertion_point(message_clear_start:CreateTodo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CreateTodo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CreateTodo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string Title = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("CreateTodo.Title");
        object = msg->mutable_title();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 Order = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_order(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CreateTodo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CreateTodo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Title = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CreateTodo.Title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Order = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &order_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CreateTodo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CreateTodo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CreateTodo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CreateTodo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Title = 1;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CreateTodo.Title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->title(), output);
  }

  // int32 Order = 2;
  if (this->order() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->order(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CreateTodo)
}

::google::protobuf::uint8* CreateTodo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CreateTodo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Title = 1;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CreateTodo.Title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->title(), target);
  }

  // int32 Order = 2;
  if (this->order() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->order(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CreateTodo)
  return target;
}

size_t CreateTodo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CreateTodo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Title = 1;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // int32 Order = 2;
  if (this->order() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->order());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateTodo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CreateTodo)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateTodo* source =
      ::google::protobuf::DynamicCastToGenerated<CreateTodo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CreateTodo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CreateTodo)
    MergeFrom(*source);
  }
}

void CreateTodo::MergeFrom(const CreateTodo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CreateTodo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.order() != 0) {
    set_order(from.order());
  }
}

void CreateTodo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CreateTodo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateTodo::CopyFrom(const CreateTodo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CreateTodo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateTodo::IsInitialized() const {
  return true;
}

void CreateTodo::Swap(CreateTodo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateTodo::InternalSwap(CreateTodo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  title_.Swap(&other->title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(order_, other->order_);
}

::google::protobuf::Metadata CreateTodo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CreateTodoResponse::InitAsDefaultInstance() {
  ::_CreateTodoResponse_default_instance_._instance.get_mutable()->result_ = const_cast< ::Todo*>(
      ::Todo::internal_default_instance());
  ::_CreateTodoResponse_default_instance_._instance.get_mutable()->responsestatus_ = const_cast< ::ResponseStatus*>(
      ::ResponseStatus::internal_default_instance());
}
class CreateTodoResponse::HasBitSetters {
 public:
  static const ::Todo& result(const CreateTodoResponse* msg);
  static const ::ResponseStatus& responsestatus(const CreateTodoResponse* msg);
};

const ::Todo&
CreateTodoResponse::HasBitSetters::result(const CreateTodoResponse* msg) {
  return *msg->result_;
}
const ::ResponseStatus&
CreateTodoResponse::HasBitSetters::responsestatus(const CreateTodoResponse* msg) {
  return *msg->responsestatus_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateTodoResponse::kResultFieldNumber;
const int CreateTodoResponse::kResponseStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateTodoResponse::CreateTodoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CreateTodoResponse)
}
CreateTodoResponse::CreateTodoResponse(const CreateTodoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_result()) {
    result_ = new ::Todo(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from.has_responsestatus()) {
    responsestatus_ = new ::ResponseStatus(*from.responsestatus_);
  } else {
    responsestatus_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:CreateTodoResponse)
}

void CreateTodoResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CreateTodoResponse_services_2eproto.base);
  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&responsestatus_) -
      reinterpret_cast<char*>(&result_)) + sizeof(responsestatus_));
}

CreateTodoResponse::~CreateTodoResponse() {
  // @@protoc_insertion_point(destructor:CreateTodoResponse)
  SharedDtor();
}

void CreateTodoResponse::SharedDtor() {
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete responsestatus_;
}

void CreateTodoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateTodoResponse& CreateTodoResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CreateTodoResponse_services_2eproto.base);
  return *internal_default_instance();
}


void CreateTodoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CreateTodoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && responsestatus_ != nullptr) {
    delete responsestatus_;
  }
  responsestatus_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CreateTodoResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CreateTodoResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .Todo Result = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::Todo::_InternalParse;
        object = msg->mutable_result();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .ResponseStatus ResponseStatus = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::ResponseStatus::_InternalParse;
        object = msg->mutable_responsestatus();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CreateTodoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CreateTodoResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Todo Result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ResponseStatus ResponseStatus = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_responsestatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CreateTodoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CreateTodoResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CreateTodoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CreateTodoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Todo Result = 1;
  if (this->has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::result(this), output);
  }

  // .ResponseStatus ResponseStatus = 2;
  if (this->has_responsestatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::responsestatus(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CreateTodoResponse)
}

::google::protobuf::uint8* CreateTodoResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CreateTodoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Todo Result = 1;
  if (this->has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::result(this), target);
  }

  // .ResponseStatus ResponseStatus = 2;
  if (this->has_responsestatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::responsestatus(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CreateTodoResponse)
  return target;
}

size_t CreateTodoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CreateTodoResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Todo Result = 1;
  if (this->has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .ResponseStatus ResponseStatus = 2;
  if (this->has_responsestatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *responsestatus_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateTodoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CreateTodoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateTodoResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CreateTodoResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CreateTodoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CreateTodoResponse)
    MergeFrom(*source);
  }
}

void CreateTodoResponse::MergeFrom(const CreateTodoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CreateTodoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    mutable_result()->::Todo::MergeFrom(from.result());
  }
  if (from.has_responsestatus()) {
    mutable_responsestatus()->::ResponseStatus::MergeFrom(from.responsestatus());
  }
}

void CreateTodoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CreateTodoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateTodoResponse::CopyFrom(const CreateTodoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CreateTodoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateTodoResponse::IsInitialized() const {
  return true;
}

void CreateTodoResponse::Swap(CreateTodoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateTodoResponse::InternalSwap(CreateTodoResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(result_, other->result_);
  swap(responsestatus_, other->responsestatus_);
}

::google::protobuf::Metadata CreateTodoResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DeleteTodo::InitAsDefaultInstance() {
}
class DeleteTodo::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteTodo::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteTodo::DeleteTodo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeleteTodo)
}
DeleteTodo::DeleteTodo(const DeleteTodo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:DeleteTodo)
}

void DeleteTodo::SharedCtor() {
  id_ = PROTOBUF_LONGLONG(0);
}

DeleteTodo::~DeleteTodo() {
  // @@protoc_insertion_point(destructor:DeleteTodo)
  SharedDtor();
}

void DeleteTodo::SharedDtor() {
}

void DeleteTodo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteTodo& DeleteTodo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DeleteTodo_services_2eproto.base);
  return *internal_default_instance();
}


void DeleteTodo::Clear() {
// @@protoc_insertion_point(message_clear_start:DeleteTodo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DeleteTodo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DeleteTodo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 Id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DeleteTodo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DeleteTodo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeleteTodo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeleteTodo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DeleteTodo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeleteTodo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DeleteTodo)
}

::google::protobuf::uint8* DeleteTodo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DeleteTodo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeleteTodo)
  return target;
}

size_t DeleteTodo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DeleteTodo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteTodo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DeleteTodo)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteTodo* source =
      ::google::protobuf::DynamicCastToGenerated<DeleteTodo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DeleteTodo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DeleteTodo)
    MergeFrom(*source);
  }
}

void DeleteTodo::MergeFrom(const DeleteTodo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DeleteTodo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
}

void DeleteTodo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DeleteTodo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteTodo::CopyFrom(const DeleteTodo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeleteTodo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteTodo::IsInitialized() const {
  return true;
}

void DeleteTodo::Swap(DeleteTodo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteTodo::InternalSwap(DeleteTodo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::google::protobuf::Metadata DeleteTodo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DeleteTodos::InitAsDefaultInstance() {
}
class DeleteTodos::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteTodos::kIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteTodos::DeleteTodos()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeleteTodos)
}
DeleteTodos::DeleteTodos(const DeleteTodos& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      ids_(from.ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:DeleteTodos)
}

void DeleteTodos::SharedCtor() {
}

DeleteTodos::~DeleteTodos() {
  // @@protoc_insertion_point(destructor:DeleteTodos)
  SharedDtor();
}

void DeleteTodos::SharedDtor() {
}

void DeleteTodos::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteTodos& DeleteTodos::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DeleteTodos_services_2eproto.base);
  return *internal_default_instance();
}


void DeleteTodos::Clear() {
// @@protoc_insertion_point(message_clear_start:DeleteTodos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ids_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DeleteTodos::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DeleteTodos*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated int64 Ids = 1 [packed = false];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) == 8) {
          do {
            msg->add_ids(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 8 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedInt64Parser;
        object = msg->mutable_ids();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DeleteTodos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DeleteTodos)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 Ids = 1 [packed = false];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 8u, input, this->mutable_ids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeleteTodos)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeleteTodos)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DeleteTodos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeleteTodos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 Ids = 1 [packed = false];
  for (int i = 0, n = this->ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      1, this->ids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DeleteTodos)
}

::google::protobuf::uint8* DeleteTodos::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DeleteTodos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 Ids = 1 [packed = false];
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt64ToArray(1, this->ids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeleteTodos)
  return target;
}

size_t DeleteTodos::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DeleteTodos)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 Ids = 1 [packed = false];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->ids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->ids_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteTodos::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DeleteTodos)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteTodos* source =
      ::google::protobuf::DynamicCastToGenerated<DeleteTodos>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DeleteTodos)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DeleteTodos)
    MergeFrom(*source);
  }
}

void DeleteTodos::MergeFrom(const DeleteTodos& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DeleteTodos)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ids_.MergeFrom(from.ids_);
}

void DeleteTodos::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DeleteTodos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteTodos::CopyFrom(const DeleteTodos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeleteTodos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteTodos::IsInitialized() const {
  return true;
}

void DeleteTodos::Swap(DeleteTodos* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteTodos::InternalSwap(DeleteTodos* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  ids_.InternalSwap(&other->ids_);
}

::google::protobuf::Metadata DeleteTodos::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[kIndexInFileMessages];
}


// ===================================================================

void EmptyResponse::InitAsDefaultInstance() {
  ::_EmptyResponse_default_instance_._instance.get_mutable()->responsestatus_ = const_cast< ::ResponseStatus*>(
      ::ResponseStatus::internal_default_instance());
}
class EmptyResponse::HasBitSetters {
 public:
  static const ::ResponseStatus& responsestatus(const EmptyResponse* msg);
};

const ::ResponseStatus&
EmptyResponse::HasBitSetters::responsestatus(const EmptyResponse* msg) {
  return *msg->responsestatus_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EmptyResponse::kResponseStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EmptyResponse::EmptyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:EmptyResponse)
}
EmptyResponse::EmptyResponse(const EmptyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_responsestatus()) {
    responsestatus_ = new ::ResponseStatus(*from.responsestatus_);
  } else {
    responsestatus_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:EmptyResponse)
}

void EmptyResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_EmptyResponse_services_2eproto.base);
  responsestatus_ = nullptr;
}

EmptyResponse::~EmptyResponse() {
  // @@protoc_insertion_point(destructor:EmptyResponse)
  SharedDtor();
}

void EmptyResponse::SharedDtor() {
  if (this != internal_default_instance()) delete responsestatus_;
}

void EmptyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EmptyResponse& EmptyResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_EmptyResponse_services_2eproto.base);
  return *internal_default_instance();
}


void EmptyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:EmptyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && responsestatus_ != nullptr) {
    delete responsestatus_;
  }
  responsestatus_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* EmptyResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<EmptyResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .ResponseStatus ResponseStatus = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::ResponseStatus::_InternalParse;
        object = msg->mutable_responsestatus();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool EmptyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EmptyResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ResponseStatus ResponseStatus = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_responsestatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EmptyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EmptyResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void EmptyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EmptyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ResponseStatus ResponseStatus = 1;
  if (this->has_responsestatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::responsestatus(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:EmptyResponse)
}

::google::protobuf::uint8* EmptyResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:EmptyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ResponseStatus ResponseStatus = 1;
  if (this->has_responsestatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::responsestatus(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EmptyResponse)
  return target;
}

size_t EmptyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:EmptyResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ResponseStatus ResponseStatus = 1;
  if (this->has_responsestatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *responsestatus_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EmptyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:EmptyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const EmptyResponse* source =
      ::google::protobuf::DynamicCastToGenerated<EmptyResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:EmptyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:EmptyResponse)
    MergeFrom(*source);
  }
}

void EmptyResponse::MergeFrom(const EmptyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:EmptyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_responsestatus()) {
    mutable_responsestatus()->::ResponseStatus::MergeFrom(from.responsestatus());
  }
}

void EmptyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:EmptyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmptyResponse::CopyFrom(const EmptyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EmptyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmptyResponse::IsInitialized() const {
  return true;
}

void EmptyResponse::Swap(EmptyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EmptyResponse::InternalSwap(EmptyResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(responsestatus_, other->responsestatus_);
}

::google::protobuf::Metadata EmptyResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[kIndexInFileMessages];
}


// ===================================================================

void FileContent::InitAsDefaultInstance() {
  ::_FileContent_default_instance_._instance.get_mutable()->responsestatus_ = const_cast< ::ResponseStatus*>(
      ::ResponseStatus::internal_default_instance());
}
class FileContent::HasBitSetters {
 public:
  static const ::ResponseStatus& responsestatus(const FileContent* msg);
};

const ::ResponseStatus&
FileContent::HasBitSetters::responsestatus(const FileContent* msg) {
  return *msg->responsestatus_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileContent::kNameFieldNumber;
const int FileContent::kTypeFieldNumber;
const int FileContent::kLengthFieldNumber;
const int FileContent::kBodyFieldNumber;
const int FileContent::kResponseStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileContent::FileContent()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FileContent)
}
FileContent::FileContent(const FileContent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.body().size() > 0) {
    body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
  }
  if (from.has_responsestatus()) {
    responsestatus_ = new ::ResponseStatus(*from.responsestatus_);
  } else {
    responsestatus_ = nullptr;
  }
  length_ = from.length_;
  // @@protoc_insertion_point(copy_constructor:FileContent)
}

void FileContent::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_FileContent_services_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&responsestatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&length_) -
      reinterpret_cast<char*>(&responsestatus_)) + sizeof(length_));
}

FileContent::~FileContent() {
  // @@protoc_insertion_point(destructor:FileContent)
  SharedDtor();
}

void FileContent::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete responsestatus_;
}

void FileContent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FileContent& FileContent::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_FileContent_services_2eproto.base);
  return *internal_default_instance();
}


void FileContent::Clear() {
// @@protoc_insertion_point(message_clear_start:FileContent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && responsestatus_ != nullptr) {
    delete responsestatus_;
  }
  responsestatus_ = nullptr;
  length_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* FileContent::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<FileContent*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string Name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("FileContent.Name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string Type = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("FileContent.Type");
        object = msg->mutable_type();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 Length = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_length(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bytes Body = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_body();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .ResponseStatus ResponseStatus = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::ResponseStatus::_InternalParse;
        object = msg->mutable_responsestatus();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool FileContent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FileContent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "FileContent.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "FileContent.Type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Length = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes Body = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_body()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ResponseStatus ResponseStatus = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_responsestatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FileContent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FileContent)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void FileContent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FileContent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "FileContent.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string Type = 2;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "FileContent.Type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->type(), output);
  }

  // int32 Length = 3;
  if (this->length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->length(), output);
  }

  // bytes Body = 4;
  if (this->body().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->body(), output);
  }

  // .ResponseStatus ResponseStatus = 5;
  if (this->has_responsestatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::responsestatus(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FileContent)
}

::google::protobuf::uint8* FileContent::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FileContent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "FileContent.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string Type = 2;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "FileContent.Type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->type(), target);
  }

  // int32 Length = 3;
  if (this->length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->length(), target);
  }

  // bytes Body = 4;
  if (this->body().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->body(), target);
  }

  // .ResponseStatus ResponseStatus = 5;
  if (this->has_responsestatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::responsestatus(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FileContent)
  return target;
}

size_t FileContent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FileContent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string Type = 2;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // bytes Body = 4;
  if (this->body().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->body());
  }

  // .ResponseStatus ResponseStatus = 5;
  if (this->has_responsestatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *responsestatus_);
  }

  // int32 Length = 3;
  if (this->length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->length());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileContent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FileContent)
  GOOGLE_DCHECK_NE(&from, this);
  const FileContent* source =
      ::google::protobuf::DynamicCastToGenerated<FileContent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FileContent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FileContent)
    MergeFrom(*source);
  }
}

void FileContent::MergeFrom(const FileContent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FileContent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.body().size() > 0) {

    body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
  }
  if (from.has_responsestatus()) {
    mutable_responsestatus()->::ResponseStatus::MergeFrom(from.responsestatus());
  }
  if (from.length() != 0) {
    set_length(from.length());
  }
}

void FileContent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FileContent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileContent::CopyFrom(const FileContent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FileContent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileContent::IsInitialized() const {
  return true;
}

void FileContent::Swap(FileContent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileContent::InternalSwap(FileContent* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  body_.Swap(&other->body_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(responsestatus_, other->responsestatus_);
  swap(length_, other->length_);
}

::google::protobuf::Metadata FileContent::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[kIndexInFileMessages];
}


// ===================================================================

GetAccessToken_MetaEntry_DoNotUse::GetAccessToken_MetaEntry_DoNotUse() {}
GetAccessToken_MetaEntry_DoNotUse::GetAccessToken_MetaEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void GetAccessToken_MetaEntry_DoNotUse::MergeFrom(const GetAccessToken_MetaEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata GetAccessToken_MetaEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[18];
}
void GetAccessToken_MetaEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetAccessToken_MetaEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      GetAccessToken_MetaEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "GetAccessToken.MetaEntry.key"));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.value().data(), static_cast<int>(parser.value().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "GetAccessToken.MetaEntry.value"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void GetAccessToken::InitAsDefaultInstance() {
}
class GetAccessToken::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAccessToken::kRefreshTokenFieldNumber;
const int GetAccessToken::kUseTokenCookieFieldNumber;
const int GetAccessToken::kMetaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAccessToken::GetAccessToken()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetAccessToken)
}
GetAccessToken::GetAccessToken(const GetAccessToken& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  meta_.MergeFrom(from.meta_);
  refreshtoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.refreshtoken().size() > 0) {
    refreshtoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.refreshtoken_);
  }
  usetokencookie_ = from.usetokencookie_;
  // @@protoc_insertion_point(copy_constructor:GetAccessToken)
}

void GetAccessToken::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetAccessToken_services_2eproto.base);
  refreshtoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  usetokencookie_ = false;
}

GetAccessToken::~GetAccessToken() {
  // @@protoc_insertion_point(destructor:GetAccessToken)
  SharedDtor();
}

void GetAccessToken::SharedDtor() {
  refreshtoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetAccessToken::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAccessToken& GetAccessToken::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetAccessToken_services_2eproto.base);
  return *internal_default_instance();
}


void GetAccessToken::Clear() {
// @@protoc_insertion_point(message_clear_start:GetAccessToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  meta_.Clear();
  refreshtoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  usetokencookie_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetAccessToken::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetAccessToken*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string RefreshToken = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("GetAccessToken.RefreshToken");
        object = msg->mutable_refreshtoken();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool UseTokenCookie = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_usetokencookie(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // map<string, string> Meta = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::GetAccessToken_MetaEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->meta_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetAccessToken::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetAccessToken)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string RefreshToken = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_refreshtoken()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->refreshtoken().data(), static_cast<int>(this->refreshtoken().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "GetAccessToken.RefreshToken"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool UseTokenCookie = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &usetokencookie_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> Meta = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          GetAccessToken_MetaEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              GetAccessToken_MetaEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&meta_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "GetAccessToken.MetaEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "GetAccessToken.MetaEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetAccessToken)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetAccessToken)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetAccessToken::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetAccessToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string RefreshToken = 1;
  if (this->refreshtoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->refreshtoken().data(), static_cast<int>(this->refreshtoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GetAccessToken.RefreshToken");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->refreshtoken(), output);
  }

  // bool UseTokenCookie = 2;
  if (this->usetokencookie() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->usetokencookie(), output);
  }

  // map<string, string> Meta = 3;
  if (!this->meta().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "GetAccessToken.MetaEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "GetAccessToken.MetaEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->meta().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->meta().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<GetAccessToken_MetaEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(meta_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(3, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<GetAccessToken_MetaEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it) {
        entry.reset(meta_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(3, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GetAccessToken)
}

::google::protobuf::uint8* GetAccessToken::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetAccessToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string RefreshToken = 1;
  if (this->refreshtoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->refreshtoken().data(), static_cast<int>(this->refreshtoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GetAccessToken.RefreshToken");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->refreshtoken(), target);
  }

  // bool UseTokenCookie = 2;
  if (this->usetokencookie() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->usetokencookie(), target);
  }

  // map<string, string> Meta = 3;
  if (!this->meta().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "GetAccessToken.MetaEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "GetAccessToken.MetaEntry.value");
      }
    };

    if (false &&
        this->meta().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->meta().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<GetAccessToken_MetaEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(meta_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(3, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<GetAccessToken_MetaEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it) {
        entry.reset(meta_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(3, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetAccessToken)
  return target;
}

size_t GetAccessToken::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetAccessToken)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> Meta = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->meta_size());
  {
    ::std::unique_ptr<GetAccessToken_MetaEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->meta().begin();
        it != this->meta().end(); ++it) {
      entry.reset(meta_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string RefreshToken = 1;
  if (this->refreshtoken().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->refreshtoken());
  }

  // bool UseTokenCookie = 2;
  if (this->usetokencookie() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAccessToken::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetAccessToken)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAccessToken* source =
      ::google::protobuf::DynamicCastToGenerated<GetAccessToken>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetAccessToken)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetAccessToken)
    MergeFrom(*source);
  }
}

void GetAccessToken::MergeFrom(const GetAccessToken& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetAccessToken)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  meta_.MergeFrom(from.meta_);
  if (from.refreshtoken().size() > 0) {

    refreshtoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.refreshtoken_);
  }
  if (from.usetokencookie() != 0) {
    set_usetokencookie(from.usetokencookie());
  }
}

void GetAccessToken::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetAccessToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAccessToken::CopyFrom(const GetAccessToken& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetAccessToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAccessToken::IsInitialized() const {
  return true;
}

void GetAccessToken::Swap(GetAccessToken* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAccessToken::InternalSwap(GetAccessToken* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  meta_.Swap(&other->meta_);
  refreshtoken_.Swap(&other->refreshtoken_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(usetokencookie_, other->usetokencookie_);
}

::google::protobuf::Metadata GetAccessToken::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[kIndexInFileMessages];
}


// ===================================================================

GetAccessTokenResponse_MetaEntry_DoNotUse::GetAccessTokenResponse_MetaEntry_DoNotUse() {}
GetAccessTokenResponse_MetaEntry_DoNotUse::GetAccessTokenResponse_MetaEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void GetAccessTokenResponse_MetaEntry_DoNotUse::MergeFrom(const GetAccessTokenResponse_MetaEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata GetAccessTokenResponse_MetaEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[20];
}
void GetAccessTokenResponse_MetaEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetAccessTokenResponse_MetaEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      GetAccessTokenResponse_MetaEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "GetAccessTokenResponse.MetaEntry.key"));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.value().data(), static_cast<int>(parser.value().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "GetAccessTokenResponse.MetaEntry.value"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void GetAccessTokenResponse::InitAsDefaultInstance() {
  ::_GetAccessTokenResponse_default_instance_._instance.get_mutable()->responsestatus_ = const_cast< ::ResponseStatus*>(
      ::ResponseStatus::internal_default_instance());
}
class GetAccessTokenResponse::HasBitSetters {
 public:
  static const ::ResponseStatus& responsestatus(const GetAccessTokenResponse* msg);
};

const ::ResponseStatus&
GetAccessTokenResponse::HasBitSetters::responsestatus(const GetAccessTokenResponse* msg) {
  return *msg->responsestatus_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAccessTokenResponse::kAccessTokenFieldNumber;
const int GetAccessTokenResponse::kMetaFieldNumber;
const int GetAccessTokenResponse::kResponseStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAccessTokenResponse::GetAccessTokenResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetAccessTokenResponse)
}
GetAccessTokenResponse::GetAccessTokenResponse(const GetAccessTokenResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  meta_.MergeFrom(from.meta_);
  accesstoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.accesstoken().size() > 0) {
    accesstoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accesstoken_);
  }
  if (from.has_responsestatus()) {
    responsestatus_ = new ::ResponseStatus(*from.responsestatus_);
  } else {
    responsestatus_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:GetAccessTokenResponse)
}

void GetAccessTokenResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetAccessTokenResponse_services_2eproto.base);
  accesstoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  responsestatus_ = nullptr;
}

GetAccessTokenResponse::~GetAccessTokenResponse() {
  // @@protoc_insertion_point(destructor:GetAccessTokenResponse)
  SharedDtor();
}

void GetAccessTokenResponse::SharedDtor() {
  accesstoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete responsestatus_;
}

void GetAccessTokenResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAccessTokenResponse& GetAccessTokenResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetAccessTokenResponse_services_2eproto.base);
  return *internal_default_instance();
}


void GetAccessTokenResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:GetAccessTokenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  meta_.Clear();
  accesstoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && responsestatus_ != nullptr) {
    delete responsestatus_;
  }
  responsestatus_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetAccessTokenResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetAccessTokenResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string AccessToken = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("GetAccessTokenResponse.AccessToken");
        object = msg->mutable_accesstoken();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // map<string, string> Meta = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::GetAccessTokenResponse_MetaEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->meta_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // .ResponseStatus ResponseStatus = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::ResponseStatus::_InternalParse;
        object = msg->mutable_responsestatus();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetAccessTokenResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetAccessTokenResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string AccessToken = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accesstoken()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->accesstoken().data(), static_cast<int>(this->accesstoken().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "GetAccessTokenResponse.AccessToken"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> Meta = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          GetAccessTokenResponse_MetaEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              GetAccessTokenResponse_MetaEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&meta_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "GetAccessTokenResponse.MetaEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "GetAccessTokenResponse.MetaEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ResponseStatus ResponseStatus = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_responsestatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetAccessTokenResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetAccessTokenResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetAccessTokenResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetAccessTokenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string AccessToken = 1;
  if (this->accesstoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accesstoken().data(), static_cast<int>(this->accesstoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GetAccessTokenResponse.AccessToken");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->accesstoken(), output);
  }

  // map<string, string> Meta = 2;
  if (!this->meta().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "GetAccessTokenResponse.MetaEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "GetAccessTokenResponse.MetaEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->meta().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->meta().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<GetAccessTokenResponse_MetaEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(meta_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<GetAccessTokenResponse_MetaEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it) {
        entry.reset(meta_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // .ResponseStatus ResponseStatus = 3;
  if (this->has_responsestatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::responsestatus(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GetAccessTokenResponse)
}

::google::protobuf::uint8* GetAccessTokenResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetAccessTokenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string AccessToken = 1;
  if (this->accesstoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accesstoken().data(), static_cast<int>(this->accesstoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GetAccessTokenResponse.AccessToken");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->accesstoken(), target);
  }

  // map<string, string> Meta = 2;
  if (!this->meta().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "GetAccessTokenResponse.MetaEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "GetAccessTokenResponse.MetaEntry.value");
      }
    };

    if (false &&
        this->meta().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->meta().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<GetAccessTokenResponse_MetaEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(meta_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(2, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<GetAccessTokenResponse_MetaEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it) {
        entry.reset(meta_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(2, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // .ResponseStatus ResponseStatus = 3;
  if (this->has_responsestatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::responsestatus(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetAccessTokenResponse)
  return target;
}

size_t GetAccessTokenResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetAccessTokenResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> Meta = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->meta_size());
  {
    ::std::unique_ptr<GetAccessTokenResponse_MetaEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->meta().begin();
        it != this->meta().end(); ++it) {
      entry.reset(meta_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string AccessToken = 1;
  if (this->accesstoken().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->accesstoken());
  }

  // .ResponseStatus ResponseStatus = 3;
  if (this->has_responsestatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *responsestatus_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAccessTokenResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetAccessTokenResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAccessTokenResponse* source =
      ::google::protobuf::DynamicCastToGenerated<GetAccessTokenResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetAccessTokenResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetAccessTokenResponse)
    MergeFrom(*source);
  }
}

void GetAccessTokenResponse::MergeFrom(const GetAccessTokenResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetAccessTokenResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  meta_.MergeFrom(from.meta_);
  if (from.accesstoken().size() > 0) {

    accesstoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accesstoken_);
  }
  if (from.has_responsestatus()) {
    mutable_responsestatus()->::ResponseStatus::MergeFrom(from.responsestatus());
  }
}

void GetAccessTokenResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetAccessTokenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAccessTokenResponse::CopyFrom(const GetAccessTokenResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetAccessTokenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAccessTokenResponse::IsInitialized() const {
  return true;
}

void GetAccessTokenResponse::Swap(GetAccessTokenResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAccessTokenResponse::InternalSwap(GetAccessTokenResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  meta_.Swap(&other->meta_);
  accesstoken_.Swap(&other->accesstoken_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(responsestatus_, other->responsestatus_);
}

::google::protobuf::Metadata GetAccessTokenResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetTodo::InitAsDefaultInstance() {
}
class GetTodo::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetTodo::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetTodo::GetTodo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetTodo)
}
GetTodo::GetTodo(const GetTodo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:GetTodo)
}

void GetTodo::SharedCtor() {
  id_ = PROTOBUF_LONGLONG(0);
}

GetTodo::~GetTodo() {
  // @@protoc_insertion_point(destructor:GetTodo)
  SharedDtor();
}

void GetTodo::SharedDtor() {
}

void GetTodo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetTodo& GetTodo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetTodo_services_2eproto.base);
  return *internal_default_instance();
}


void GetTodo::Clear() {
// @@protoc_insertion_point(message_clear_start:GetTodo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetTodo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetTodo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 Id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetTodo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetTodo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetTodo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetTodo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetTodo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetTodo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GetTodo)
}

::google::protobuf::uint8* GetTodo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetTodo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetTodo)
  return target;
}

size_t GetTodo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetTodo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTodo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetTodo)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTodo* source =
      ::google::protobuf::DynamicCastToGenerated<GetTodo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetTodo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetTodo)
    MergeFrom(*source);
  }
}

void GetTodo::MergeFrom(const GetTodo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetTodo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
}

void GetTodo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetTodo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTodo::CopyFrom(const GetTodo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetTodo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTodo::IsInitialized() const {
  return true;
}

void GetTodo::Swap(GetTodo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetTodo::InternalSwap(GetTodo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::google::protobuf::Metadata GetTodo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetTodoResponse::InitAsDefaultInstance() {
  ::_GetTodoResponse_default_instance_._instance.get_mutable()->result_ = const_cast< ::Todo*>(
      ::Todo::internal_default_instance());
  ::_GetTodoResponse_default_instance_._instance.get_mutable()->responsestatus_ = const_cast< ::ResponseStatus*>(
      ::ResponseStatus::internal_default_instance());
}
class GetTodoResponse::HasBitSetters {
 public:
  static const ::Todo& result(const GetTodoResponse* msg);
  static const ::ResponseStatus& responsestatus(const GetTodoResponse* msg);
};

const ::Todo&
GetTodoResponse::HasBitSetters::result(const GetTodoResponse* msg) {
  return *msg->result_;
}
const ::ResponseStatus&
GetTodoResponse::HasBitSetters::responsestatus(const GetTodoResponse* msg) {
  return *msg->responsestatus_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetTodoResponse::kResultFieldNumber;
const int GetTodoResponse::kResponseStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetTodoResponse::GetTodoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetTodoResponse)
}
GetTodoResponse::GetTodoResponse(const GetTodoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_result()) {
    result_ = new ::Todo(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from.has_responsestatus()) {
    responsestatus_ = new ::ResponseStatus(*from.responsestatus_);
  } else {
    responsestatus_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:GetTodoResponse)
}

void GetTodoResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetTodoResponse_services_2eproto.base);
  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&responsestatus_) -
      reinterpret_cast<char*>(&result_)) + sizeof(responsestatus_));
}

GetTodoResponse::~GetTodoResponse() {
  // @@protoc_insertion_point(destructor:GetTodoResponse)
  SharedDtor();
}

void GetTodoResponse::SharedDtor() {
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete responsestatus_;
}

void GetTodoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetTodoResponse& GetTodoResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetTodoResponse_services_2eproto.base);
  return *internal_default_instance();
}


void GetTodoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:GetTodoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && responsestatus_ != nullptr) {
    delete responsestatus_;
  }
  responsestatus_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetTodoResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetTodoResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .Todo Result = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::Todo::_InternalParse;
        object = msg->mutable_result();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .ResponseStatus ResponseStatus = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::ResponseStatus::_InternalParse;
        object = msg->mutable_responsestatus();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetTodoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetTodoResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Todo Result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ResponseStatus ResponseStatus = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_responsestatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetTodoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetTodoResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetTodoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetTodoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Todo Result = 1;
  if (this->has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::result(this), output);
  }

  // .ResponseStatus ResponseStatus = 2;
  if (this->has_responsestatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::responsestatus(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GetTodoResponse)
}

::google::protobuf::uint8* GetTodoResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetTodoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Todo Result = 1;
  if (this->has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::result(this), target);
  }

  // .ResponseStatus ResponseStatus = 2;
  if (this->has_responsestatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::responsestatus(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetTodoResponse)
  return target;
}

size_t GetTodoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetTodoResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Todo Result = 1;
  if (this->has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .ResponseStatus ResponseStatus = 2;
  if (this->has_responsestatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *responsestatus_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTodoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetTodoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTodoResponse* source =
      ::google::protobuf::DynamicCastToGenerated<GetTodoResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetTodoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetTodoResponse)
    MergeFrom(*source);
  }
}

void GetTodoResponse::MergeFrom(const GetTodoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetTodoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    mutable_result()->::Todo::MergeFrom(from.result());
  }
  if (from.has_responsestatus()) {
    mutable_responsestatus()->::ResponseStatus::MergeFrom(from.responsestatus());
  }
}

void GetTodoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetTodoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTodoResponse::CopyFrom(const GetTodoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetTodoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTodoResponse::IsInitialized() const {
  return true;
}

void GetTodoResponse::Swap(GetTodoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetTodoResponse::InternalSwap(GetTodoResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(result_, other->result_);
  swap(responsestatus_, other->responsestatus_);
}

::google::protobuf::Metadata GetTodoResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetTodos::InitAsDefaultInstance() {
}
class GetTodos::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetTodos::GetTodos()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetTodos)
}
GetTodos::GetTodos(const GetTodos& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:GetTodos)
}

void GetTodos::SharedCtor() {
}

GetTodos::~GetTodos() {
  // @@protoc_insertion_point(destructor:GetTodos)
  SharedDtor();
}

void GetTodos::SharedDtor() {
}

void GetTodos::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetTodos& GetTodos::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetTodos_services_2eproto.base);
  return *internal_default_instance();
}


void GetTodos::Clear() {
// @@protoc_insertion_point(message_clear_start:GetTodos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetTodos::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetTodos*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetTodos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetTodos)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:GetTodos)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetTodos)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetTodos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetTodos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GetTodos)
}

::google::protobuf::uint8* GetTodos::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetTodos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetTodos)
  return target;
}

size_t GetTodos::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetTodos)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTodos::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetTodos)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTodos* source =
      ::google::protobuf::DynamicCastToGenerated<GetTodos>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetTodos)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetTodos)
    MergeFrom(*source);
  }
}

void GetTodos::MergeFrom(const GetTodos& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetTodos)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetTodos::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetTodos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTodos::CopyFrom(const GetTodos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetTodos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTodos::IsInitialized() const {
  return true;
}

void GetTodos::Swap(GetTodos* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetTodos::InternalSwap(GetTodos* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetTodos::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetTodosResponse::InitAsDefaultInstance() {
  ::_GetTodosResponse_default_instance_._instance.get_mutable()->responsestatus_ = const_cast< ::ResponseStatus*>(
      ::ResponseStatus::internal_default_instance());
}
class GetTodosResponse::HasBitSetters {
 public:
  static const ::ResponseStatus& responsestatus(const GetTodosResponse* msg);
};

const ::ResponseStatus&
GetTodosResponse::HasBitSetters::responsestatus(const GetTodosResponse* msg) {
  return *msg->responsestatus_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetTodosResponse::kResultsFieldNumber;
const int GetTodosResponse::kResponseStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetTodosResponse::GetTodosResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetTodosResponse)
}
GetTodosResponse::GetTodosResponse(const GetTodosResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      results_(from.results_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_responsestatus()) {
    responsestatus_ = new ::ResponseStatus(*from.responsestatus_);
  } else {
    responsestatus_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:GetTodosResponse)
}

void GetTodosResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetTodosResponse_services_2eproto.base);
  responsestatus_ = nullptr;
}

GetTodosResponse::~GetTodosResponse() {
  // @@protoc_insertion_point(destructor:GetTodosResponse)
  SharedDtor();
}

void GetTodosResponse::SharedDtor() {
  if (this != internal_default_instance()) delete responsestatus_;
}

void GetTodosResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetTodosResponse& GetTodosResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetTodosResponse_services_2eproto.base);
  return *internal_default_instance();
}


void GetTodosResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:GetTodosResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  results_.Clear();
  if (GetArenaNoVirtual() == nullptr && responsestatus_ != nullptr) {
    delete responsestatus_;
  }
  responsestatus_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetTodosResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetTodosResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .Todo Results = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::Todo::_InternalParse;
          object = msg->add_results();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // .ResponseStatus ResponseStatus = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::ResponseStatus::_InternalParse;
        object = msg->mutable_responsestatus();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetTodosResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetTodosResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Todo Results = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_results()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ResponseStatus ResponseStatus = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_responsestatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetTodosResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetTodosResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetTodosResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetTodosResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Todo Results = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->results(static_cast<int>(i)),
      output);
  }

  // .ResponseStatus ResponseStatus = 2;
  if (this->has_responsestatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::responsestatus(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GetTodosResponse)
}

::google::protobuf::uint8* GetTodosResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetTodosResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Todo Results = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->results(static_cast<int>(i)), target);
  }

  // .ResponseStatus ResponseStatus = 2;
  if (this->has_responsestatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::responsestatus(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetTodosResponse)
  return target;
}

size_t GetTodosResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetTodosResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Todo Results = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->results_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->results(static_cast<int>(i)));
    }
  }

  // .ResponseStatus ResponseStatus = 2;
  if (this->has_responsestatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *responsestatus_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTodosResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetTodosResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTodosResponse* source =
      ::google::protobuf::DynamicCastToGenerated<GetTodosResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetTodosResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetTodosResponse)
    MergeFrom(*source);
  }
}

void GetTodosResponse::MergeFrom(const GetTodosResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetTodosResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  results_.MergeFrom(from.results_);
  if (from.has_responsestatus()) {
    mutable_responsestatus()->::ResponseStatus::MergeFrom(from.responsestatus());
  }
}

void GetTodosResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetTodosResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTodosResponse::CopyFrom(const GetTodosResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetTodosResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTodosResponse::IsInitialized() const {
  return true;
}

void GetTodosResponse::Swap(GetTodosResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetTodosResponse::InternalSwap(GetTodosResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&results_)->InternalSwap(CastToBase(&other->results_));
  swap(responsestatus_, other->responsestatus_);
}

::google::protobuf::Metadata GetTodosResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Hello::InitAsDefaultInstance() {
}
class Hello::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Hello::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Hello::Hello()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Hello)
}
Hello::Hello(const Hello& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:Hello)
}

void Hello::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Hello_services_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Hello::~Hello() {
  // @@protoc_insertion_point(destructor:Hello)
  SharedDtor();
}

void Hello::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Hello::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Hello& Hello::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Hello_services_2eproto.base);
  return *internal_default_instance();
}


void Hello::Clear() {
// @@protoc_insertion_point(message_clear_start:Hello)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Hello::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Hello*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string Name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Hello.Name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Hello::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Hello)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Hello.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Hello)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Hello)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Hello::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Hello)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Hello.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Hello)
}

::google::protobuf::uint8* Hello::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Hello)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Hello.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Hello)
  return target;
}

size_t Hello::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Hello)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Hello::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Hello)
  GOOGLE_DCHECK_NE(&from, this);
  const Hello* source =
      ::google::protobuf::DynamicCastToGenerated<Hello>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Hello)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Hello)
    MergeFrom(*source);
  }
}

void Hello::MergeFrom(const Hello& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Hello)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void Hello::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Hello)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Hello::CopyFrom(const Hello& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Hello)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Hello::IsInitialized() const {
  return true;
}

void Hello::Swap(Hello* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Hello::InternalSwap(Hello* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata Hello::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[kIndexInFileMessages];
}


// ===================================================================

void HelloResponse::InitAsDefaultInstance() {
  ::_HelloResponse_default_instance_._instance.get_mutable()->responsestatus_ = const_cast< ::ResponseStatus*>(
      ::ResponseStatus::internal_default_instance());
}
class HelloResponse::HasBitSetters {
 public:
  static const ::ResponseStatus& responsestatus(const HelloResponse* msg);
};

const ::ResponseStatus&
HelloResponse::HasBitSetters::responsestatus(const HelloResponse* msg) {
  return *msg->responsestatus_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HelloResponse::kResultFieldNumber;
const int HelloResponse::kResponseStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HelloResponse::HelloResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HelloResponse)
}
HelloResponse::HelloResponse(const HelloResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.result().size() > 0) {
    result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
  }
  if (from.has_responsestatus()) {
    responsestatus_ = new ::ResponseStatus(*from.responsestatus_);
  } else {
    responsestatus_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:HelloResponse)
}

void HelloResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_HelloResponse_services_2eproto.base);
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  responsestatus_ = nullptr;
}

HelloResponse::~HelloResponse() {
  // @@protoc_insertion_point(destructor:HelloResponse)
  SharedDtor();
}

void HelloResponse::SharedDtor() {
  result_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete responsestatus_;
}

void HelloResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HelloResponse& HelloResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_HelloResponse_services_2eproto.base);
  return *internal_default_instance();
}


void HelloResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:HelloResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && responsestatus_ != nullptr) {
    delete responsestatus_;
  }
  responsestatus_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* HelloResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<HelloResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string Result = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("HelloResponse.Result");
        object = msg->mutable_result();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .ResponseStatus ResponseStatus = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::ResponseStatus::_InternalParse;
        object = msg->mutable_responsestatus();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool HelloResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HelloResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_result()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->result().data(), static_cast<int>(this->result().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HelloResponse.Result"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ResponseStatus ResponseStatus = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_responsestatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HelloResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HelloResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void HelloResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HelloResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Result = 1;
  if (this->result().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->result().data(), static_cast<int>(this->result().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HelloResponse.Result");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->result(), output);
  }

  // .ResponseStatus ResponseStatus = 2;
  if (this->has_responsestatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::responsestatus(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:HelloResponse)
}

::google::protobuf::uint8* HelloResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:HelloResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Result = 1;
  if (this->result().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->result().data(), static_cast<int>(this->result().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HelloResponse.Result");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->result(), target);
  }

  // .ResponseStatus ResponseStatus = 2;
  if (this->has_responsestatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::responsestatus(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HelloResponse)
  return target;
}

size_t HelloResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HelloResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->result());
  }

  // .ResponseStatus ResponseStatus = 2;
  if (this->has_responsestatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *responsestatus_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HelloResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HelloResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HelloResponse* source =
      ::google::protobuf::DynamicCastToGenerated<HelloResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HelloResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HelloResponse)
    MergeFrom(*source);
  }
}

void HelloResponse::MergeFrom(const HelloResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HelloResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {

    result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
  }
  if (from.has_responsestatus()) {
    mutable_responsestatus()->::ResponseStatus::MergeFrom(from.responsestatus());
  }
}

void HelloResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HelloResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HelloResponse::CopyFrom(const HelloResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HelloResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HelloResponse::IsInitialized() const {
  return true;
}

void HelloResponse::Swap(HelloResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HelloResponse::InternalSwap(HelloResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  result_.Swap(&other->result_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(responsestatus_, other->responsestatus_);
}

::google::protobuf::Metadata HelloResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[kIndexInFileMessages];
}


// ===================================================================

void HelloSecure::InitAsDefaultInstance() {
}
class HelloSecure::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HelloSecure::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HelloSecure::HelloSecure()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HelloSecure)
}
HelloSecure::HelloSecure(const HelloSecure& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:HelloSecure)
}

void HelloSecure::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_HelloSecure_services_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

HelloSecure::~HelloSecure() {
  // @@protoc_insertion_point(destructor:HelloSecure)
  SharedDtor();
}

void HelloSecure::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HelloSecure::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HelloSecure& HelloSecure::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_HelloSecure_services_2eproto.base);
  return *internal_default_instance();
}


void HelloSecure::Clear() {
// @@protoc_insertion_point(message_clear_start:HelloSecure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* HelloSecure::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<HelloSecure*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string Name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("HelloSecure.Name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool HelloSecure::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HelloSecure)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HelloSecure.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HelloSecure)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HelloSecure)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void HelloSecure::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HelloSecure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HelloSecure.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:HelloSecure)
}

::google::protobuf::uint8* HelloSecure::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:HelloSecure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HelloSecure.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HelloSecure)
  return target;
}

size_t HelloSecure::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HelloSecure)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HelloSecure::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HelloSecure)
  GOOGLE_DCHECK_NE(&from, this);
  const HelloSecure* source =
      ::google::protobuf::DynamicCastToGenerated<HelloSecure>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HelloSecure)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HelloSecure)
    MergeFrom(*source);
  }
}

void HelloSecure::MergeFrom(const HelloSecure& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HelloSecure)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void HelloSecure::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HelloSecure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HelloSecure::CopyFrom(const HelloSecure& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HelloSecure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HelloSecure::IsInitialized() const {
  return true;
}

void HelloSecure::Swap(HelloSecure* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HelloSecure::InternalSwap(HelloSecure* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata HelloSecure::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[kIndexInFileMessages];
}


// ===================================================================

Register_MetaEntry_DoNotUse::Register_MetaEntry_DoNotUse() {}
Register_MetaEntry_DoNotUse::Register_MetaEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void Register_MetaEntry_DoNotUse::MergeFrom(const Register_MetaEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Register_MetaEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[29];
}
void Register_MetaEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Register_MetaEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      Register_MetaEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "Register.MetaEntry.key"));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.value().data(), static_cast<int>(parser.value().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "Register.MetaEntry.value"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void Register::InitAsDefaultInstance() {
}
class Register::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Register::kUserNameFieldNumber;
const int Register::kFirstNameFieldNumber;
const int Register::kLastNameFieldNumber;
const int Register::kDisplayNameFieldNumber;
const int Register::kEmailFieldNumber;
const int Register::kPasswordFieldNumber;
const int Register::kConfirmPasswordFieldNumber;
const int Register::kAutoLoginFieldNumber;
const int Register::kContinueFieldNumber;
const int Register::kErrorViewFieldNumber;
const int Register::kMetaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Register::Register()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Register)
}
Register::Register(const Register& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  meta_.MergeFrom(from.meta_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  firstname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.firstname().size() > 0) {
    firstname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.firstname_);
  }
  lastname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.lastname().size() > 0) {
    lastname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lastname_);
  }
  displayname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.displayname().size() > 0) {
    displayname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.displayname_);
  }
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.email().size() > 0) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  confirmpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.confirmpassword().size() > 0) {
    confirmpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.confirmpassword_);
  }
  continue__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.continue_().size() > 0) {
    continue__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.continue__);
  }
  errorview_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errorview().size() > 0) {
    errorview_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errorview_);
  }
  autologin_ = from.autologin_;
  // @@protoc_insertion_point(copy_constructor:Register)
}

void Register::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Register_services_2eproto.base);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  firstname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lastname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  displayname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  confirmpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  continue__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorview_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  autologin_ = false;
}

Register::~Register() {
  // @@protoc_insertion_point(destructor:Register)
  SharedDtor();
}

void Register::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  firstname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lastname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  displayname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  confirmpassword_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  continue__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorview_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Register::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Register& Register::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Register_services_2eproto.base);
  return *internal_default_instance();
}


void Register::Clear() {
// @@protoc_insertion_point(message_clear_start:Register)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  meta_.Clear();
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  firstname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lastname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  displayname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  confirmpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  continue__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorview_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  autologin_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Register::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Register*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string UserName = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Register.UserName");
        object = msg->mutable_username();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string FirstName = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Register.FirstName");
        object = msg->mutable_firstname();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string LastName = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Register.LastName");
        object = msg->mutable_lastname();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string DisplayName = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Register.DisplayName");
        object = msg->mutable_displayname();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string Email = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Register.Email");
        object = msg->mutable_email();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string Password = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Register.Password");
        object = msg->mutable_password();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string ConfirmPassword = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Register.ConfirmPassword");
        object = msg->mutable_confirmpassword();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool AutoLogin = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_autologin(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string Continue = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Register.Continue");
        object = msg->mutable_continue_();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string ErrorView = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Register.ErrorView");
        object = msg->mutable_errorview();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // map<string, string> Meta = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::Register_MetaEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->meta_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 90 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Register::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Register)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string UserName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Register.UserName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string FirstName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_firstname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->firstname().data(), static_cast<int>(this->firstname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Register.FirstName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string LastName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lastname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->lastname().data(), static_cast<int>(this->lastname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Register.LastName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string DisplayName = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_displayname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->displayname().data(), static_cast<int>(this->displayname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Register.DisplayName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Email = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->email().data(), static_cast<int>(this->email().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Register.Email"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Password = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Register.Password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ConfirmPassword = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_confirmpassword()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->confirmpassword().data(), static_cast<int>(this->confirmpassword().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Register.ConfirmPassword"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool AutoLogin = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &autologin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Continue = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_continue_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->continue_().data(), static_cast<int>(this->continue_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Register.Continue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ErrorView = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errorview()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errorview().data(), static_cast<int>(this->errorview().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Register.ErrorView"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> Meta = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          Register_MetaEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Register_MetaEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&meta_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Register.MetaEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Register.MetaEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Register)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Register)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Register::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Register)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string UserName = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Register.UserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // string FirstName = 2;
  if (this->firstname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->firstname().data(), static_cast<int>(this->firstname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Register.FirstName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->firstname(), output);
  }

  // string LastName = 3;
  if (this->lastname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lastname().data(), static_cast<int>(this->lastname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Register.LastName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->lastname(), output);
  }

  // string DisplayName = 4;
  if (this->displayname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->displayname().data(), static_cast<int>(this->displayname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Register.DisplayName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->displayname(), output);
  }

  // string Email = 5;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Register.Email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->email(), output);
  }

  // string Password = 6;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Register.Password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->password(), output);
  }

  // string ConfirmPassword = 7;
  if (this->confirmpassword().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->confirmpassword().data(), static_cast<int>(this->confirmpassword().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Register.ConfirmPassword");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->confirmpassword(), output);
  }

  // bool AutoLogin = 8;
  if (this->autologin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->autologin(), output);
  }

  // string Continue = 9;
  if (this->continue_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->continue_().data(), static_cast<int>(this->continue_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Register.Continue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->continue_(), output);
  }

  // string ErrorView = 10;
  if (this->errorview().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errorview().data(), static_cast<int>(this->errorview().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Register.ErrorView");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->errorview(), output);
  }

  // map<string, string> Meta = 11;
  if (!this->meta().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "Register.MetaEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "Register.MetaEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->meta().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->meta().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Register_MetaEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(meta_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(11, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<Register_MetaEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it) {
        entry.reset(meta_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(11, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Register)
}

::google::protobuf::uint8* Register::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Register)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string UserName = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Register.UserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // string FirstName = 2;
  if (this->firstname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->firstname().data(), static_cast<int>(this->firstname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Register.FirstName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->firstname(), target);
  }

  // string LastName = 3;
  if (this->lastname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lastname().data(), static_cast<int>(this->lastname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Register.LastName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->lastname(), target);
  }

  // string DisplayName = 4;
  if (this->displayname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->displayname().data(), static_cast<int>(this->displayname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Register.DisplayName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->displayname(), target);
  }

  // string Email = 5;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Register.Email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->email(), target);
  }

  // string Password = 6;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Register.Password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->password(), target);
  }

  // string ConfirmPassword = 7;
  if (this->confirmpassword().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->confirmpassword().data(), static_cast<int>(this->confirmpassword().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Register.ConfirmPassword");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->confirmpassword(), target);
  }

  // bool AutoLogin = 8;
  if (this->autologin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->autologin(), target);
  }

  // string Continue = 9;
  if (this->continue_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->continue_().data(), static_cast<int>(this->continue_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Register.Continue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->continue_(), target);
  }

  // string ErrorView = 10;
  if (this->errorview().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errorview().data(), static_cast<int>(this->errorview().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Register.ErrorView");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->errorview(), target);
  }

  // map<string, string> Meta = 11;
  if (!this->meta().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "Register.MetaEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "Register.MetaEntry.value");
      }
    };

    if (false &&
        this->meta().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->meta().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Register_MetaEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(meta_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(11, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<Register_MetaEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it) {
        entry.reset(meta_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(11, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Register)
  return target;
}

size_t Register::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Register)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> Meta = 11;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->meta_size());
  {
    ::std::unique_ptr<Register_MetaEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->meta().begin();
        it != this->meta().end(); ++it) {
      entry.reset(meta_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string UserName = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string FirstName = 2;
  if (this->firstname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->firstname());
  }

  // string LastName = 3;
  if (this->lastname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lastname());
  }

  // string DisplayName = 4;
  if (this->displayname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->displayname());
  }

  // string Email = 5;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  // string Password = 6;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // string ConfirmPassword = 7;
  if (this->confirmpassword().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->confirmpassword());
  }

  // string Continue = 9;
  if (this->continue_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->continue_());
  }

  // string ErrorView = 10;
  if (this->errorview().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errorview());
  }

  // bool AutoLogin = 8;
  if (this->autologin() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Register::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Register)
  GOOGLE_DCHECK_NE(&from, this);
  const Register* source =
      ::google::protobuf::DynamicCastToGenerated<Register>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Register)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Register)
    MergeFrom(*source);
  }
}

void Register::MergeFrom(const Register& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Register)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  meta_.MergeFrom(from.meta_);
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.firstname().size() > 0) {

    firstname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.firstname_);
  }
  if (from.lastname().size() > 0) {

    lastname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lastname_);
  }
  if (from.displayname().size() > 0) {

    displayname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.displayname_);
  }
  if (from.email().size() > 0) {

    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.confirmpassword().size() > 0) {

    confirmpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.confirmpassword_);
  }
  if (from.continue_().size() > 0) {

    continue__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.continue__);
  }
  if (from.errorview().size() > 0) {

    errorview_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errorview_);
  }
  if (from.autologin() != 0) {
    set_autologin(from.autologin());
  }
}

void Register::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Register)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Register::CopyFrom(const Register& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Register)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Register::IsInitialized() const {
  return true;
}

void Register::Swap(Register* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Register::InternalSwap(Register* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  meta_.Swap(&other->meta_);
  username_.Swap(&other->username_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  firstname_.Swap(&other->firstname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  lastname_.Swap(&other->lastname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  displayname_.Swap(&other->displayname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  email_.Swap(&other->email_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  confirmpassword_.Swap(&other->confirmpassword_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  continue__.Swap(&other->continue__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  errorview_.Swap(&other->errorview_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(autologin_, other->autologin_);
}

::google::protobuf::Metadata Register::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[kIndexInFileMessages];
}


// ===================================================================

RegisterResponse_MetaEntry_DoNotUse::RegisterResponse_MetaEntry_DoNotUse() {}
RegisterResponse_MetaEntry_DoNotUse::RegisterResponse_MetaEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void RegisterResponse_MetaEntry_DoNotUse::MergeFrom(const RegisterResponse_MetaEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata RegisterResponse_MetaEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[31];
}
void RegisterResponse_MetaEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RegisterResponse_MetaEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      RegisterResponse_MetaEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "RegisterResponse.MetaEntry.key"));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.value().data(), static_cast<int>(parser.value().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "RegisterResponse.MetaEntry.value"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void RegisterResponse::InitAsDefaultInstance() {
  ::_RegisterResponse_default_instance_._instance.get_mutable()->responsestatus_ = const_cast< ::ResponseStatus*>(
      ::ResponseStatus::internal_default_instance());
}
class RegisterResponse::HasBitSetters {
 public:
  static const ::ResponseStatus& responsestatus(const RegisterResponse* msg);
};

const ::ResponseStatus&
RegisterResponse::HasBitSetters::responsestatus(const RegisterResponse* msg) {
  return *msg->responsestatus_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterResponse::kUserIdFieldNumber;
const int RegisterResponse::kSessionIdFieldNumber;
const int RegisterResponse::kUserNameFieldNumber;
const int RegisterResponse::kReferrerUrlFieldNumber;
const int RegisterResponse::kBearerTokenFieldNumber;
const int RegisterResponse::kRefreshTokenFieldNumber;
const int RegisterResponse::kResponseStatusFieldNumber;
const int RegisterResponse::kMetaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterResponse::RegisterResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RegisterResponse)
}
RegisterResponse::RegisterResponse(const RegisterResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  meta_.MergeFrom(from.meta_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userid().size() > 0) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sessionid().size() > 0) {
    sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
  }
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  referrerurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.referrerurl().size() > 0) {
    referrerurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.referrerurl_);
  }
  bearertoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bearertoken().size() > 0) {
    bearertoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bearertoken_);
  }
  refreshtoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.refreshtoken().size() > 0) {
    refreshtoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.refreshtoken_);
  }
  if (from.has_responsestatus()) {
    responsestatus_ = new ::ResponseStatus(*from.responsestatus_);
  } else {
    responsestatus_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:RegisterResponse)
}

void RegisterResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RegisterResponse_services_2eproto.base);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  referrerurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bearertoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  refreshtoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  responsestatus_ = nullptr;
}

RegisterResponse::~RegisterResponse() {
  // @@protoc_insertion_point(destructor:RegisterResponse)
  SharedDtor();
}

void RegisterResponse::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  referrerurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bearertoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  refreshtoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete responsestatus_;
}

void RegisterResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RegisterResponse& RegisterResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RegisterResponse_services_2eproto.base);
  return *internal_default_instance();
}


void RegisterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:RegisterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  meta_.Clear();
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  referrerurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bearertoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  refreshtoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && responsestatus_ != nullptr) {
    delete responsestatus_;
  }
  responsestatus_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RegisterResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RegisterResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string UserId = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("RegisterResponse.UserId");
        object = msg->mutable_userid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string SessionId = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("RegisterResponse.SessionId");
        object = msg->mutable_sessionid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string UserName = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("RegisterResponse.UserName");
        object = msg->mutable_username();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string ReferrerUrl = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("RegisterResponse.ReferrerUrl");
        object = msg->mutable_referrerurl();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string BearerToken = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("RegisterResponse.BearerToken");
        object = msg->mutable_bearertoken();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string RefreshToken = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("RegisterResponse.RefreshToken");
        object = msg->mutable_refreshtoken();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .ResponseStatus ResponseStatus = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::ResponseStatus::_InternalParse;
        object = msg->mutable_responsestatus();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // map<string, string> Meta = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::RegisterResponse_MetaEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->meta_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 66 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RegisterResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RegisterResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string UserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), static_cast<int>(this->userid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RegisterResponse.UserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string SessionId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sessionid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sessionid().data(), static_cast<int>(this->sessionid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RegisterResponse.SessionId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string UserName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RegisterResponse.UserName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ReferrerUrl = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_referrerurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->referrerurl().data(), static_cast<int>(this->referrerurl().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RegisterResponse.ReferrerUrl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string BearerToken = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bearertoken()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bearertoken().data(), static_cast<int>(this->bearertoken().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RegisterResponse.BearerToken"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string RefreshToken = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_refreshtoken()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->refreshtoken().data(), static_cast<int>(this->refreshtoken().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RegisterResponse.RefreshToken"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ResponseStatus ResponseStatus = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_responsestatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> Meta = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          RegisterResponse_MetaEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              RegisterResponse_MetaEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&meta_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RegisterResponse.MetaEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RegisterResponse.MetaEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RegisterResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RegisterResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RegisterResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RegisterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string UserId = 1;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RegisterResponse.UserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->userid(), output);
  }

  // string SessionId = 2;
  if (this->sessionid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sessionid().data(), static_cast<int>(this->sessionid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RegisterResponse.SessionId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sessionid(), output);
  }

  // string UserName = 3;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RegisterResponse.UserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->username(), output);
  }

  // string ReferrerUrl = 4;
  if (this->referrerurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->referrerurl().data(), static_cast<int>(this->referrerurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RegisterResponse.ReferrerUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->referrerurl(), output);
  }

  // string BearerToken = 5;
  if (this->bearertoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bearertoken().data(), static_cast<int>(this->bearertoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RegisterResponse.BearerToken");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->bearertoken(), output);
  }

  // string RefreshToken = 6;
  if (this->refreshtoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->refreshtoken().data(), static_cast<int>(this->refreshtoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RegisterResponse.RefreshToken");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->refreshtoken(), output);
  }

  // .ResponseStatus ResponseStatus = 7;
  if (this->has_responsestatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, HasBitSetters::responsestatus(this), output);
  }

  // map<string, string> Meta = 8;
  if (!this->meta().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "RegisterResponse.MetaEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "RegisterResponse.MetaEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->meta().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->meta().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<RegisterResponse_MetaEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(meta_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(8, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<RegisterResponse_MetaEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it) {
        entry.reset(meta_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(8, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RegisterResponse)
}

::google::protobuf::uint8* RegisterResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RegisterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string UserId = 1;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RegisterResponse.UserId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->userid(), target);
  }

  // string SessionId = 2;
  if (this->sessionid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sessionid().data(), static_cast<int>(this->sessionid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RegisterResponse.SessionId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sessionid(), target);
  }

  // string UserName = 3;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RegisterResponse.UserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->username(), target);
  }

  // string ReferrerUrl = 4;
  if (this->referrerurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->referrerurl().data(), static_cast<int>(this->referrerurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RegisterResponse.ReferrerUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->referrerurl(), target);
  }

  // string BearerToken = 5;
  if (this->bearertoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bearertoken().data(), static_cast<int>(this->bearertoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RegisterResponse.BearerToken");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->bearertoken(), target);
  }

  // string RefreshToken = 6;
  if (this->refreshtoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->refreshtoken().data(), static_cast<int>(this->refreshtoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RegisterResponse.RefreshToken");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->refreshtoken(), target);
  }

  // .ResponseStatus ResponseStatus = 7;
  if (this->has_responsestatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, HasBitSetters::responsestatus(this), target);
  }

  // map<string, string> Meta = 8;
  if (!this->meta().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "RegisterResponse.MetaEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "RegisterResponse.MetaEntry.value");
      }
    };

    if (false &&
        this->meta().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->meta().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<RegisterResponse_MetaEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(meta_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(8, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<RegisterResponse_MetaEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it) {
        entry.reset(meta_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(8, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RegisterResponse)
  return target;
}

size_t RegisterResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RegisterResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> Meta = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->meta_size());
  {
    ::std::unique_ptr<RegisterResponse_MetaEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->meta().begin();
        it != this->meta().end(); ++it) {
      entry.reset(meta_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string UserId = 1;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // string SessionId = 2;
  if (this->sessionid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sessionid());
  }

  // string UserName = 3;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string ReferrerUrl = 4;
  if (this->referrerurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->referrerurl());
  }

  // string BearerToken = 5;
  if (this->bearertoken().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bearertoken());
  }

  // string RefreshToken = 6;
  if (this->refreshtoken().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->refreshtoken());
  }

  // .ResponseStatus ResponseStatus = 7;
  if (this->has_responsestatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *responsestatus_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RegisterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterResponse* source =
      ::google::protobuf::DynamicCastToGenerated<RegisterResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RegisterResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RegisterResponse)
    MergeFrom(*source);
  }
}

void RegisterResponse::MergeFrom(const RegisterResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RegisterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  meta_.MergeFrom(from.meta_);
  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.sessionid().size() > 0) {

    sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
  }
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.referrerurl().size() > 0) {

    referrerurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.referrerurl_);
  }
  if (from.bearertoken().size() > 0) {

    bearertoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bearertoken_);
  }
  if (from.refreshtoken().size() > 0) {

    refreshtoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.refreshtoken_);
  }
  if (from.has_responsestatus()) {
    mutable_responsestatus()->::ResponseStatus::MergeFrom(from.responsestatus());
  }
}

void RegisterResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RegisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterResponse::CopyFrom(const RegisterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RegisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterResponse::IsInitialized() const {
  return true;
}

void RegisterResponse::Swap(RegisterResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegisterResponse::InternalSwap(RegisterResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  meta_.Swap(&other->meta_);
  userid_.Swap(&other->userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sessionid_.Swap(&other->sessionid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  username_.Swap(&other->username_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  referrerurl_.Swap(&other->referrerurl_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bearertoken_.Swap(&other->bearertoken_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  refreshtoken_.Swap(&other->refreshtoken_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(responsestatus_, other->responsestatus_);
}

::google::protobuf::Metadata RegisterResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ResetTodos::InitAsDefaultInstance() {
}
class ResetTodos::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResetTodos::ResetTodos()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ResetTodos)
}
ResetTodos::ResetTodos(const ResetTodos& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ResetTodos)
}

void ResetTodos::SharedCtor() {
}

ResetTodos::~ResetTodos() {
  // @@protoc_insertion_point(destructor:ResetTodos)
  SharedDtor();
}

void ResetTodos::SharedDtor() {
}

void ResetTodos::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResetTodos& ResetTodos::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ResetTodos_services_2eproto.base);
  return *internal_default_instance();
}


void ResetTodos::Clear() {
// @@protoc_insertion_point(message_clear_start:ResetTodos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ResetTodos::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ResetTodos*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ResetTodos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ResetTodos)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ResetTodos)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ResetTodos)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ResetTodos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ResetTodos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ResetTodos)
}

::google::protobuf::uint8* ResetTodos::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ResetTodos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ResetTodos)
  return target;
}

size_t ResetTodos::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ResetTodos)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResetTodos::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ResetTodos)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetTodos* source =
      ::google::protobuf::DynamicCastToGenerated<ResetTodos>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ResetTodos)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ResetTodos)
    MergeFrom(*source);
  }
}

void ResetTodos::MergeFrom(const ResetTodos& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ResetTodos)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ResetTodos::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ResetTodos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetTodos::CopyFrom(const ResetTodos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ResetTodos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetTodos::IsInitialized() const {
  return true;
}

void ResetTodos::Swap(ResetTodos* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResetTodos::InternalSwap(ResetTodos* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ResetTodos::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[kIndexInFileMessages];
}


// ===================================================================

ResponseError_MetaEntry_DoNotUse::ResponseError_MetaEntry_DoNotUse() {}
ResponseError_MetaEntry_DoNotUse::ResponseError_MetaEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void ResponseError_MetaEntry_DoNotUse::MergeFrom(const ResponseError_MetaEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ResponseError_MetaEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[34];
}
void ResponseError_MetaEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ResponseError_MetaEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      ResponseError_MetaEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "ResponseError.MetaEntry.key"));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.value().data(), static_cast<int>(parser.value().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "ResponseError.MetaEntry.value"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void ResponseError::InitAsDefaultInstance() {
}
class ResponseError::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResponseError::kErrorCodeFieldNumber;
const int ResponseError::kFieldNameFieldNumber;
const int ResponseError::kMessageFieldNumber;
const int ResponseError::kMetaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResponseError::ResponseError()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ResponseError)
}
ResponseError::ResponseError(const ResponseError& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  meta_.MergeFrom(from.meta_);
  errorcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errorcode().size() > 0) {
    errorcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errorcode_);
  }
  fieldname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fieldname().size() > 0) {
    fieldname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fieldname_);
  }
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:ResponseError)
}

void ResponseError::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ResponseError_services_2eproto.base);
  errorcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fieldname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ResponseError::~ResponseError() {
  // @@protoc_insertion_point(destructor:ResponseError)
  SharedDtor();
}

void ResponseError::SharedDtor() {
  errorcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fieldname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ResponseError::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResponseError& ResponseError::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ResponseError_services_2eproto.base);
  return *internal_default_instance();
}


void ResponseError::Clear() {
// @@protoc_insertion_point(message_clear_start:ResponseError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  meta_.Clear();
  errorcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fieldname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ResponseError::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ResponseError*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string ErrorCode = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ResponseError.ErrorCode");
        object = msg->mutable_errorcode();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string FieldName = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ResponseError.FieldName");
        object = msg->mutable_fieldname();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string Message = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ResponseError.Message");
        object = msg->mutable_message();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // map<string, string> Meta = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::ResponseError_MetaEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->meta_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ResponseError::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ResponseError)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ErrorCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errorcode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errorcode().data(), static_cast<int>(this->errorcode().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ResponseError.ErrorCode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string FieldName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fieldname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fieldname().data(), static_cast<int>(this->fieldname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ResponseError.FieldName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ResponseError.Message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> Meta = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          ResponseError_MetaEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ResponseError_MetaEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&meta_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ResponseError.MetaEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ResponseError.MetaEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ResponseError)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ResponseError)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ResponseError::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ResponseError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ErrorCode = 1;
  if (this->errorcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errorcode().data(), static_cast<int>(this->errorcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ResponseError.ErrorCode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->errorcode(), output);
  }

  // string FieldName = 2;
  if (this->fieldname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fieldname().data(), static_cast<int>(this->fieldname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ResponseError.FieldName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->fieldname(), output);
  }

  // string Message = 3;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ResponseError.Message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->message(), output);
  }

  // map<string, string> Meta = 4;
  if (!this->meta().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ResponseError.MetaEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ResponseError.MetaEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->meta().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->meta().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ResponseError_MetaEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(meta_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(4, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<ResponseError_MetaEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it) {
        entry.reset(meta_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(4, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ResponseError)
}

::google::protobuf::uint8* ResponseError::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ResponseError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ErrorCode = 1;
  if (this->errorcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errorcode().data(), static_cast<int>(this->errorcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ResponseError.ErrorCode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->errorcode(), target);
  }

  // string FieldName = 2;
  if (this->fieldname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fieldname().data(), static_cast<int>(this->fieldname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ResponseError.FieldName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->fieldname(), target);
  }

  // string Message = 3;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ResponseError.Message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->message(), target);
  }

  // map<string, string> Meta = 4;
  if (!this->meta().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ResponseError.MetaEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ResponseError.MetaEntry.value");
      }
    };

    if (false &&
        this->meta().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->meta().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ResponseError_MetaEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(meta_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(4, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<ResponseError_MetaEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it) {
        entry.reset(meta_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(4, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ResponseError)
  return target;
}

size_t ResponseError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ResponseError)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> Meta = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->meta_size());
  {
    ::std::unique_ptr<ResponseError_MetaEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->meta().begin();
        it != this->meta().end(); ++it) {
      entry.reset(meta_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string ErrorCode = 1;
  if (this->errorcode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errorcode());
  }

  // string FieldName = 2;
  if (this->fieldname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fieldname());
  }

  // string Message = 3;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResponseError::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ResponseError)
  GOOGLE_DCHECK_NE(&from, this);
  const ResponseError* source =
      ::google::protobuf::DynamicCastToGenerated<ResponseError>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ResponseError)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ResponseError)
    MergeFrom(*source);
  }
}

void ResponseError::MergeFrom(const ResponseError& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ResponseError)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  meta_.MergeFrom(from.meta_);
  if (from.errorcode().size() > 0) {

    errorcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errorcode_);
  }
  if (from.fieldname().size() > 0) {

    fieldname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fieldname_);
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void ResponseError::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ResponseError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseError::CopyFrom(const ResponseError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ResponseError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseError::IsInitialized() const {
  return true;
}

void ResponseError::Swap(ResponseError* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResponseError::InternalSwap(ResponseError* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  meta_.Swap(&other->meta_);
  errorcode_.Swap(&other->errorcode_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  fieldname_.Swap(&other->fieldname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ResponseError::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[kIndexInFileMessages];
}


// ===================================================================

ResponseStatus_MetaEntry_DoNotUse::ResponseStatus_MetaEntry_DoNotUse() {}
ResponseStatus_MetaEntry_DoNotUse::ResponseStatus_MetaEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void ResponseStatus_MetaEntry_DoNotUse::MergeFrom(const ResponseStatus_MetaEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ResponseStatus_MetaEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[36];
}
void ResponseStatus_MetaEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ResponseStatus_MetaEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      ResponseStatus_MetaEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "ResponseStatus.MetaEntry.key"));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.value().data(), static_cast<int>(parser.value().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "ResponseStatus.MetaEntry.value"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void ResponseStatus::InitAsDefaultInstance() {
}
class ResponseStatus::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResponseStatus::kErrorCodeFieldNumber;
const int ResponseStatus::kMessageFieldNumber;
const int ResponseStatus::kStackTraceFieldNumber;
const int ResponseStatus::kErrorsFieldNumber;
const int ResponseStatus::kMetaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResponseStatus::ResponseStatus()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ResponseStatus)
}
ResponseStatus::ResponseStatus(const ResponseStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      errors_(from.errors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  meta_.MergeFrom(from.meta_);
  errorcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errorcode().size() > 0) {
    errorcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errorcode_);
  }
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  stacktrace_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stacktrace().size() > 0) {
    stacktrace_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stacktrace_);
  }
  // @@protoc_insertion_point(copy_constructor:ResponseStatus)
}

void ResponseStatus::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ResponseStatus_services_2eproto.base);
  errorcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stacktrace_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ResponseStatus::~ResponseStatus() {
  // @@protoc_insertion_point(destructor:ResponseStatus)
  SharedDtor();
}

void ResponseStatus::SharedDtor() {
  errorcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stacktrace_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ResponseStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResponseStatus& ResponseStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ResponseStatus_services_2eproto.base);
  return *internal_default_instance();
}


void ResponseStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:ResponseStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errors_.Clear();
  meta_.Clear();
  errorcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stacktrace_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ResponseStatus::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ResponseStatus*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string ErrorCode = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ResponseStatus.ErrorCode");
        object = msg->mutable_errorcode();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string Message = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ResponseStatus.Message");
        object = msg->mutable_message();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string StackTrace = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ResponseStatus.StackTrace");
        object = msg->mutable_stacktrace();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated .ResponseError Errors = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::ResponseError::_InternalParse;
          object = msg->add_errors();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      // map<string, string> Meta = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::ResponseStatus_MetaEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->meta_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 42 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ResponseStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ResponseStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ErrorCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errorcode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errorcode().data(), static_cast<int>(this->errorcode().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ResponseStatus.ErrorCode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ResponseStatus.Message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string StackTrace = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stacktrace()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stacktrace().data(), static_cast<int>(this->stacktrace().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ResponseStatus.StackTrace"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ResponseError Errors = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_errors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> Meta = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          ResponseStatus_MetaEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ResponseStatus_MetaEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&meta_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ResponseStatus.MetaEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ResponseStatus.MetaEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ResponseStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ResponseStatus)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ResponseStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ResponseStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ErrorCode = 1;
  if (this->errorcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errorcode().data(), static_cast<int>(this->errorcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ResponseStatus.ErrorCode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->errorcode(), output);
  }

  // string Message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ResponseStatus.Message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  // string StackTrace = 3;
  if (this->stacktrace().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stacktrace().data(), static_cast<int>(this->stacktrace().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ResponseStatus.StackTrace");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->stacktrace(), output);
  }

  // repeated .ResponseError Errors = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->errors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->errors(static_cast<int>(i)),
      output);
  }

  // map<string, string> Meta = 5;
  if (!this->meta().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ResponseStatus.MetaEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ResponseStatus.MetaEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->meta().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->meta().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ResponseStatus_MetaEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(meta_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(5, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<ResponseStatus_MetaEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it) {
        entry.reset(meta_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(5, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ResponseStatus)
}

::google::protobuf::uint8* ResponseStatus::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ResponseStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ErrorCode = 1;
  if (this->errorcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errorcode().data(), static_cast<int>(this->errorcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ResponseStatus.ErrorCode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->errorcode(), target);
  }

  // string Message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ResponseStatus.Message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // string StackTrace = 3;
  if (this->stacktrace().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stacktrace().data(), static_cast<int>(this->stacktrace().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ResponseStatus.StackTrace");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->stacktrace(), target);
  }

  // repeated .ResponseError Errors = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->errors_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->errors(static_cast<int>(i)), target);
  }

  // map<string, string> Meta = 5;
  if (!this->meta().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ResponseStatus.MetaEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ResponseStatus.MetaEntry.value");
      }
    };

    if (false &&
        this->meta().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->meta().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ResponseStatus_MetaEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(meta_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(5, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<ResponseStatus_MetaEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it) {
        entry.reset(meta_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(5, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ResponseStatus)
  return target;
}

size_t ResponseStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ResponseStatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ResponseError Errors = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->errors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->errors(static_cast<int>(i)));
    }
  }

  // map<string, string> Meta = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->meta_size());
  {
    ::std::unique_ptr<ResponseStatus_MetaEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->meta().begin();
        it != this->meta().end(); ++it) {
      entry.reset(meta_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string ErrorCode = 1;
  if (this->errorcode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errorcode());
  }

  // string Message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // string StackTrace = 3;
  if (this->stacktrace().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stacktrace());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResponseStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ResponseStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const ResponseStatus* source =
      ::google::protobuf::DynamicCastToGenerated<ResponseStatus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ResponseStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ResponseStatus)
    MergeFrom(*source);
  }
}

void ResponseStatus::MergeFrom(const ResponseStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ResponseStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  errors_.MergeFrom(from.errors_);
  meta_.MergeFrom(from.meta_);
  if (from.errorcode().size() > 0) {

    errorcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errorcode_);
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.stacktrace().size() > 0) {

    stacktrace_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stacktrace_);
  }
}

void ResponseStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ResponseStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseStatus::CopyFrom(const ResponseStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ResponseStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseStatus::IsInitialized() const {
  return true;
}

void ResponseStatus::Swap(ResponseStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResponseStatus::InternalSwap(ResponseStatus* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&errors_)->InternalSwap(CastToBase(&other->errors_));
  meta_.Swap(&other->meta_);
  errorcode_.Swap(&other->errorcode_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stacktrace_.Swap(&other->stacktrace_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ResponseStatus::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StreamFiles::InitAsDefaultInstance() {
}
class StreamFiles::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StreamFiles::kPathsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StreamFiles::StreamFiles()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:StreamFiles)
}
StreamFiles::StreamFiles(const StreamFiles& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      paths_(from.paths_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:StreamFiles)
}

void StreamFiles::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StreamFiles_services_2eproto.base);
}

StreamFiles::~StreamFiles() {
  // @@protoc_insertion_point(destructor:StreamFiles)
  SharedDtor();
}

void StreamFiles::SharedDtor() {
}

void StreamFiles::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StreamFiles& StreamFiles::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StreamFiles_services_2eproto.base);
  return *internal_default_instance();
}


void StreamFiles::Clear() {
// @@protoc_insertion_point(message_clear_start:StreamFiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  paths_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StreamFiles::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StreamFiles*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated string Paths = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("StreamFiles.Paths");
          object = msg->add_paths();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StreamFiles::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StreamFiles)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string Paths = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_paths()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->paths(this->paths_size() - 1).data(),
            static_cast<int>(this->paths(this->paths_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "StreamFiles.Paths"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StreamFiles)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StreamFiles)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StreamFiles::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StreamFiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string Paths = 1;
  for (int i = 0, n = this->paths_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->paths(i).data(), static_cast<int>(this->paths(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StreamFiles.Paths");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->paths(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:StreamFiles)
}

::google::protobuf::uint8* StreamFiles::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:StreamFiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string Paths = 1;
  for (int i = 0, n = this->paths_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->paths(i).data(), static_cast<int>(this->paths(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StreamFiles.Paths");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->paths(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StreamFiles)
  return target;
}

size_t StreamFiles::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StreamFiles)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string Paths = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->paths_size());
  for (int i = 0, n = this->paths_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->paths(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StreamFiles::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StreamFiles)
  GOOGLE_DCHECK_NE(&from, this);
  const StreamFiles* source =
      ::google::protobuf::DynamicCastToGenerated<StreamFiles>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StreamFiles)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StreamFiles)
    MergeFrom(*source);
  }
}

void StreamFiles::MergeFrom(const StreamFiles& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StreamFiles)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  paths_.MergeFrom(from.paths_);
}

void StreamFiles::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StreamFiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StreamFiles::CopyFrom(const StreamFiles& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StreamFiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamFiles::IsInitialized() const {
  return true;
}

void StreamFiles::Swap(StreamFiles* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StreamFiles::InternalSwap(StreamFiles* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  paths_.InternalSwap(CastToBase(&other->paths_));
}

::google::protobuf::Metadata StreamFiles::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StreamServerEvents::InitAsDefaultInstance() {
}
class StreamServerEvents::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StreamServerEvents::kChannelsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StreamServerEvents::StreamServerEvents()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:StreamServerEvents)
}
StreamServerEvents::StreamServerEvents(const StreamServerEvents& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      channels_(from.channels_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:StreamServerEvents)
}

void StreamServerEvents::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StreamServerEvents_services_2eproto.base);
}

StreamServerEvents::~StreamServerEvents() {
  // @@protoc_insertion_point(destructor:StreamServerEvents)
  SharedDtor();
}

void StreamServerEvents::SharedDtor() {
}

void StreamServerEvents::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StreamServerEvents& StreamServerEvents::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StreamServerEvents_services_2eproto.base);
  return *internal_default_instance();
}


void StreamServerEvents::Clear() {
// @@protoc_insertion_point(message_clear_start:StreamServerEvents)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channels_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StreamServerEvents::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StreamServerEvents*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated string Channels = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("StreamServerEvents.Channels");
          object = msg->add_channels();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StreamServerEvents::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StreamServerEvents)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string Channels = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_channels()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->channels(this->channels_size() - 1).data(),
            static_cast<int>(this->channels(this->channels_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "StreamServerEvents.Channels"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StreamServerEvents)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StreamServerEvents)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StreamServerEvents::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StreamServerEvents)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string Channels = 1;
  for (int i = 0, n = this->channels_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->channels(i).data(), static_cast<int>(this->channels(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StreamServerEvents.Channels");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->channels(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:StreamServerEvents)
}

::google::protobuf::uint8* StreamServerEvents::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:StreamServerEvents)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string Channels = 1;
  for (int i = 0, n = this->channels_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->channels(i).data(), static_cast<int>(this->channels(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StreamServerEvents.Channels");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->channels(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StreamServerEvents)
  return target;
}

size_t StreamServerEvents::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StreamServerEvents)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string Channels = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->channels_size());
  for (int i = 0, n = this->channels_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->channels(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StreamServerEvents::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StreamServerEvents)
  GOOGLE_DCHECK_NE(&from, this);
  const StreamServerEvents* source =
      ::google::protobuf::DynamicCastToGenerated<StreamServerEvents>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StreamServerEvents)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StreamServerEvents)
    MergeFrom(*source);
  }
}

void StreamServerEvents::MergeFrom(const StreamServerEvents& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StreamServerEvents)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  channels_.MergeFrom(from.channels_);
}

void StreamServerEvents::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StreamServerEvents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StreamServerEvents::CopyFrom(const StreamServerEvents& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StreamServerEvents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamServerEvents::IsInitialized() const {
  return true;
}

void StreamServerEvents::Swap(StreamServerEvents* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StreamServerEvents::InternalSwap(StreamServerEvents* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  channels_.InternalSwap(CastToBase(&other->channels_));
}

::google::protobuf::Metadata StreamServerEvents::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[kIndexInFileMessages];
}


// ===================================================================

StreamServerEventsResponse_MetaEntry_DoNotUse::StreamServerEventsResponse_MetaEntry_DoNotUse() {}
StreamServerEventsResponse_MetaEntry_DoNotUse::StreamServerEventsResponse_MetaEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void StreamServerEventsResponse_MetaEntry_DoNotUse::MergeFrom(const StreamServerEventsResponse_MetaEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata StreamServerEventsResponse_MetaEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[40];
}
void StreamServerEventsResponse_MetaEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StreamServerEventsResponse_MetaEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      StreamServerEventsResponse_MetaEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "StreamServerEventsResponse.MetaEntry.key"));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.value().data(), static_cast<int>(parser.value().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "StreamServerEventsResponse.MetaEntry.value"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void StreamServerEventsResponse::InitAsDefaultInstance() {
  ::_StreamServerEventsResponse_default_instance_._instance.get_mutable()->responsestatus_ = const_cast< ::ResponseStatus*>(
      ::ResponseStatus::internal_default_instance());
}
class StreamServerEventsResponse::HasBitSetters {
 public:
  static const ::ResponseStatus& responsestatus(const StreamServerEventsResponse* msg);
};

const ::ResponseStatus&
StreamServerEventsResponse::HasBitSetters::responsestatus(const StreamServerEventsResponse* msg) {
  return *msg->responsestatus_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StreamServerEventsResponse::kEventIdFieldNumber;
const int StreamServerEventsResponse::kChannelFieldNumber;
const int StreamServerEventsResponse::kSelectorFieldNumber;
const int StreamServerEventsResponse::kJsonFieldNumber;
const int StreamServerEventsResponse::kOpFieldNumber;
const int StreamServerEventsResponse::kTargetFieldNumber;
const int StreamServerEventsResponse::kCssSelectorFieldNumber;
const int StreamServerEventsResponse::kMetaFieldNumber;
const int StreamServerEventsResponse::kUserIdFieldNumber;
const int StreamServerEventsResponse::kDisplayNameFieldNumber;
const int StreamServerEventsResponse::kProfileUrlFieldNumber;
const int StreamServerEventsResponse::kIsAuthenticatedFieldNumber;
const int StreamServerEventsResponse::kChannelsFieldNumber;
const int StreamServerEventsResponse::kCreatedAtFieldNumber;
const int StreamServerEventsResponse::kIdFieldNumber;
const int StreamServerEventsResponse::kUnRegisterUrlFieldNumber;
const int StreamServerEventsResponse::kUpdateSubscriberUrlFieldNumber;
const int StreamServerEventsResponse::kHeartbeatUrlFieldNumber;
const int StreamServerEventsResponse::kHeartbeatIntervalMsFieldNumber;
const int StreamServerEventsResponse::kIdleTimeoutMsFieldNumber;
const int StreamServerEventsResponse::kResponseStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StreamServerEventsResponse::StreamServerEventsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:StreamServerEventsResponse)
}
StreamServerEventsResponse::StreamServerEventsResponse(const StreamServerEventsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      channels_(from.channels_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  meta_.MergeFrom(from.meta_);
  channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.channel().size() > 0) {
    channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_);
  }
  selector_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.selector().size() > 0) {
    selector_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.selector_);
  }
  json_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.json().size() > 0) {
    json_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.json_);
  }
  op_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.op().size() > 0) {
    op_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.op_);
  }
  target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.target().size() > 0) {
    target_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_);
  }
  cssselector_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cssselector().size() > 0) {
    cssselector_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cssselector_);
  }
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userid().size() > 0) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  displayname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.displayname().size() > 0) {
    displayname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.displayname_);
  }
  profileurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.profileurl().size() > 0) {
    profileurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.profileurl_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  unregisterurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.unregisterurl().size() > 0) {
    unregisterurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unregisterurl_);
  }
  updatesubscriberurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.updatesubscriberurl().size() > 0) {
    updatesubscriberurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.updatesubscriberurl_);
  }
  heartbeaturl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.heartbeaturl().size() > 0) {
    heartbeaturl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.heartbeaturl_);
  }
  if (from.has_responsestatus()) {
    responsestatus_ = new ::ResponseStatus(*from.responsestatus_);
  } else {
    responsestatus_ = nullptr;
  }
  ::memcpy(&eventid_, &from.eventid_,
    static_cast<size_t>(reinterpret_cast<char*>(&idletimeoutms_) -
    reinterpret_cast<char*>(&eventid_)) + sizeof(idletimeoutms_));
  // @@protoc_insertion_point(copy_constructor:StreamServerEventsResponse)
}

void StreamServerEventsResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StreamServerEventsResponse_services_2eproto.base);
  channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  selector_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  json_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  op_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cssselector_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  displayname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  profileurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unregisterurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  updatesubscriberurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  heartbeaturl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&responsestatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&idletimeoutms_) -
      reinterpret_cast<char*>(&responsestatus_)) + sizeof(idletimeoutms_));
}

StreamServerEventsResponse::~StreamServerEventsResponse() {
  // @@protoc_insertion_point(destructor:StreamServerEventsResponse)
  SharedDtor();
}

void StreamServerEventsResponse::SharedDtor() {
  channel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  selector_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  json_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  op_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cssselector_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  displayname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  profileurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unregisterurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  updatesubscriberurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  heartbeaturl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete responsestatus_;
}

void StreamServerEventsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StreamServerEventsResponse& StreamServerEventsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StreamServerEventsResponse_services_2eproto.base);
  return *internal_default_instance();
}


void StreamServerEventsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:StreamServerEventsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  meta_.Clear();
  channels_.Clear();
  channel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  selector_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  json_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  op_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cssselector_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  displayname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  profileurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unregisterurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  updatesubscriberurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  heartbeaturl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && responsestatus_ != nullptr) {
    delete responsestatus_;
  }
  responsestatus_ = nullptr;
  ::memset(&eventid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&idletimeoutms_) -
      reinterpret_cast<char*>(&eventid_)) + sizeof(idletimeoutms_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StreamServerEventsResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StreamServerEventsResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 EventId = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_eventid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string Channel = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("StreamServerEventsResponse.Channel");
        object = msg->mutable_channel();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string Selector = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("StreamServerEventsResponse.Selector");
        object = msg->mutable_selector();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string Json = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("StreamServerEventsResponse.Json");
        object = msg->mutable_json();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string Op = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("StreamServerEventsResponse.Op");
        object = msg->mutable_op();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string Target = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("StreamServerEventsResponse.Target");
        object = msg->mutable_target();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string CssSelector = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("StreamServerEventsResponse.CssSelector");
        object = msg->mutable_cssselector();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // map<string, string> Meta = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::StreamServerEventsResponse_MetaEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->meta_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 74 && (ptr += 1));
        break;
      }
      // string UserId = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("StreamServerEventsResponse.UserId");
        object = msg->mutable_userid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string DisplayName = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("StreamServerEventsResponse.DisplayName");
        object = msg->mutable_displayname();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string ProfileUrl = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 98) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("StreamServerEventsResponse.ProfileUrl");
        object = msg->mutable_profileurl();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool IsAuthenticated = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 104) goto handle_unusual;
        msg->set_isauthenticated(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated string Channels = 14;
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) != 114) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("StreamServerEventsResponse.Channels");
          object = msg->add_channels();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 114 && (ptr += 1));
        break;
      }
      // int64 CreatedAt = 15;
      case 15: {
        if (static_cast<::google::protobuf::uint8>(tag) != 120) goto handle_unusual;
        msg->set_createdat(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string Id = 21;
      case 21: {
        if (static_cast<::google::protobuf::uint8>(tag) != 170) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("StreamServerEventsResponse.Id");
        object = msg->mutable_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string UnRegisterUrl = 22;
      case 22: {
        if (static_cast<::google::protobuf::uint8>(tag) != 178) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("StreamServerEventsResponse.UnRegisterUrl");
        object = msg->mutable_unregisterurl();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string UpdateSubscriberUrl = 23;
      case 23: {
        if (static_cast<::google::protobuf::uint8>(tag) != 186) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("StreamServerEventsResponse.UpdateSubscriberUrl");
        object = msg->mutable_updatesubscriberurl();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string HeartbeatUrl = 24;
      case 24: {
        if (static_cast<::google::protobuf::uint8>(tag) != 194) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("StreamServerEventsResponse.HeartbeatUrl");
        object = msg->mutable_heartbeaturl();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int64 HeartbeatIntervalMs = 25;
      case 25: {
        if (static_cast<::google::protobuf::uint8>(tag) != 200) goto handle_unusual;
        msg->set_heartbeatintervalms(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int64 IdleTimeoutMs = 26;
      case 26: {
        if (static_cast<::google::protobuf::uint8>(tag) != 208) goto handle_unusual;
        msg->set_idletimeoutms(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .ResponseStatus ResponseStatus = 30;
      case 30: {
        if (static_cast<::google::protobuf::uint8>(tag) != 242) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::ResponseStatus::_InternalParse;
        object = msg->mutable_responsestatus();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StreamServerEventsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StreamServerEventsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 EventId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &eventid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Channel = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channel()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->channel().data(), static_cast<int>(this->channel().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "StreamServerEventsResponse.Channel"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Selector = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_selector()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->selector().data(), static_cast<int>(this->selector().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "StreamServerEventsResponse.Selector"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Json = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_json()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->json().data(), static_cast<int>(this->json().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "StreamServerEventsResponse.Json"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Op = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_op()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->op().data(), static_cast<int>(this->op().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "StreamServerEventsResponse.Op"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Target = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->target().data(), static_cast<int>(this->target().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "StreamServerEventsResponse.Target"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string CssSelector = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cssselector()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cssselector().data(), static_cast<int>(this->cssselector().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "StreamServerEventsResponse.CssSelector"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> Meta = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          StreamServerEventsResponse_MetaEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              StreamServerEventsResponse_MetaEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&meta_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "StreamServerEventsResponse.MetaEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "StreamServerEventsResponse.MetaEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string UserId = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), static_cast<int>(this->userid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "StreamServerEventsResponse.UserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string DisplayName = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_displayname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->displayname().data(), static_cast<int>(this->displayname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "StreamServerEventsResponse.DisplayName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ProfileUrl = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (98 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_profileurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->profileurl().data(), static_cast<int>(this->profileurl().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "StreamServerEventsResponse.ProfileUrl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool IsAuthenticated = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (104 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isauthenticated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string Channels = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (114 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_channels()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->channels(this->channels_size() - 1).data(),
            static_cast<int>(this->channels(this->channels_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "StreamServerEventsResponse.Channels"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 CreatedAt = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (120 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &createdat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Id = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (170 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "StreamServerEventsResponse.Id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string UnRegisterUrl = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (178 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unregisterurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->unregisterurl().data(), static_cast<int>(this->unregisterurl().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "StreamServerEventsResponse.UnRegisterUrl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string UpdateSubscriberUrl = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (186 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_updatesubscriberurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->updatesubscriberurl().data(), static_cast<int>(this->updatesubscriberurl().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "StreamServerEventsResponse.UpdateSubscriberUrl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string HeartbeatUrl = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (194 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_heartbeaturl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->heartbeaturl().data(), static_cast<int>(this->heartbeaturl().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "StreamServerEventsResponse.HeartbeatUrl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 HeartbeatIntervalMs = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (200 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &heartbeatintervalms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 IdleTimeoutMs = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (208 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &idletimeoutms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ResponseStatus ResponseStatus = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (242 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_responsestatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StreamServerEventsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StreamServerEventsResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StreamServerEventsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StreamServerEventsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 EventId = 1;
  if (this->eventid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->eventid(), output);
  }

  // string Channel = 2;
  if (this->channel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->channel().data(), static_cast<int>(this->channel().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StreamServerEventsResponse.Channel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->channel(), output);
  }

  // string Selector = 4;
  if (this->selector().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->selector().data(), static_cast<int>(this->selector().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StreamServerEventsResponse.Selector");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->selector(), output);
  }

  // string Json = 5;
  if (this->json().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->json().data(), static_cast<int>(this->json().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StreamServerEventsResponse.Json");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->json(), output);
  }

  // string Op = 6;
  if (this->op().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->op().data(), static_cast<int>(this->op().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StreamServerEventsResponse.Op");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->op(), output);
  }

  // string Target = 7;
  if (this->target().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target().data(), static_cast<int>(this->target().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StreamServerEventsResponse.Target");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->target(), output);
  }

  // string CssSelector = 8;
  if (this->cssselector().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cssselector().data(), static_cast<int>(this->cssselector().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StreamServerEventsResponse.CssSelector");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->cssselector(), output);
  }

  // map<string, string> Meta = 9;
  if (!this->meta().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "StreamServerEventsResponse.MetaEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "StreamServerEventsResponse.MetaEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->meta().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->meta().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<StreamServerEventsResponse_MetaEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(meta_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(9, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<StreamServerEventsResponse_MetaEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it) {
        entry.reset(meta_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(9, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // string UserId = 10;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StreamServerEventsResponse.UserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->userid(), output);
  }

  // string DisplayName = 11;
  if (this->displayname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->displayname().data(), static_cast<int>(this->displayname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StreamServerEventsResponse.DisplayName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->displayname(), output);
  }

  // string ProfileUrl = 12;
  if (this->profileurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->profileurl().data(), static_cast<int>(this->profileurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StreamServerEventsResponse.ProfileUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->profileurl(), output);
  }

  // bool IsAuthenticated = 13;
  if (this->isauthenticated() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->isauthenticated(), output);
  }

  // repeated string Channels = 14;
  for (int i = 0, n = this->channels_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->channels(i).data(), static_cast<int>(this->channels(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StreamServerEventsResponse.Channels");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->channels(i), output);
  }

  // int64 CreatedAt = 15;
  if (this->createdat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(15, this->createdat(), output);
  }

  // string Id = 21;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StreamServerEventsResponse.Id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->id(), output);
  }

  // string UnRegisterUrl = 22;
  if (this->unregisterurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unregisterurl().data(), static_cast<int>(this->unregisterurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StreamServerEventsResponse.UnRegisterUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->unregisterurl(), output);
  }

  // string UpdateSubscriberUrl = 23;
  if (this->updatesubscriberurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->updatesubscriberurl().data(), static_cast<int>(this->updatesubscriberurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StreamServerEventsResponse.UpdateSubscriberUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      23, this->updatesubscriberurl(), output);
  }

  // string HeartbeatUrl = 24;
  if (this->heartbeaturl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->heartbeaturl().data(), static_cast<int>(this->heartbeaturl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StreamServerEventsResponse.HeartbeatUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      24, this->heartbeaturl(), output);
  }

  // int64 HeartbeatIntervalMs = 25;
  if (this->heartbeatintervalms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(25, this->heartbeatintervalms(), output);
  }

  // int64 IdleTimeoutMs = 26;
  if (this->idletimeoutms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(26, this->idletimeoutms(), output);
  }

  // .ResponseStatus ResponseStatus = 30;
  if (this->has_responsestatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, HasBitSetters::responsestatus(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:StreamServerEventsResponse)
}

::google::protobuf::uint8* StreamServerEventsResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:StreamServerEventsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 EventId = 1;
  if (this->eventid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->eventid(), target);
  }

  // string Channel = 2;
  if (this->channel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->channel().data(), static_cast<int>(this->channel().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StreamServerEventsResponse.Channel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->channel(), target);
  }

  // string Selector = 4;
  if (this->selector().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->selector().data(), static_cast<int>(this->selector().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StreamServerEventsResponse.Selector");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->selector(), target);
  }

  // string Json = 5;
  if (this->json().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->json().data(), static_cast<int>(this->json().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StreamServerEventsResponse.Json");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->json(), target);
  }

  // string Op = 6;
  if (this->op().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->op().data(), static_cast<int>(this->op().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StreamServerEventsResponse.Op");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->op(), target);
  }

  // string Target = 7;
  if (this->target().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target().data(), static_cast<int>(this->target().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StreamServerEventsResponse.Target");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->target(), target);
  }

  // string CssSelector = 8;
  if (this->cssselector().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cssselector().data(), static_cast<int>(this->cssselector().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StreamServerEventsResponse.CssSelector");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->cssselector(), target);
  }

  // map<string, string> Meta = 9;
  if (!this->meta().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "StreamServerEventsResponse.MetaEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "StreamServerEventsResponse.MetaEntry.value");
      }
    };

    if (false &&
        this->meta().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->meta().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<StreamServerEventsResponse_MetaEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(meta_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(9, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<StreamServerEventsResponse_MetaEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it) {
        entry.reset(meta_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(9, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // string UserId = 10;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StreamServerEventsResponse.UserId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->userid(), target);
  }

  // string DisplayName = 11;
  if (this->displayname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->displayname().data(), static_cast<int>(this->displayname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StreamServerEventsResponse.DisplayName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->displayname(), target);
  }

  // string ProfileUrl = 12;
  if (this->profileurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->profileurl().data(), static_cast<int>(this->profileurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StreamServerEventsResponse.ProfileUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->profileurl(), target);
  }

  // bool IsAuthenticated = 13;
  if (this->isauthenticated() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->isauthenticated(), target);
  }

  // repeated string Channels = 14;
  for (int i = 0, n = this->channels_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->channels(i).data(), static_cast<int>(this->channels(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StreamServerEventsResponse.Channels");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(14, this->channels(i), target);
  }

  // int64 CreatedAt = 15;
  if (this->createdat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(15, this->createdat(), target);
  }

  // string Id = 21;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StreamServerEventsResponse.Id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->id(), target);
  }

  // string UnRegisterUrl = 22;
  if (this->unregisterurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unregisterurl().data(), static_cast<int>(this->unregisterurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StreamServerEventsResponse.UnRegisterUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->unregisterurl(), target);
  }

  // string UpdateSubscriberUrl = 23;
  if (this->updatesubscriberurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->updatesubscriberurl().data(), static_cast<int>(this->updatesubscriberurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StreamServerEventsResponse.UpdateSubscriberUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->updatesubscriberurl(), target);
  }

  // string HeartbeatUrl = 24;
  if (this->heartbeaturl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->heartbeaturl().data(), static_cast<int>(this->heartbeaturl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StreamServerEventsResponse.HeartbeatUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        24, this->heartbeaturl(), target);
  }

  // int64 HeartbeatIntervalMs = 25;
  if (this->heartbeatintervalms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(25, this->heartbeatintervalms(), target);
  }

  // int64 IdleTimeoutMs = 26;
  if (this->idletimeoutms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(26, this->idletimeoutms(), target);
  }

  // .ResponseStatus ResponseStatus = 30;
  if (this->has_responsestatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        30, HasBitSetters::responsestatus(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StreamServerEventsResponse)
  return target;
}

size_t StreamServerEventsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StreamServerEventsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> Meta = 9;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->meta_size());
  {
    ::std::unique_ptr<StreamServerEventsResponse_MetaEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->meta().begin();
        it != this->meta().end(); ++it) {
      entry.reset(meta_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated string Channels = 14;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->channels_size());
  for (int i = 0, n = this->channels_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->channels(i));
  }

  // string Channel = 2;
  if (this->channel().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->channel());
  }

  // string Selector = 4;
  if (this->selector().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->selector());
  }

  // string Json = 5;
  if (this->json().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->json());
  }

  // string Op = 6;
  if (this->op().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->op());
  }

  // string Target = 7;
  if (this->target().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target());
  }

  // string CssSelector = 8;
  if (this->cssselector().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cssselector());
  }

  // string UserId = 10;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // string DisplayName = 11;
  if (this->displayname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->displayname());
  }

  // string ProfileUrl = 12;
  if (this->profileurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->profileurl());
  }

  // string Id = 21;
  if (this->id().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string UnRegisterUrl = 22;
  if (this->unregisterurl().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->unregisterurl());
  }

  // string UpdateSubscriberUrl = 23;
  if (this->updatesubscriberurl().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->updatesubscriberurl());
  }

  // string HeartbeatUrl = 24;
  if (this->heartbeaturl().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->heartbeaturl());
  }

  // .ResponseStatus ResponseStatus = 30;
  if (this->has_responsestatus()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *responsestatus_);
  }

  // int64 EventId = 1;
  if (this->eventid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->eventid());
  }

  // int64 CreatedAt = 15;
  if (this->createdat() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->createdat());
  }

  // bool IsAuthenticated = 13;
  if (this->isauthenticated() != 0) {
    total_size += 1 + 1;
  }

  // int64 HeartbeatIntervalMs = 25;
  if (this->heartbeatintervalms() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->heartbeatintervalms());
  }

  // int64 IdleTimeoutMs = 26;
  if (this->idletimeoutms() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->idletimeoutms());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StreamServerEventsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StreamServerEventsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StreamServerEventsResponse* source =
      ::google::protobuf::DynamicCastToGenerated<StreamServerEventsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StreamServerEventsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StreamServerEventsResponse)
    MergeFrom(*source);
  }
}

void StreamServerEventsResponse::MergeFrom(const StreamServerEventsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StreamServerEventsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  meta_.MergeFrom(from.meta_);
  channels_.MergeFrom(from.channels_);
  if (from.channel().size() > 0) {

    channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_);
  }
  if (from.selector().size() > 0) {

    selector_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.selector_);
  }
  if (from.json().size() > 0) {

    json_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.json_);
  }
  if (from.op().size() > 0) {

    op_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.op_);
  }
  if (from.target().size() > 0) {

    target_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_);
  }
  if (from.cssselector().size() > 0) {

    cssselector_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cssselector_);
  }
  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.displayname().size() > 0) {

    displayname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.displayname_);
  }
  if (from.profileurl().size() > 0) {

    profileurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.profileurl_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.unregisterurl().size() > 0) {

    unregisterurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unregisterurl_);
  }
  if (from.updatesubscriberurl().size() > 0) {

    updatesubscriberurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.updatesubscriberurl_);
  }
  if (from.heartbeaturl().size() > 0) {

    heartbeaturl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.heartbeaturl_);
  }
  if (from.has_responsestatus()) {
    mutable_responsestatus()->::ResponseStatus::MergeFrom(from.responsestatus());
  }
  if (from.eventid() != 0) {
    set_eventid(from.eventid());
  }
  if (from.createdat() != 0) {
    set_createdat(from.createdat());
  }
  if (from.isauthenticated() != 0) {
    set_isauthenticated(from.isauthenticated());
  }
  if (from.heartbeatintervalms() != 0) {
    set_heartbeatintervalms(from.heartbeatintervalms());
  }
  if (from.idletimeoutms() != 0) {
    set_idletimeoutms(from.idletimeoutms());
  }
}

void StreamServerEventsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StreamServerEventsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StreamServerEventsResponse::CopyFrom(const StreamServerEventsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StreamServerEventsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamServerEventsResponse::IsInitialized() const {
  return true;
}

void StreamServerEventsResponse::Swap(StreamServerEventsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StreamServerEventsResponse::InternalSwap(StreamServerEventsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  meta_.Swap(&other->meta_);
  channels_.InternalSwap(CastToBase(&other->channels_));
  channel_.Swap(&other->channel_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  selector_.Swap(&other->selector_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  json_.Swap(&other->json_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  op_.Swap(&other->op_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  target_.Swap(&other->target_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cssselector_.Swap(&other->cssselector_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  userid_.Swap(&other->userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  displayname_.Swap(&other->displayname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  profileurl_.Swap(&other->profileurl_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  unregisterurl_.Swap(&other->unregisterurl_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  updatesubscriberurl_.Swap(&other->updatesubscriberurl_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  heartbeaturl_.Swap(&other->heartbeaturl_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(responsestatus_, other->responsestatus_);
  swap(eventid_, other->eventid_);
  swap(createdat_, other->createdat_);
  swap(isauthenticated_, other->isauthenticated_);
  swap(heartbeatintervalms_, other->heartbeatintervalms_);
  swap(idletimeoutms_, other->idletimeoutms_);
}

::google::protobuf::Metadata StreamServerEventsResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Todo::InitAsDefaultInstance() {
}
class Todo::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Todo::kIdFieldNumber;
const int Todo::kTitleFieldNumber;
const int Todo::kOrderFieldNumber;
const int Todo::kCompletedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Todo::Todo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Todo)
}
Todo::Todo(const Todo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&completed_) -
    reinterpret_cast<char*>(&id_)) + sizeof(completed_));
  // @@protoc_insertion_point(copy_constructor:Todo)
}

void Todo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Todo_services_2eproto.base);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&completed_) -
      reinterpret_cast<char*>(&id_)) + sizeof(completed_));
}

Todo::~Todo() {
  // @@protoc_insertion_point(destructor:Todo)
  SharedDtor();
}

void Todo::SharedDtor() {
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Todo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Todo& Todo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Todo_services_2eproto.base);
  return *internal_default_instance();
}


void Todo::Clear() {
// @@protoc_insertion_point(message_clear_start:Todo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&completed_) -
      reinterpret_cast<char*>(&id_)) + sizeof(completed_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Todo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Todo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 Id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string Title = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Todo.Title");
        object = msg->mutable_title();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 Order = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_order(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool Completed = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_completed(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Todo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Todo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Todo.Title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Order = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &order_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool Completed = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &completed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Todo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Todo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Todo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Todo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // string Title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Todo.Title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // int32 Order = 3;
  if (this->order() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->order(), output);
  }

  // bool Completed = 4;
  if (this->completed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->completed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Todo)
}

::google::protobuf::uint8* Todo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Todo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // string Title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Todo.Title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // int32 Order = 3;
  if (this->order() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->order(), target);
  }

  // bool Completed = 4;
  if (this->completed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->completed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Todo)
  return target;
}

size_t Todo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Todo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Title = 2;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // int64 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  // int32 Order = 3;
  if (this->order() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->order());
  }

  // bool Completed = 4;
  if (this->completed() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Todo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Todo)
  GOOGLE_DCHECK_NE(&from, this);
  const Todo* source =
      ::google::protobuf::DynamicCastToGenerated<Todo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Todo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Todo)
    MergeFrom(*source);
  }
}

void Todo::MergeFrom(const Todo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Todo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.order() != 0) {
    set_order(from.order());
  }
  if (from.completed() != 0) {
    set_completed(from.completed());
  }
}

void Todo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Todo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Todo::CopyFrom(const Todo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Todo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Todo::IsInitialized() const {
  return true;
}

void Todo::Swap(Todo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Todo::InternalSwap(Todo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  title_.Swap(&other->title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(order_, other->order_);
  swap(completed_, other->completed_);
}

::google::protobuf::Metadata Todo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[kIndexInFileMessages];
}


// ===================================================================

UnAssignRoles_MetaEntry_DoNotUse::UnAssignRoles_MetaEntry_DoNotUse() {}
UnAssignRoles_MetaEntry_DoNotUse::UnAssignRoles_MetaEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void UnAssignRoles_MetaEntry_DoNotUse::MergeFrom(const UnAssignRoles_MetaEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata UnAssignRoles_MetaEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[43];
}
void UnAssignRoles_MetaEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UnAssignRoles_MetaEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      UnAssignRoles_MetaEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "UnAssignRoles.MetaEntry.key"));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.value().data(), static_cast<int>(parser.value().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "UnAssignRoles.MetaEntry.value"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void UnAssignRoles::InitAsDefaultInstance() {
}
class UnAssignRoles::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnAssignRoles::kUserNameFieldNumber;
const int UnAssignRoles::kPermissionsFieldNumber;
const int UnAssignRoles::kRolesFieldNumber;
const int UnAssignRoles::kMetaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnAssignRoles::UnAssignRoles()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UnAssignRoles)
}
UnAssignRoles::UnAssignRoles(const UnAssignRoles& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      permissions_(from.permissions_),
      roles_(from.roles_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  meta_.MergeFrom(from.meta_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  // @@protoc_insertion_point(copy_constructor:UnAssignRoles)
}

void UnAssignRoles::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UnAssignRoles_services_2eproto.base);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UnAssignRoles::~UnAssignRoles() {
  // @@protoc_insertion_point(destructor:UnAssignRoles)
  SharedDtor();
}

void UnAssignRoles::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UnAssignRoles::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UnAssignRoles& UnAssignRoles::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UnAssignRoles_services_2eproto.base);
  return *internal_default_instance();
}


void UnAssignRoles::Clear() {
// @@protoc_insertion_point(message_clear_start:UnAssignRoles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  permissions_.Clear();
  roles_.Clear();
  meta_.Clear();
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UnAssignRoles::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UnAssignRoles*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string UserName = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("UnAssignRoles.UserName");
        object = msg->mutable_username();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated string Permissions = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("UnAssignRoles.Permissions");
          object = msg->add_permissions();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // repeated string Roles = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("UnAssignRoles.Roles");
          object = msg->add_roles();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // map<string, string> Meta = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::UnAssignRoles_MetaEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->meta_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UnAssignRoles::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UnAssignRoles)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string UserName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "UnAssignRoles.UserName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string Permissions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_permissions()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->permissions(this->permissions_size() - 1).data(),
            static_cast<int>(this->permissions(this->permissions_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "UnAssignRoles.Permissions"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string Roles = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_roles()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->roles(this->roles_size() - 1).data(),
            static_cast<int>(this->roles(this->roles_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "UnAssignRoles.Roles"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> Meta = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          UnAssignRoles_MetaEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              UnAssignRoles_MetaEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&meta_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "UnAssignRoles.MetaEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "UnAssignRoles.MetaEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UnAssignRoles)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UnAssignRoles)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UnAssignRoles::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UnAssignRoles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string UserName = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UnAssignRoles.UserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // repeated string Permissions = 2;
  for (int i = 0, n = this->permissions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->permissions(i).data(), static_cast<int>(this->permissions(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UnAssignRoles.Permissions");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->permissions(i), output);
  }

  // repeated string Roles = 3;
  for (int i = 0, n = this->roles_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roles(i).data(), static_cast<int>(this->roles(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UnAssignRoles.Roles");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->roles(i), output);
  }

  // map<string, string> Meta = 4;
  if (!this->meta().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "UnAssignRoles.MetaEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "UnAssignRoles.MetaEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->meta().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->meta().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<UnAssignRoles_MetaEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(meta_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(4, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<UnAssignRoles_MetaEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it) {
        entry.reset(meta_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(4, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UnAssignRoles)
}

::google::protobuf::uint8* UnAssignRoles::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnAssignRoles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string UserName = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UnAssignRoles.UserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // repeated string Permissions = 2;
  for (int i = 0, n = this->permissions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->permissions(i).data(), static_cast<int>(this->permissions(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UnAssignRoles.Permissions");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->permissions(i), target);
  }

  // repeated string Roles = 3;
  for (int i = 0, n = this->roles_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roles(i).data(), static_cast<int>(this->roles(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UnAssignRoles.Roles");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->roles(i), target);
  }

  // map<string, string> Meta = 4;
  if (!this->meta().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "UnAssignRoles.MetaEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "UnAssignRoles.MetaEntry.value");
      }
    };

    if (false &&
        this->meta().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->meta().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<UnAssignRoles_MetaEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(meta_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(4, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<UnAssignRoles_MetaEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it) {
        entry.reset(meta_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(4, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnAssignRoles)
  return target;
}

size_t UnAssignRoles::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnAssignRoles)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string Permissions = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->permissions_size());
  for (int i = 0, n = this->permissions_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->permissions(i));
  }

  // repeated string Roles = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->roles_size());
  for (int i = 0, n = this->roles_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->roles(i));
  }

  // map<string, string> Meta = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->meta_size());
  {
    ::std::unique_ptr<UnAssignRoles_MetaEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->meta().begin();
        it != this->meta().end(); ++it) {
      entry.reset(meta_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string UserName = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnAssignRoles::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnAssignRoles)
  GOOGLE_DCHECK_NE(&from, this);
  const UnAssignRoles* source =
      ::google::protobuf::DynamicCastToGenerated<UnAssignRoles>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnAssignRoles)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnAssignRoles)
    MergeFrom(*source);
  }
}

void UnAssignRoles::MergeFrom(const UnAssignRoles& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnAssignRoles)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  permissions_.MergeFrom(from.permissions_);
  roles_.MergeFrom(from.roles_);
  meta_.MergeFrom(from.meta_);
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
}

void UnAssignRoles::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnAssignRoles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnAssignRoles::CopyFrom(const UnAssignRoles& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnAssignRoles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnAssignRoles::IsInitialized() const {
  return true;
}

void UnAssignRoles::Swap(UnAssignRoles* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnAssignRoles::InternalSwap(UnAssignRoles* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  permissions_.InternalSwap(CastToBase(&other->permissions_));
  roles_.InternalSwap(CastToBase(&other->roles_));
  meta_.Swap(&other->meta_);
  username_.Swap(&other->username_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata UnAssignRoles::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[kIndexInFileMessages];
}


// ===================================================================

UnAssignRolesResponse_MetaEntry_DoNotUse::UnAssignRolesResponse_MetaEntry_DoNotUse() {}
UnAssignRolesResponse_MetaEntry_DoNotUse::UnAssignRolesResponse_MetaEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void UnAssignRolesResponse_MetaEntry_DoNotUse::MergeFrom(const UnAssignRolesResponse_MetaEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata UnAssignRolesResponse_MetaEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[45];
}
void UnAssignRolesResponse_MetaEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UnAssignRolesResponse_MetaEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      UnAssignRolesResponse_MetaEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "UnAssignRolesResponse.MetaEntry.key"));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.value().data(), static_cast<int>(parser.value().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "UnAssignRolesResponse.MetaEntry.value"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void UnAssignRolesResponse::InitAsDefaultInstance() {
  ::_UnAssignRolesResponse_default_instance_._instance.get_mutable()->responsestatus_ = const_cast< ::ResponseStatus*>(
      ::ResponseStatus::internal_default_instance());
}
class UnAssignRolesResponse::HasBitSetters {
 public:
  static const ::ResponseStatus& responsestatus(const UnAssignRolesResponse* msg);
};

const ::ResponseStatus&
UnAssignRolesResponse::HasBitSetters::responsestatus(const UnAssignRolesResponse* msg) {
  return *msg->responsestatus_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnAssignRolesResponse::kAllRolesFieldNumber;
const int UnAssignRolesResponse::kAllPermissionsFieldNumber;
const int UnAssignRolesResponse::kMetaFieldNumber;
const int UnAssignRolesResponse::kResponseStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnAssignRolesResponse::UnAssignRolesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UnAssignRolesResponse)
}
UnAssignRolesResponse::UnAssignRolesResponse(const UnAssignRolesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      allroles_(from.allroles_),
      allpermissions_(from.allpermissions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  meta_.MergeFrom(from.meta_);
  if (from.has_responsestatus()) {
    responsestatus_ = new ::ResponseStatus(*from.responsestatus_);
  } else {
    responsestatus_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:UnAssignRolesResponse)
}

void UnAssignRolesResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UnAssignRolesResponse_services_2eproto.base);
  responsestatus_ = nullptr;
}

UnAssignRolesResponse::~UnAssignRolesResponse() {
  // @@protoc_insertion_point(destructor:UnAssignRolesResponse)
  SharedDtor();
}

void UnAssignRolesResponse::SharedDtor() {
  if (this != internal_default_instance()) delete responsestatus_;
}

void UnAssignRolesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UnAssignRolesResponse& UnAssignRolesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UnAssignRolesResponse_services_2eproto.base);
  return *internal_default_instance();
}


void UnAssignRolesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:UnAssignRolesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  allroles_.Clear();
  allpermissions_.Clear();
  meta_.Clear();
  if (GetArenaNoVirtual() == nullptr && responsestatus_ != nullptr) {
    delete responsestatus_;
  }
  responsestatus_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UnAssignRolesResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UnAssignRolesResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated string AllRoles = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("UnAssignRolesResponse.AllRoles");
          object = msg->add_allroles();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // repeated string AllPermissions = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("UnAssignRolesResponse.AllPermissions");
          object = msg->add_allpermissions();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // map<string, string> Meta = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::UnAssignRolesResponse_MetaEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->meta_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // .ResponseStatus ResponseStatus = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::ResponseStatus::_InternalParse;
        object = msg->mutable_responsestatus();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UnAssignRolesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UnAssignRolesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string AllRoles = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_allroles()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->allroles(this->allroles_size() - 1).data(),
            static_cast<int>(this->allroles(this->allroles_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "UnAssignRolesResponse.AllRoles"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string AllPermissions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_allpermissions()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->allpermissions(this->allpermissions_size() - 1).data(),
            static_cast<int>(this->allpermissions(this->allpermissions_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "UnAssignRolesResponse.AllPermissions"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> Meta = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          UnAssignRolesResponse_MetaEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              UnAssignRolesResponse_MetaEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&meta_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "UnAssignRolesResponse.MetaEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "UnAssignRolesResponse.MetaEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ResponseStatus ResponseStatus = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_responsestatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UnAssignRolesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UnAssignRolesResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UnAssignRolesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UnAssignRolesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string AllRoles = 1;
  for (int i = 0, n = this->allroles_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->allroles(i).data(), static_cast<int>(this->allroles(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UnAssignRolesResponse.AllRoles");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->allroles(i), output);
  }

  // repeated string AllPermissions = 2;
  for (int i = 0, n = this->allpermissions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->allpermissions(i).data(), static_cast<int>(this->allpermissions(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UnAssignRolesResponse.AllPermissions");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->allpermissions(i), output);
  }

  // map<string, string> Meta = 3;
  if (!this->meta().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "UnAssignRolesResponse.MetaEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "UnAssignRolesResponse.MetaEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->meta().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->meta().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<UnAssignRolesResponse_MetaEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(meta_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(3, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<UnAssignRolesResponse_MetaEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it) {
        entry.reset(meta_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(3, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // .ResponseStatus ResponseStatus = 4;
  if (this->has_responsestatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::responsestatus(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UnAssignRolesResponse)
}

::google::protobuf::uint8* UnAssignRolesResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnAssignRolesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string AllRoles = 1;
  for (int i = 0, n = this->allroles_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->allroles(i).data(), static_cast<int>(this->allroles(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UnAssignRolesResponse.AllRoles");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->allroles(i), target);
  }

  // repeated string AllPermissions = 2;
  for (int i = 0, n = this->allpermissions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->allpermissions(i).data(), static_cast<int>(this->allpermissions(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UnAssignRolesResponse.AllPermissions");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->allpermissions(i), target);
  }

  // map<string, string> Meta = 3;
  if (!this->meta().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "UnAssignRolesResponse.MetaEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "UnAssignRolesResponse.MetaEntry.value");
      }
    };

    if (false &&
        this->meta().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->meta().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<UnAssignRolesResponse_MetaEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(meta_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(3, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<UnAssignRolesResponse_MetaEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->meta().begin();
          it != this->meta().end(); ++it) {
        entry.reset(meta_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(3, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // .ResponseStatus ResponseStatus = 4;
  if (this->has_responsestatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::responsestatus(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnAssignRolesResponse)
  return target;
}

size_t UnAssignRolesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnAssignRolesResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string AllRoles = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->allroles_size());
  for (int i = 0, n = this->allroles_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->allroles(i));
  }

  // repeated string AllPermissions = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->allpermissions_size());
  for (int i = 0, n = this->allpermissions_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->allpermissions(i));
  }

  // map<string, string> Meta = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->meta_size());
  {
    ::std::unique_ptr<UnAssignRolesResponse_MetaEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->meta().begin();
        it != this->meta().end(); ++it) {
      entry.reset(meta_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .ResponseStatus ResponseStatus = 4;
  if (this->has_responsestatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *responsestatus_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnAssignRolesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnAssignRolesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UnAssignRolesResponse* source =
      ::google::protobuf::DynamicCastToGenerated<UnAssignRolesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnAssignRolesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnAssignRolesResponse)
    MergeFrom(*source);
  }
}

void UnAssignRolesResponse::MergeFrom(const UnAssignRolesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnAssignRolesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  allroles_.MergeFrom(from.allroles_);
  allpermissions_.MergeFrom(from.allpermissions_);
  meta_.MergeFrom(from.meta_);
  if (from.has_responsestatus()) {
    mutable_responsestatus()->::ResponseStatus::MergeFrom(from.responsestatus());
  }
}

void UnAssignRolesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnAssignRolesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnAssignRolesResponse::CopyFrom(const UnAssignRolesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnAssignRolesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnAssignRolesResponse::IsInitialized() const {
  return true;
}

void UnAssignRolesResponse::Swap(UnAssignRolesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnAssignRolesResponse::InternalSwap(UnAssignRolesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  allroles_.InternalSwap(CastToBase(&other->allroles_));
  allpermissions_.InternalSwap(CastToBase(&other->allpermissions_));
  meta_.Swap(&other->meta_);
  swap(responsestatus_, other->responsestatus_);
}

::google::protobuf::Metadata UnAssignRolesResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UpdateTodo::InitAsDefaultInstance() {
}
class UpdateTodo::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateTodo::kIdFieldNumber;
const int UpdateTodo::kTitleFieldNumber;
const int UpdateTodo::kOrderFieldNumber;
const int UpdateTodo::kCompletedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateTodo::UpdateTodo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UpdateTodo)
}
UpdateTodo::UpdateTodo(const UpdateTodo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&completed_) -
    reinterpret_cast<char*>(&id_)) + sizeof(completed_));
  // @@protoc_insertion_point(copy_constructor:UpdateTodo)
}

void UpdateTodo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UpdateTodo_services_2eproto.base);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&completed_) -
      reinterpret_cast<char*>(&id_)) + sizeof(completed_));
}

UpdateTodo::~UpdateTodo() {
  // @@protoc_insertion_point(destructor:UpdateTodo)
  SharedDtor();
}

void UpdateTodo::SharedDtor() {
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdateTodo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateTodo& UpdateTodo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UpdateTodo_services_2eproto.base);
  return *internal_default_instance();
}


void UpdateTodo::Clear() {
// @@protoc_insertion_point(message_clear_start:UpdateTodo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&completed_) -
      reinterpret_cast<char*>(&id_)) + sizeof(completed_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UpdateTodo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UpdateTodo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 Id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string Title = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("UpdateTodo.Title");
        object = msg->mutable_title();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 Order = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_order(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool Completed = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_completed(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UpdateTodo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UpdateTodo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "UpdateTodo.Title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Order = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &order_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool Completed = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &completed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UpdateTodo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UpdateTodo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UpdateTodo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UpdateTodo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // string Title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UpdateTodo.Title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // int32 Order = 3;
  if (this->order() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->order(), output);
  }

  // bool Completed = 4;
  if (this->completed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->completed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UpdateTodo)
}

::google::protobuf::uint8* UpdateTodo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:UpdateTodo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // string Title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UpdateTodo.Title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // int32 Order = 3;
  if (this->order() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->order(), target);
  }

  // bool Completed = 4;
  if (this->completed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->completed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UpdateTodo)
  return target;
}

size_t UpdateTodo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UpdateTodo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Title = 2;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // int64 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  // int32 Order = 3;
  if (this->order() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->order());
  }

  // bool Completed = 4;
  if (this->completed() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateTodo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UpdateTodo)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateTodo* source =
      ::google::protobuf::DynamicCastToGenerated<UpdateTodo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UpdateTodo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UpdateTodo)
    MergeFrom(*source);
  }
}

void UpdateTodo::MergeFrom(const UpdateTodo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UpdateTodo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.order() != 0) {
    set_order(from.order());
  }
  if (from.completed() != 0) {
    set_completed(from.completed());
  }
}

void UpdateTodo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UpdateTodo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateTodo::CopyFrom(const UpdateTodo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UpdateTodo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateTodo::IsInitialized() const {
  return true;
}

void UpdateTodo::Swap(UpdateTodo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateTodo::InternalSwap(UpdateTodo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  title_.Swap(&other->title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(order_, other->order_);
  swap(completed_, other->completed_);
}

::google::protobuf::Metadata UpdateTodo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_services_2eproto);
  return ::file_level_metadata_services_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::AssignRoles_MetaEntry_DoNotUse* Arena::CreateMaybeMessage< ::AssignRoles_MetaEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::AssignRoles_MetaEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::AssignRoles* Arena::CreateMaybeMessage< ::AssignRoles >(Arena* arena) {
  return Arena::CreateInternal< ::AssignRoles >(arena);
}
template<> PROTOBUF_NOINLINE ::AssignRolesResponse_MetaEntry_DoNotUse* Arena::CreateMaybeMessage< ::AssignRolesResponse_MetaEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::AssignRolesResponse_MetaEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::AssignRolesResponse* Arena::CreateMaybeMessage< ::AssignRolesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::AssignRolesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Authenticate_MetaEntry_DoNotUse* Arena::CreateMaybeMessage< ::Authenticate_MetaEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::Authenticate_MetaEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::Authenticate* Arena::CreateMaybeMessage< ::Authenticate >(Arena* arena) {
  return Arena::CreateInternal< ::Authenticate >(arena);
}
template<> PROTOBUF_NOINLINE ::AuthenticateResponse_MetaEntry_DoNotUse* Arena::CreateMaybeMessage< ::AuthenticateResponse_MetaEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::AuthenticateResponse_MetaEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::AuthenticateResponse* Arena::CreateMaybeMessage< ::AuthenticateResponse >(Arena* arena) {
  return Arena::CreateInternal< ::AuthenticateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ConvertSessionToToken_MetaEntry_DoNotUse* Arena::CreateMaybeMessage< ::ConvertSessionToToken_MetaEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::ConvertSessionToToken_MetaEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::ConvertSessionToToken* Arena::CreateMaybeMessage< ::ConvertSessionToToken >(Arena* arena) {
  return Arena::CreateInternal< ::ConvertSessionToToken >(arena);
}
template<> PROTOBUF_NOINLINE ::ConvertSessionToTokenResponse_MetaEntry_DoNotUse* Arena::CreateMaybeMessage< ::ConvertSessionToTokenResponse_MetaEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::ConvertSessionToTokenResponse_MetaEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::ConvertSessionToTokenResponse* Arena::CreateMaybeMessage< ::ConvertSessionToTokenResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ConvertSessionToTokenResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CreateTodo* Arena::CreateMaybeMessage< ::CreateTodo >(Arena* arena) {
  return Arena::CreateInternal< ::CreateTodo >(arena);
}
template<> PROTOBUF_NOINLINE ::CreateTodoResponse* Arena::CreateMaybeMessage< ::CreateTodoResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CreateTodoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::DeleteTodo* Arena::CreateMaybeMessage< ::DeleteTodo >(Arena* arena) {
  return Arena::CreateInternal< ::DeleteTodo >(arena);
}
template<> PROTOBUF_NOINLINE ::DeleteTodos* Arena::CreateMaybeMessage< ::DeleteTodos >(Arena* arena) {
  return Arena::CreateInternal< ::DeleteTodos >(arena);
}
template<> PROTOBUF_NOINLINE ::EmptyResponse* Arena::CreateMaybeMessage< ::EmptyResponse >(Arena* arena) {
  return Arena::CreateInternal< ::EmptyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::FileContent* Arena::CreateMaybeMessage< ::FileContent >(Arena* arena) {
  return Arena::CreateInternal< ::FileContent >(arena);
}
template<> PROTOBUF_NOINLINE ::GetAccessToken_MetaEntry_DoNotUse* Arena::CreateMaybeMessage< ::GetAccessToken_MetaEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::GetAccessToken_MetaEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::GetAccessToken* Arena::CreateMaybeMessage< ::GetAccessToken >(Arena* arena) {
  return Arena::CreateInternal< ::GetAccessToken >(arena);
}
template<> PROTOBUF_NOINLINE ::GetAccessTokenResponse_MetaEntry_DoNotUse* Arena::CreateMaybeMessage< ::GetAccessTokenResponse_MetaEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::GetAccessTokenResponse_MetaEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::GetAccessTokenResponse* Arena::CreateMaybeMessage< ::GetAccessTokenResponse >(Arena* arena) {
  return Arena::CreateInternal< ::GetAccessTokenResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::GetTodo* Arena::CreateMaybeMessage< ::GetTodo >(Arena* arena) {
  return Arena::CreateInternal< ::GetTodo >(arena);
}
template<> PROTOBUF_NOINLINE ::GetTodoResponse* Arena::CreateMaybeMessage< ::GetTodoResponse >(Arena* arena) {
  return Arena::CreateInternal< ::GetTodoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::GetTodos* Arena::CreateMaybeMessage< ::GetTodos >(Arena* arena) {
  return Arena::CreateInternal< ::GetTodos >(arena);
}
template<> PROTOBUF_NOINLINE ::GetTodosResponse* Arena::CreateMaybeMessage< ::GetTodosResponse >(Arena* arena) {
  return Arena::CreateInternal< ::GetTodosResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Hello* Arena::CreateMaybeMessage< ::Hello >(Arena* arena) {
  return Arena::CreateInternal< ::Hello >(arena);
}
template<> PROTOBUF_NOINLINE ::HelloResponse* Arena::CreateMaybeMessage< ::HelloResponse >(Arena* arena) {
  return Arena::CreateInternal< ::HelloResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::HelloSecure* Arena::CreateMaybeMessage< ::HelloSecure >(Arena* arena) {
  return Arena::CreateInternal< ::HelloSecure >(arena);
}
template<> PROTOBUF_NOINLINE ::Register_MetaEntry_DoNotUse* Arena::CreateMaybeMessage< ::Register_MetaEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::Register_MetaEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::Register* Arena::CreateMaybeMessage< ::Register >(Arena* arena) {
  return Arena::CreateInternal< ::Register >(arena);
}
template<> PROTOBUF_NOINLINE ::RegisterResponse_MetaEntry_DoNotUse* Arena::CreateMaybeMessage< ::RegisterResponse_MetaEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::RegisterResponse_MetaEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::RegisterResponse* Arena::CreateMaybeMessage< ::RegisterResponse >(Arena* arena) {
  return Arena::CreateInternal< ::RegisterResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ResetTodos* Arena::CreateMaybeMessage< ::ResetTodos >(Arena* arena) {
  return Arena::CreateInternal< ::ResetTodos >(arena);
}
template<> PROTOBUF_NOINLINE ::ResponseError_MetaEntry_DoNotUse* Arena::CreateMaybeMessage< ::ResponseError_MetaEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::ResponseError_MetaEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::ResponseError* Arena::CreateMaybeMessage< ::ResponseError >(Arena* arena) {
  return Arena::CreateInternal< ::ResponseError >(arena);
}
template<> PROTOBUF_NOINLINE ::ResponseStatus_MetaEntry_DoNotUse* Arena::CreateMaybeMessage< ::ResponseStatus_MetaEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::ResponseStatus_MetaEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::ResponseStatus* Arena::CreateMaybeMessage< ::ResponseStatus >(Arena* arena) {
  return Arena::CreateInternal< ::ResponseStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::StreamFiles* Arena::CreateMaybeMessage< ::StreamFiles >(Arena* arena) {
  return Arena::CreateInternal< ::StreamFiles >(arena);
}
template<> PROTOBUF_NOINLINE ::StreamServerEvents* Arena::CreateMaybeMessage< ::StreamServerEvents >(Arena* arena) {
  return Arena::CreateInternal< ::StreamServerEvents >(arena);
}
template<> PROTOBUF_NOINLINE ::StreamServerEventsResponse_MetaEntry_DoNotUse* Arena::CreateMaybeMessage< ::StreamServerEventsResponse_MetaEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::StreamServerEventsResponse_MetaEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::StreamServerEventsResponse* Arena::CreateMaybeMessage< ::StreamServerEventsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::StreamServerEventsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Todo* Arena::CreateMaybeMessage< ::Todo >(Arena* arena) {
  return Arena::CreateInternal< ::Todo >(arena);
}
template<> PROTOBUF_NOINLINE ::UnAssignRoles_MetaEntry_DoNotUse* Arena::CreateMaybeMessage< ::UnAssignRoles_MetaEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::UnAssignRoles_MetaEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::UnAssignRoles* Arena::CreateMaybeMessage< ::UnAssignRoles >(Arena* arena) {
  return Arena::CreateInternal< ::UnAssignRoles >(arena);
}
template<> PROTOBUF_NOINLINE ::UnAssignRolesResponse_MetaEntry_DoNotUse* Arena::CreateMaybeMessage< ::UnAssignRolesResponse_MetaEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::UnAssignRolesResponse_MetaEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::UnAssignRolesResponse* Arena::CreateMaybeMessage< ::UnAssignRolesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::UnAssignRolesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::UpdateTodo* Arena::CreateMaybeMessage< ::UpdateTodo >(Arena* arena) {
  return Arena::CreateInternal< ::UpdateTodo >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
