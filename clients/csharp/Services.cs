// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: services.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace TodoWorld {

  /// <summary>Holder for reflection information generated from services.proto</summary>
  public static partial class ServicesReflection {

    #region Descriptor
    /// <summary>File descriptor for services.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ServicesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5zZXJ2aWNlcy5wcm90byKWAQoLQXNzaWduUm9sZXMSEAoIVXNlck5hbWUY",
            "ASABKAkSEwoLUGVybWlzc2lvbnMYAiADKAkSDQoFUm9sZXMYAyADKAkSJAoE",
            "TWV0YRgEIAMoCzIWLkFzc2lnblJvbGVzLk1ldGFFbnRyeRorCglNZXRhRW50",
            "cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASLDAQoTQXNzaWdu",
            "Um9sZXNSZXNwb25zZRIQCghBbGxSb2xlcxgBIAMoCRIWCg5BbGxQZXJtaXNz",
            "aW9ucxgCIAMoCRIsCgRNZXRhGAMgAygLMh4uQXNzaWduUm9sZXNSZXNwb25z",
            "ZS5NZXRhRW50cnkSJwoOUmVzcG9uc2VTdGF0dXMYBCABKAsyDy5SZXNwb25z",
            "ZVN0YXR1cxorCglNZXRhRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIg",
            "ASgJOgI4ASK7AwoMQXV0aGVudGljYXRlEhAKCHByb3ZpZGVyGAEgASgJEg0K",
            "BVN0YXRlGAIgASgJEhMKC29hdXRoX3Rva2VuGAMgASgJEhYKDm9hdXRoX3Zl",
            "cmlmaWVyGAQgASgJEhAKCFVzZXJOYW1lGAUgASgJEhAKCFBhc3N3b3JkGAYg",
            "ASgJEhIKClJlbWVtYmVyTWUYByABKAgSEAoIQ29udGludWUYCCABKAkSEQoJ",
            "RXJyb3JWaWV3GAkgASgJEg0KBW5vbmNlGAogASgJEgsKA3VyaRgLIAEoCRIQ",
            "CghyZXNwb25zZRgMIAEoCRILCgNxb3AYDSABKAkSCgoCbmMYDiABKAkSDgoG",
            "Y25vbmNlGA8gASgJEhYKDlVzZVRva2VuQ29va2llGBAgASgIEhMKC0FjY2Vz",
            "c1Rva2VuGBEgASgJEhkKEUFjY2Vzc1Rva2VuU2VjcmV0GBIgASgJEg0KBXNj",
            "b3BlGBMgASgJEiUKBE1ldGEYFCADKAsyFy5BdXRoZW50aWNhdGUuTWV0YUVu",
            "dHJ5GisKCU1ldGFFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6",
            "AjgBIt0CChRBdXRoZW50aWNhdGVSZXNwb25zZRIOCgZVc2VySWQYASABKAkS",
            "EQoJU2Vzc2lvbklkGAIgASgJEhAKCFVzZXJOYW1lGAMgASgJEhMKC0Rpc3Bs",
            "YXlOYW1lGAQgASgJEhMKC1JlZmVycmVyVXJsGAUgASgJEhMKC0JlYXJlclRv",
            "a2VuGAYgASgJEhQKDFJlZnJlc2hUb2tlbhgHIAEoCRISCgpQcm9maWxlVXJs",
            "GAggASgJEg0KBVJvbGVzGAkgAygJEhMKC1Blcm1pc3Npb25zGAogAygJEicK",
            "DlJlc3BvbnNlU3RhdHVzGAsgASgLMg8uUmVzcG9uc2VTdGF0dXMSLQoETWV0",
            "YRgMIAMoCzIfLkF1dGhlbnRpY2F0ZVJlc3BvbnNlLk1ldGFFbnRyeRorCglN",
            "ZXRhRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASKNAQoV",
            "Q29udmVydFNlc3Npb25Ub1Rva2VuEhcKD1ByZXNlcnZlU2Vzc2lvbhgBIAEo",
            "CBIuCgRNZXRhGAIgAygLMiAuQ29udmVydFNlc3Npb25Ub1Rva2VuLk1ldGFF",
            "bnRyeRorCglNZXRhRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJ",
            "OgI4ASLYAQodQ29udmVydFNlc3Npb25Ub1Rva2VuUmVzcG9uc2USNgoETWV0",
            "YRgBIAMoCzIoLkNvbnZlcnRTZXNzaW9uVG9Ub2tlblJlc3BvbnNlLk1ldGFF",
            "bnRyeRITCgtBY2Nlc3NUb2tlbhgCIAEoCRIUCgxSZWZyZXNoVG9rZW4YAyAB",
            "KAkSJwoOUmVzcG9uc2VTdGF0dXMYBCABKAsyDy5SZXNwb25zZVN0YXR1cxor",
            "CglNZXRhRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASIq",
            "CgpDcmVhdGVUb2RvEg0KBVRpdGxlGAEgASgJEg0KBU9yZGVyGAIgASgFIlQK",
            "EkNyZWF0ZVRvZG9SZXNwb25zZRIVCgZSZXN1bHQYASABKAsyBS5Ub2RvEicK",
            "DlJlc3BvbnNlU3RhdHVzGAIgASgLMg8uUmVzcG9uc2VTdGF0dXMiGAoKRGVs",
            "ZXRlVG9kbxIKCgJJZBgBIAEoAyIeCgtEZWxldGVUb2RvcxIPCgNJZHMYASAD",
            "KANCAhAAIjgKDUVtcHR5UmVzcG9uc2USJwoOUmVzcG9uc2VTdGF0dXMYASAB",
            "KAsyDy5SZXNwb25zZVN0YXR1cyJwCgtGaWxlQ29udGVudBIMCgROYW1lGAEg",
            "ASgJEgwKBFR5cGUYAiABKAkSDgoGTGVuZ3RoGAMgASgFEgwKBEJvZHkYBCAB",
            "KAwSJwoOUmVzcG9uc2VTdGF0dXMYBSABKAsyDy5SZXNwb25zZVN0YXR1cyKU",
            "AQoOR2V0QWNjZXNzVG9rZW4SFAoMUmVmcmVzaFRva2VuGAEgASgJEhYKDlVz",
            "ZVRva2VuQ29va2llGAIgASgIEicKBE1ldGEYAyADKAsyGS5HZXRBY2Nlc3NU",
            "b2tlbi5NZXRhRW50cnkaKwoJTWV0YUVudHJ5EgsKA2tleRgBIAEoCRINCgV2",
            "YWx1ZRgCIAEoCToCOAEitAEKFkdldEFjY2Vzc1Rva2VuUmVzcG9uc2USEwoL",
            "QWNjZXNzVG9rZW4YASABKAkSLwoETWV0YRgCIAMoCzIhLkdldEFjY2Vzc1Rv",
            "a2VuUmVzcG9uc2UuTWV0YUVudHJ5EicKDlJlc3BvbnNlU3RhdHVzGAMgASgL",
            "Mg8uUmVzcG9uc2VTdGF0dXMaKwoJTWV0YUVudHJ5EgsKA2tleRgBIAEoCRIN",
            "CgV2YWx1ZRgCIAEoCToCOAEiFQoHR2V0VG9kbxIKCgJJZBgBIAEoAyJRCg9H",
            "ZXRUb2RvUmVzcG9uc2USFQoGUmVzdWx0GAEgASgLMgUuVG9kbxInCg5SZXNw",
            "b25zZVN0YXR1cxgCIAEoCzIPLlJlc3BvbnNlU3RhdHVzIgoKCEdldFRvZG9z",
            "IlMKEEdldFRvZG9zUmVzcG9uc2USFgoHUmVzdWx0cxgBIAMoCzIFLlRvZG8S",
            "JwoOUmVzcG9uc2VTdGF0dXMYAiABKAsyDy5SZXNwb25zZVN0YXR1cyIVCgVI",
            "ZWxsbxIMCgROYW1lGAEgASgJIkgKDUhlbGxvUmVzcG9uc2USDgoGUmVzdWx0",
            "GAEgASgJEicKDlJlc3BvbnNlU3RhdHVzGAIgASgLMg8uUmVzcG9uc2VTdGF0",
            "dXMiGwoLSGVsbG9TZWN1cmUSDAoETmFtZRgBIAEoCSKYAgoIUmVnaXN0ZXIS",
            "EAoIVXNlck5hbWUYASABKAkSEQoJRmlyc3ROYW1lGAIgASgJEhAKCExhc3RO",
            "YW1lGAMgASgJEhMKC0Rpc3BsYXlOYW1lGAQgASgJEg0KBUVtYWlsGAUgASgJ",
            "EhAKCFBhc3N3b3JkGAYgASgJEhcKD0NvbmZpcm1QYXNzd29yZBgHIAEoCRIR",
            "CglBdXRvTG9naW4YCCABKAgSEAoIQ29udGludWUYCSABKAkSEQoJRXJyb3JW",
            "aWV3GAogASgJEiEKBE1ldGEYCyADKAsyEy5SZWdpc3Rlci5NZXRhRW50cnka",
            "KwoJTWV0YUVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEi",
            "iAIKEFJlZ2lzdGVyUmVzcG9uc2USDgoGVXNlcklkGAEgASgJEhEKCVNlc3Np",
            "b25JZBgCIAEoCRIQCghVc2VyTmFtZRgDIAEoCRITCgtSZWZlcnJlclVybBgE",
            "IAEoCRITCgtCZWFyZXJUb2tlbhgFIAEoCRIUCgxSZWZyZXNoVG9rZW4YBiAB",
            "KAkSJwoOUmVzcG9uc2VTdGF0dXMYByABKAsyDy5SZXNwb25zZVN0YXR1cxIp",
            "CgRNZXRhGAggAygLMhsuUmVnaXN0ZXJSZXNwb25zZS5NZXRhRW50cnkaKwoJ",
            "TWV0YUVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEiDAoK",
            "UmVzZXRUb2RvcyKbAQoNUmVzcG9uc2VFcnJvchIRCglFcnJvckNvZGUYASAB",
            "KAkSEQoJRmllbGROYW1lGAIgASgJEg8KB01lc3NhZ2UYAyABKAkSJgoETWV0",
            "YRgEIAMoCzIYLlJlc3BvbnNlRXJyb3IuTWV0YUVudHJ5GisKCU1ldGFFbnRy",
            "eRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIr4BCg5SZXNwb25z",
            "ZVN0YXR1cxIRCglFcnJvckNvZGUYASABKAkSDwoHTWVzc2FnZRgCIAEoCRIS",
            "CgpTdGFja1RyYWNlGAMgASgJEh4KBkVycm9ycxgEIAMoCzIOLlJlc3BvbnNl",
            "RXJyb3ISJwoETWV0YRgFIAMoCzIZLlJlc3BvbnNlU3RhdHVzLk1ldGFFbnRy",
            "eRorCglNZXRhRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4",
            "ASIcCgtTdHJlYW1GaWxlcxINCgVQYXRocxgBIAMoCSImChJTdHJlYW1TZXJ2",
            "ZXJFdmVudHMSEAoIQ2hhbm5lbHMYASADKAkimwQKGlN0cmVhbVNlcnZlckV2",
            "ZW50c1Jlc3BvbnNlEg8KB0V2ZW50SWQYASABKAMSDwoHQ2hhbm5lbBgCIAEo",
            "CRIQCghTZWxlY3RvchgEIAEoCRIMCgRKc29uGAUgASgJEgoKAk9wGAYgASgJ",
            "Eg4KBlRhcmdldBgHIAEoCRITCgtDc3NTZWxlY3RvchgIIAEoCRIzCgRNZXRh",
            "GAkgAygLMiUuU3RyZWFtU2VydmVyRXZlbnRzUmVzcG9uc2UuTWV0YUVudHJ5",
            "Eg4KBlVzZXJJZBgKIAEoCRITCgtEaXNwbGF5TmFtZRgLIAEoCRISCgpQcm9m",
            "aWxlVXJsGAwgASgJEhcKD0lzQXV0aGVudGljYXRlZBgNIAEoCBIQCghDaGFu",
            "bmVscxgOIAMoCRIRCglDcmVhdGVkQXQYDyABKAMSCgoCSWQYFSABKAkSFQoN",
            "VW5SZWdpc3RlclVybBgWIAEoCRIbChNVcGRhdGVTdWJzY3JpYmVyVXJsGBcg",
            "ASgJEhQKDEhlYXJ0YmVhdFVybBgYIAEoCRIbChNIZWFydGJlYXRJbnRlcnZh",
            "bE1zGBkgASgDEhUKDUlkbGVUaW1lb3V0TXMYGiABKAMSJwoOUmVzcG9uc2VT",
            "dGF0dXMYHiABKAsyDy5SZXNwb25zZVN0YXR1cxorCglNZXRhRW50cnkSCwoD",
            "a2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASJDCgRUb2RvEgoKAklkGAEg",
            "ASgDEg0KBVRpdGxlGAIgASgJEg0KBU9yZGVyGAMgASgFEhEKCUNvbXBsZXRl",
            "ZBgEIAEoCCKaAQoNVW5Bc3NpZ25Sb2xlcxIQCghVc2VyTmFtZRgBIAEoCRIT",
            "CgtQZXJtaXNzaW9ucxgCIAMoCRINCgVSb2xlcxgDIAMoCRImCgRNZXRhGAQg",
            "AygLMhguVW5Bc3NpZ25Sb2xlcy5NZXRhRW50cnkaKwoJTWV0YUVudHJ5EgsK",
            "A2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEixwEKFVVuQXNzaWduUm9s",
            "ZXNSZXNwb25zZRIQCghBbGxSb2xlcxgBIAMoCRIWCg5BbGxQZXJtaXNzaW9u",
            "cxgCIAMoCRIuCgRNZXRhGAMgAygLMiAuVW5Bc3NpZ25Sb2xlc1Jlc3BvbnNl",
            "Lk1ldGFFbnRyeRInCg5SZXNwb25zZVN0YXR1cxgEIAEoCzIPLlJlc3BvbnNl",
            "U3RhdHVzGisKCU1ldGFFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiAB",
            "KAk6AjgBIkkKClVwZGF0ZVRvZG8SCgoCSWQYASABKAMSDQoFVGl0bGUYAiAB",
            "KAkSDQoFT3JkZXIYAyABKAUSEQoJQ29tcGxldGVkGAQgASgIMpUMCgxHcnBj",
            "U2VydmljZXMSNwoPUG9zdEFzc2lnblJvbGVzEgwuQXNzaWduUm9sZXMaFC5B",
            "c3NpZ25Sb2xlc1Jlc3BvbnNlIgASPQoTT3B0aW9uc0F1dGhlbnRpY2F0ZRIN",
            "LkF1dGhlbnRpY2F0ZRoVLkF1dGhlbnRpY2F0ZVJlc3BvbnNlIgASOQoPR2V0",
            "QXV0aGVudGljYXRlEg0uQXV0aGVudGljYXRlGhUuQXV0aGVudGljYXRlUmVz",
            "cG9uc2UiABI6ChBQb3N0QXV0aGVudGljYXRlEg0uQXV0aGVudGljYXRlGhUu",
            "QXV0aGVudGljYXRlUmVzcG9uc2UiABI8ChJEZWxldGVBdXRoZW50aWNhdGUS",
            "DS5BdXRoZW50aWNhdGUaFS5BdXRoZW50aWNhdGVSZXNwb25zZSIAElUKGVBv",
            "c3RDb252ZXJ0U2Vzc2lvblRvVG9rZW4SFi5Db252ZXJ0U2Vzc2lvblRvVG9r",
            "ZW4aHi5Db252ZXJ0U2Vzc2lvblRvVG9rZW5SZXNwb25zZSIAEjQKDlBvc3RD",
            "cmVhdGVUb2RvEgsuQ3JlYXRlVG9kbxoTLkNyZWF0ZVRvZG9SZXNwb25zZSIA",
            "Ei8KDkNhbGxEZWxldGVUb2RvEgsuRGVsZXRlVG9kbxoOLkVtcHR5UmVzcG9u",
            "c2UiABIxCg9DYWxsRGVsZXRlVG9kb3MSDC5EZWxldGVUb2RvcxoOLkVtcHR5",
            "UmVzcG9uc2UiABJAChJQb3N0R2V0QWNjZXNzVG9rZW4SDy5HZXRBY2Nlc3NU",
            "b2tlbhoXLkdldEFjY2Vzc1Rva2VuUmVzcG9uc2UiABIrCgtDYWxsR2V0VG9k",
            "bxIILkdldFRvZG8aEC5HZXRUb2RvUmVzcG9uc2UiABIuCgxDYWxsR2V0VG9k",
            "b3MSCS5HZXRUb2RvcxoRLkdldFRvZG9zUmVzcG9uc2UiABIkCghHZXRIZWxs",
            "bxIGLkhlbGxvGg4uSGVsbG9SZXNwb25zZSIAEiUKCVBvc3RIZWxsbxIGLkhl",
            "bGxvGg4uSGVsbG9SZXNwb25zZSIAEiQKCFB1dEhlbGxvEgYuSGVsbG8aDi5I",
            "ZWxsb1Jlc3BvbnNlIgASJwoLRGVsZXRlSGVsbG8SBi5IZWxsbxoOLkhlbGxv",
            "UmVzcG9uc2UiABImCgpQYXRjaEhlbGxvEgYuSGVsbG8aDi5IZWxsb1Jlc3Bv",
            "bnNlIgASMAoOR2V0SGVsbG9TZWN1cmUSDC5IZWxsb1NlY3VyZRoOLkhlbGxv",
            "UmVzcG9uc2UiABIxCg9Qb3N0SGVsbG9TZWN1cmUSDC5IZWxsb1NlY3VyZRoO",
            "LkhlbGxvUmVzcG9uc2UiABIwCg5QdXRIZWxsb1NlY3VyZRIMLkhlbGxvU2Vj",
            "dXJlGg4uSGVsbG9SZXNwb25zZSIAEjMKEURlbGV0ZUhlbGxvU2VjdXJlEgwu",
            "SGVsbG9TZWN1cmUaDi5IZWxsb1Jlc3BvbnNlIgASMgoQUGF0Y2hIZWxsb1Nl",
            "Y3VyZRIMLkhlbGxvU2VjdXJlGg4uSGVsbG9SZXNwb25zZSIAEi0KC1B1dFJl",
            "Z2lzdGVyEgkuUmVnaXN0ZXIaES5SZWdpc3RlclJlc3BvbnNlIgASLgoMUG9z",
            "dFJlZ2lzdGVyEgkuUmVnaXN0ZXIaES5SZWdpc3RlclJlc3BvbnNlIgASLwoO",
            "UG9zdFJlc2V0VG9kb3MSCy5SZXNldFRvZG9zGg4uRW1wdHlSZXNwb25zZSIA",
            "EjMKEVNlcnZlclN0cmVhbUZpbGVzEgwuU3RyZWFtRmlsZXMaDC5GaWxlQ29u",
            "dGVudCIAMAESUAoYU2VydmVyU3RyZWFtU2VydmVyRXZlbnRzEhMuU3RyZWFt",
            "U2VydmVyRXZlbnRzGhsuU3RyZWFtU2VydmVyRXZlbnRzUmVzcG9uc2UiADAB",
            "Ej0KEVBvc3RVbkFzc2lnblJvbGVzEg4uVW5Bc3NpZ25Sb2xlcxoWLlVuQXNz",
            "aWduUm9sZXNSZXNwb25zZSIAEi4KDVB1dFVwZGF0ZVRvZG8SCy5VcGRhdGVU",
            "b2RvGg4uRW1wdHlSZXNwb25zZSIAQgyqAglUb2RvV29ybGRiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::TodoWorld.AssignRoles), global::TodoWorld.AssignRoles.Parser, new[]{ "UserName", "Permissions", "Roles", "Meta" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::TodoWorld.AssignRolesResponse), global::TodoWorld.AssignRolesResponse.Parser, new[]{ "AllRoles", "AllPermissions", "Meta", "ResponseStatus" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::TodoWorld.Authenticate), global::TodoWorld.Authenticate.Parser, new[]{ "Provider", "State", "OauthToken", "OauthVerifier", "UserName", "Password", "RememberMe", "Continue", "ErrorView", "Nonce", "Uri", "Response", "Qop", "Nc", "Cnonce", "UseTokenCookie", "AccessToken", "AccessTokenSecret", "Scope", "Meta" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::TodoWorld.AuthenticateResponse), global::TodoWorld.AuthenticateResponse.Parser, new[]{ "UserId", "SessionId", "UserName", "DisplayName", "ReferrerUrl", "BearerToken", "RefreshToken", "ProfileUrl", "Roles", "Permissions", "ResponseStatus", "Meta" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::TodoWorld.ConvertSessionToToken), global::TodoWorld.ConvertSessionToToken.Parser, new[]{ "PreserveSession", "Meta" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::TodoWorld.ConvertSessionToTokenResponse), global::TodoWorld.ConvertSessionToTokenResponse.Parser, new[]{ "Meta", "AccessToken", "RefreshToken", "ResponseStatus" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::TodoWorld.CreateTodo), global::TodoWorld.CreateTodo.Parser, new[]{ "Title", "Order" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TodoWorld.CreateTodoResponse), global::TodoWorld.CreateTodoResponse.Parser, new[]{ "Result", "ResponseStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TodoWorld.DeleteTodo), global::TodoWorld.DeleteTodo.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TodoWorld.DeleteTodos), global::TodoWorld.DeleteTodos.Parser, new[]{ "Ids" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TodoWorld.EmptyResponse), global::TodoWorld.EmptyResponse.Parser, new[]{ "ResponseStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TodoWorld.FileContent), global::TodoWorld.FileContent.Parser, new[]{ "Name", "Type", "Length", "Body", "ResponseStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TodoWorld.GetAccessToken), global::TodoWorld.GetAccessToken.Parser, new[]{ "RefreshToken", "UseTokenCookie", "Meta" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::TodoWorld.GetAccessTokenResponse), global::TodoWorld.GetAccessTokenResponse.Parser, new[]{ "AccessToken", "Meta", "ResponseStatus" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::TodoWorld.GetTodo), global::TodoWorld.GetTodo.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TodoWorld.GetTodoResponse), global::TodoWorld.GetTodoResponse.Parser, new[]{ "Result", "ResponseStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TodoWorld.GetTodos), global::TodoWorld.GetTodos.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TodoWorld.GetTodosResponse), global::TodoWorld.GetTodosResponse.Parser, new[]{ "Results", "ResponseStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TodoWorld.Hello), global::TodoWorld.Hello.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TodoWorld.HelloResponse), global::TodoWorld.HelloResponse.Parser, new[]{ "Result", "ResponseStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TodoWorld.HelloSecure), global::TodoWorld.HelloSecure.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TodoWorld.Register), global::TodoWorld.Register.Parser, new[]{ "UserName", "FirstName", "LastName", "DisplayName", "Email", "Password", "ConfirmPassword", "AutoLogin", "Continue", "ErrorView", "Meta" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::TodoWorld.RegisterResponse), global::TodoWorld.RegisterResponse.Parser, new[]{ "UserId", "SessionId", "UserName", "ReferrerUrl", "BearerToken", "RefreshToken", "ResponseStatus", "Meta" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::TodoWorld.ResetTodos), global::TodoWorld.ResetTodos.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TodoWorld.ResponseError), global::TodoWorld.ResponseError.Parser, new[]{ "ErrorCode", "FieldName", "Message", "Meta" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::TodoWorld.ResponseStatus), global::TodoWorld.ResponseStatus.Parser, new[]{ "ErrorCode", "Message", "StackTrace", "Errors", "Meta" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::TodoWorld.StreamFiles), global::TodoWorld.StreamFiles.Parser, new[]{ "Paths" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TodoWorld.StreamServerEvents), global::TodoWorld.StreamServerEvents.Parser, new[]{ "Channels" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TodoWorld.StreamServerEventsResponse), global::TodoWorld.StreamServerEventsResponse.Parser, new[]{ "EventId", "Channel", "Selector", "Json", "Op", "Target", "CssSelector", "Meta", "UserId", "DisplayName", "ProfileUrl", "IsAuthenticated", "Channels", "CreatedAt", "Id", "UnRegisterUrl", "UpdateSubscriberUrl", "HeartbeatUrl", "HeartbeatIntervalMs", "IdleTimeoutMs", "ResponseStatus" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::TodoWorld.Todo), global::TodoWorld.Todo.Parser, new[]{ "Id", "Title", "Order", "Completed" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TodoWorld.UnAssignRoles), global::TodoWorld.UnAssignRoles.Parser, new[]{ "UserName", "Permissions", "Roles", "Meta" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::TodoWorld.UnAssignRolesResponse), global::TodoWorld.UnAssignRolesResponse.Parser, new[]{ "AllRoles", "AllPermissions", "Meta", "ResponseStatus" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::TodoWorld.UpdateTodo), global::TodoWorld.UpdateTodo.Parser, new[]{ "Id", "Title", "Order", "Completed" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class AssignRoles : pb::IMessage<AssignRoles> {
    private static readonly pb::MessageParser<AssignRoles> _parser = new pb::MessageParser<AssignRoles>(() => new AssignRoles());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AssignRoles> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TodoWorld.ServicesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssignRoles() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssignRoles(AssignRoles other) : this() {
      userName_ = other.userName_;
      permissions_ = other.permissions_.Clone();
      roles_ = other.roles_.Clone();
      meta_ = other.meta_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssignRoles Clone() {
      return new AssignRoles(this);
    }

    /// <summary>Field number for the "UserName" field.</summary>
    public const int UserNameFieldNumber = 1;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Permissions" field.</summary>
    public const int PermissionsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_permissions_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> permissions_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Permissions {
      get { return permissions_; }
    }

    /// <summary>Field number for the "Roles" field.</summary>
    public const int RolesFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_roles_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> roles_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Roles {
      get { return roles_; }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AssignRoles);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AssignRoles other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserName != other.UserName) return false;
      if(!permissions_.Equals(other.permissions_)) return false;
      if(!roles_.Equals(other.roles_)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      hash ^= permissions_.GetHashCode();
      hash ^= roles_.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserName);
      }
      permissions_.WriteTo(output, _repeated_permissions_codec);
      roles_.WriteTo(output, _repeated_roles_codec);
      meta_.WriteTo(output, _map_meta_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      size += permissions_.CalculateSize(_repeated_permissions_codec);
      size += roles_.CalculateSize(_repeated_roles_codec);
      size += meta_.CalculateSize(_map_meta_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AssignRoles other) {
      if (other == null) {
        return;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      permissions_.Add(other.permissions_);
      roles_.Add(other.roles_);
      meta_.Add(other.meta_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserName = input.ReadString();
            break;
          }
          case 18: {
            permissions_.AddEntriesFrom(input, _repeated_permissions_codec);
            break;
          }
          case 26: {
            roles_.AddEntriesFrom(input, _repeated_roles_codec);
            break;
          }
          case 34: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AssignRolesResponse : pb::IMessage<AssignRolesResponse> {
    private static readonly pb::MessageParser<AssignRolesResponse> _parser = new pb::MessageParser<AssignRolesResponse>(() => new AssignRolesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AssignRolesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TodoWorld.ServicesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssignRolesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssignRolesResponse(AssignRolesResponse other) : this() {
      allRoles_ = other.allRoles_.Clone();
      allPermissions_ = other.allPermissions_.Clone();
      meta_ = other.meta_.Clone();
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssignRolesResponse Clone() {
      return new AssignRolesResponse(this);
    }

    /// <summary>Field number for the "AllRoles" field.</summary>
    public const int AllRolesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_allRoles_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> allRoles_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AllRoles {
      get { return allRoles_; }
    }

    /// <summary>Field number for the "AllPermissions" field.</summary>
    public const int AllPermissionsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_allPermissions_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> allPermissions_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AllPermissions {
      get { return allPermissions_; }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 3;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 26);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 4;
    private global::TodoWorld.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TodoWorld.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AssignRolesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AssignRolesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!allRoles_.Equals(other.allRoles_)) return false;
      if(!allPermissions_.Equals(other.allPermissions_)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= allRoles_.GetHashCode();
      hash ^= allPermissions_.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      allRoles_.WriteTo(output, _repeated_allRoles_codec);
      allPermissions_.WriteTo(output, _repeated_allPermissions_codec);
      meta_.WriteTo(output, _map_meta_codec);
      if (responseStatus_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += allRoles_.CalculateSize(_repeated_allRoles_codec);
      size += allPermissions_.CalculateSize(_repeated_allPermissions_codec);
      size += meta_.CalculateSize(_map_meta_codec);
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AssignRolesResponse other) {
      if (other == null) {
        return;
      }
      allRoles_.Add(other.allRoles_);
      allPermissions_.Add(other.allPermissions_);
      meta_.Add(other.meta_);
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::TodoWorld.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            allRoles_.AddEntriesFrom(input, _repeated_allRoles_codec);
            break;
          }
          case 18: {
            allPermissions_.AddEntriesFrom(input, _repeated_allPermissions_codec);
            break;
          }
          case 26: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
          case 34: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::TodoWorld.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Authenticate : pb::IMessage<Authenticate> {
    private static readonly pb::MessageParser<Authenticate> _parser = new pb::MessageParser<Authenticate>(() => new Authenticate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Authenticate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TodoWorld.ServicesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Authenticate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Authenticate(Authenticate other) : this() {
      provider_ = other.provider_;
      state_ = other.state_;
      oauthToken_ = other.oauthToken_;
      oauthVerifier_ = other.oauthVerifier_;
      userName_ = other.userName_;
      password_ = other.password_;
      rememberMe_ = other.rememberMe_;
      continue_ = other.continue_;
      errorView_ = other.errorView_;
      nonce_ = other.nonce_;
      uri_ = other.uri_;
      response_ = other.response_;
      qop_ = other.qop_;
      nc_ = other.nc_;
      cnonce_ = other.cnonce_;
      useTokenCookie_ = other.useTokenCookie_;
      accessToken_ = other.accessToken_;
      accessTokenSecret_ = other.accessTokenSecret_;
      scope_ = other.scope_;
      meta_ = other.meta_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Authenticate Clone() {
      return new Authenticate(this);
    }

    /// <summary>Field number for the "provider" field.</summary>
    public const int ProviderFieldNumber = 1;
    private string provider_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Provider {
      get { return provider_; }
      set {
        provider_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "State" field.</summary>
    public const int StateFieldNumber = 2;
    private string state_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string State {
      get { return state_; }
      set {
        state_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "oauth_token" field.</summary>
    public const int OauthTokenFieldNumber = 3;
    private string oauthToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OauthToken {
      get { return oauthToken_; }
      set {
        oauthToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "oauth_verifier" field.</summary>
    public const int OauthVerifierFieldNumber = 4;
    private string oauthVerifier_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OauthVerifier {
      get { return oauthVerifier_; }
      set {
        oauthVerifier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UserName" field.</summary>
    public const int UserNameFieldNumber = 5;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Password" field.</summary>
    public const int PasswordFieldNumber = 6;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RememberMe" field.</summary>
    public const int RememberMeFieldNumber = 7;
    private bool rememberMe_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool RememberMe {
      get { return rememberMe_; }
      set {
        rememberMe_ = value;
      }
    }

    /// <summary>Field number for the "Continue" field.</summary>
    public const int ContinueFieldNumber = 8;
    private string continue_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Continue {
      get { return continue_; }
      set {
        continue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ErrorView" field.</summary>
    public const int ErrorViewFieldNumber = 9;
    private string errorView_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorView {
      get { return errorView_; }
      set {
        errorView_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nonce" field.</summary>
    public const int NonceFieldNumber = 10;
    private string nonce_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nonce {
      get { return nonce_; }
      set {
        nonce_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "uri" field.</summary>
    public const int UriFieldNumber = 11;
    private string uri_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uri {
      get { return uri_; }
      set {
        uri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 12;
    private string response_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Response {
      get { return response_; }
      set {
        response_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "qop" field.</summary>
    public const int QopFieldNumber = 13;
    private string qop_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Qop {
      get { return qop_; }
      set {
        qop_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nc" field.</summary>
    public const int NcFieldNumber = 14;
    private string nc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nc {
      get { return nc_; }
      set {
        nc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cnonce" field.</summary>
    public const int CnonceFieldNumber = 15;
    private string cnonce_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cnonce {
      get { return cnonce_; }
      set {
        cnonce_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UseTokenCookie" field.</summary>
    public const int UseTokenCookieFieldNumber = 16;
    private bool useTokenCookie_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UseTokenCookie {
      get { return useTokenCookie_; }
      set {
        useTokenCookie_ = value;
      }
    }

    /// <summary>Field number for the "AccessToken" field.</summary>
    public const int AccessTokenFieldNumber = 17;
    private string accessToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccessToken {
      get { return accessToken_; }
      set {
        accessToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AccessTokenSecret" field.</summary>
    public const int AccessTokenSecretFieldNumber = 18;
    private string accessTokenSecret_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccessTokenSecret {
      get { return accessTokenSecret_; }
      set {
        accessTokenSecret_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "scope" field.</summary>
    public const int ScopeFieldNumber = 19;
    private string scope_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Scope {
      get { return scope_; }
      set {
        scope_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 20;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 162);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Authenticate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Authenticate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Provider != other.Provider) return false;
      if (State != other.State) return false;
      if (OauthToken != other.OauthToken) return false;
      if (OauthVerifier != other.OauthVerifier) return false;
      if (UserName != other.UserName) return false;
      if (Password != other.Password) return false;
      if (RememberMe != other.RememberMe) return false;
      if (Continue != other.Continue) return false;
      if (ErrorView != other.ErrorView) return false;
      if (Nonce != other.Nonce) return false;
      if (Uri != other.Uri) return false;
      if (Response != other.Response) return false;
      if (Qop != other.Qop) return false;
      if (Nc != other.Nc) return false;
      if (Cnonce != other.Cnonce) return false;
      if (UseTokenCookie != other.UseTokenCookie) return false;
      if (AccessToken != other.AccessToken) return false;
      if (AccessTokenSecret != other.AccessTokenSecret) return false;
      if (Scope != other.Scope) return false;
      if (!Meta.Equals(other.Meta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Provider.Length != 0) hash ^= Provider.GetHashCode();
      if (State.Length != 0) hash ^= State.GetHashCode();
      if (OauthToken.Length != 0) hash ^= OauthToken.GetHashCode();
      if (OauthVerifier.Length != 0) hash ^= OauthVerifier.GetHashCode();
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (RememberMe != false) hash ^= RememberMe.GetHashCode();
      if (Continue.Length != 0) hash ^= Continue.GetHashCode();
      if (ErrorView.Length != 0) hash ^= ErrorView.GetHashCode();
      if (Nonce.Length != 0) hash ^= Nonce.GetHashCode();
      if (Uri.Length != 0) hash ^= Uri.GetHashCode();
      if (Response.Length != 0) hash ^= Response.GetHashCode();
      if (Qop.Length != 0) hash ^= Qop.GetHashCode();
      if (Nc.Length != 0) hash ^= Nc.GetHashCode();
      if (Cnonce.Length != 0) hash ^= Cnonce.GetHashCode();
      if (UseTokenCookie != false) hash ^= UseTokenCookie.GetHashCode();
      if (AccessToken.Length != 0) hash ^= AccessToken.GetHashCode();
      if (AccessTokenSecret.Length != 0) hash ^= AccessTokenSecret.GetHashCode();
      if (Scope.Length != 0) hash ^= Scope.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Provider.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Provider);
      }
      if (State.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(State);
      }
      if (OauthToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OauthToken);
      }
      if (OauthVerifier.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OauthVerifier);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(UserName);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Password);
      }
      if (RememberMe != false) {
        output.WriteRawTag(56);
        output.WriteBool(RememberMe);
      }
      if (Continue.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Continue);
      }
      if (ErrorView.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ErrorView);
      }
      if (Nonce.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Nonce);
      }
      if (Uri.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Uri);
      }
      if (Response.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Response);
      }
      if (Qop.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Qop);
      }
      if (Nc.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(Nc);
      }
      if (Cnonce.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Cnonce);
      }
      if (UseTokenCookie != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(UseTokenCookie);
      }
      if (AccessToken.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(AccessToken);
      }
      if (AccessTokenSecret.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(AccessTokenSecret);
      }
      if (Scope.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(Scope);
      }
      meta_.WriteTo(output, _map_meta_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Provider.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Provider);
      }
      if (State.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(State);
      }
      if (OauthToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OauthToken);
      }
      if (OauthVerifier.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OauthVerifier);
      }
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (RememberMe != false) {
        size += 1 + 1;
      }
      if (Continue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Continue);
      }
      if (ErrorView.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorView);
      }
      if (Nonce.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nonce);
      }
      if (Uri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uri);
      }
      if (Response.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Response);
      }
      if (Qop.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Qop);
      }
      if (Nc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nc);
      }
      if (Cnonce.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cnonce);
      }
      if (UseTokenCookie != false) {
        size += 2 + 1;
      }
      if (AccessToken.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AccessToken);
      }
      if (AccessTokenSecret.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AccessTokenSecret);
      }
      if (Scope.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Scope);
      }
      size += meta_.CalculateSize(_map_meta_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Authenticate other) {
      if (other == null) {
        return;
      }
      if (other.Provider.Length != 0) {
        Provider = other.Provider;
      }
      if (other.State.Length != 0) {
        State = other.State;
      }
      if (other.OauthToken.Length != 0) {
        OauthToken = other.OauthToken;
      }
      if (other.OauthVerifier.Length != 0) {
        OauthVerifier = other.OauthVerifier;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.RememberMe != false) {
        RememberMe = other.RememberMe;
      }
      if (other.Continue.Length != 0) {
        Continue = other.Continue;
      }
      if (other.ErrorView.Length != 0) {
        ErrorView = other.ErrorView;
      }
      if (other.Nonce.Length != 0) {
        Nonce = other.Nonce;
      }
      if (other.Uri.Length != 0) {
        Uri = other.Uri;
      }
      if (other.Response.Length != 0) {
        Response = other.Response;
      }
      if (other.Qop.Length != 0) {
        Qop = other.Qop;
      }
      if (other.Nc.Length != 0) {
        Nc = other.Nc;
      }
      if (other.Cnonce.Length != 0) {
        Cnonce = other.Cnonce;
      }
      if (other.UseTokenCookie != false) {
        UseTokenCookie = other.UseTokenCookie;
      }
      if (other.AccessToken.Length != 0) {
        AccessToken = other.AccessToken;
      }
      if (other.AccessTokenSecret.Length != 0) {
        AccessTokenSecret = other.AccessTokenSecret;
      }
      if (other.Scope.Length != 0) {
        Scope = other.Scope;
      }
      meta_.Add(other.meta_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Provider = input.ReadString();
            break;
          }
          case 18: {
            State = input.ReadString();
            break;
          }
          case 26: {
            OauthToken = input.ReadString();
            break;
          }
          case 34: {
            OauthVerifier = input.ReadString();
            break;
          }
          case 42: {
            UserName = input.ReadString();
            break;
          }
          case 50: {
            Password = input.ReadString();
            break;
          }
          case 56: {
            RememberMe = input.ReadBool();
            break;
          }
          case 66: {
            Continue = input.ReadString();
            break;
          }
          case 74: {
            ErrorView = input.ReadString();
            break;
          }
          case 82: {
            Nonce = input.ReadString();
            break;
          }
          case 90: {
            Uri = input.ReadString();
            break;
          }
          case 98: {
            Response = input.ReadString();
            break;
          }
          case 106: {
            Qop = input.ReadString();
            break;
          }
          case 114: {
            Nc = input.ReadString();
            break;
          }
          case 122: {
            Cnonce = input.ReadString();
            break;
          }
          case 128: {
            UseTokenCookie = input.ReadBool();
            break;
          }
          case 138: {
            AccessToken = input.ReadString();
            break;
          }
          case 146: {
            AccessTokenSecret = input.ReadString();
            break;
          }
          case 154: {
            Scope = input.ReadString();
            break;
          }
          case 162: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AuthenticateResponse : pb::IMessage<AuthenticateResponse> {
    private static readonly pb::MessageParser<AuthenticateResponse> _parser = new pb::MessageParser<AuthenticateResponse>(() => new AuthenticateResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AuthenticateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TodoWorld.ServicesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthenticateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthenticateResponse(AuthenticateResponse other) : this() {
      userId_ = other.userId_;
      sessionId_ = other.sessionId_;
      userName_ = other.userName_;
      displayName_ = other.displayName_;
      referrerUrl_ = other.referrerUrl_;
      bearerToken_ = other.bearerToken_;
      refreshToken_ = other.refreshToken_;
      profileUrl_ = other.profileUrl_;
      roles_ = other.roles_.Clone();
      permissions_ = other.permissions_.Clone();
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      meta_ = other.meta_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthenticateResponse Clone() {
      return new AuthenticateResponse(this);
    }

    /// <summary>Field number for the "UserId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SessionId" field.</summary>
    public const int SessionIdFieldNumber = 2;
    private string sessionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UserName" field.</summary>
    public const int UserNameFieldNumber = 3;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DisplayName" field.</summary>
    public const int DisplayNameFieldNumber = 4;
    private string displayName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ReferrerUrl" field.</summary>
    public const int ReferrerUrlFieldNumber = 5;
    private string referrerUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReferrerUrl {
      get { return referrerUrl_; }
      set {
        referrerUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "BearerToken" field.</summary>
    public const int BearerTokenFieldNumber = 6;
    private string bearerToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BearerToken {
      get { return bearerToken_; }
      set {
        bearerToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RefreshToken" field.</summary>
    public const int RefreshTokenFieldNumber = 7;
    private string refreshToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RefreshToken {
      get { return refreshToken_; }
      set {
        refreshToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ProfileUrl" field.</summary>
    public const int ProfileUrlFieldNumber = 8;
    private string profileUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProfileUrl {
      get { return profileUrl_; }
      set {
        profileUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Roles" field.</summary>
    public const int RolesFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _repeated_roles_codec
        = pb::FieldCodec.ForString(74);
    private readonly pbc::RepeatedField<string> roles_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Roles {
      get { return roles_; }
    }

    /// <summary>Field number for the "Permissions" field.</summary>
    public const int PermissionsFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _repeated_permissions_codec
        = pb::FieldCodec.ForString(82);
    private readonly pbc::RepeatedField<string> permissions_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Permissions {
      get { return permissions_; }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 11;
    private global::TodoWorld.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TodoWorld.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 12;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 98);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AuthenticateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AuthenticateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (SessionId != other.SessionId) return false;
      if (UserName != other.UserName) return false;
      if (DisplayName != other.DisplayName) return false;
      if (ReferrerUrl != other.ReferrerUrl) return false;
      if (BearerToken != other.BearerToken) return false;
      if (RefreshToken != other.RefreshToken) return false;
      if (ProfileUrl != other.ProfileUrl) return false;
      if(!roles_.Equals(other.roles_)) return false;
      if(!permissions_.Equals(other.permissions_)) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (ReferrerUrl.Length != 0) hash ^= ReferrerUrl.GetHashCode();
      if (BearerToken.Length != 0) hash ^= BearerToken.GetHashCode();
      if (RefreshToken.Length != 0) hash ^= RefreshToken.GetHashCode();
      if (ProfileUrl.Length != 0) hash ^= ProfileUrl.GetHashCode();
      hash ^= roles_.GetHashCode();
      hash ^= permissions_.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (SessionId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SessionId);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UserName);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DisplayName);
      }
      if (ReferrerUrl.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ReferrerUrl);
      }
      if (BearerToken.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(BearerToken);
      }
      if (RefreshToken.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(RefreshToken);
      }
      if (ProfileUrl.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ProfileUrl);
      }
      roles_.WriteTo(output, _repeated_roles_codec);
      permissions_.WriteTo(output, _repeated_permissions_codec);
      if (responseStatus_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(ResponseStatus);
      }
      meta_.WriteTo(output, _map_meta_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (SessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
      }
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (ReferrerUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReferrerUrl);
      }
      if (BearerToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BearerToken);
      }
      if (RefreshToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RefreshToken);
      }
      if (ProfileUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProfileUrl);
      }
      size += roles_.CalculateSize(_repeated_roles_codec);
      size += permissions_.CalculateSize(_repeated_permissions_codec);
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      size += meta_.CalculateSize(_map_meta_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AuthenticateResponse other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.SessionId.Length != 0) {
        SessionId = other.SessionId;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.ReferrerUrl.Length != 0) {
        ReferrerUrl = other.ReferrerUrl;
      }
      if (other.BearerToken.Length != 0) {
        BearerToken = other.BearerToken;
      }
      if (other.RefreshToken.Length != 0) {
        RefreshToken = other.RefreshToken;
      }
      if (other.ProfileUrl.Length != 0) {
        ProfileUrl = other.ProfileUrl;
      }
      roles_.Add(other.roles_);
      permissions_.Add(other.permissions_);
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::TodoWorld.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      meta_.Add(other.meta_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            SessionId = input.ReadString();
            break;
          }
          case 26: {
            UserName = input.ReadString();
            break;
          }
          case 34: {
            DisplayName = input.ReadString();
            break;
          }
          case 42: {
            ReferrerUrl = input.ReadString();
            break;
          }
          case 50: {
            BearerToken = input.ReadString();
            break;
          }
          case 58: {
            RefreshToken = input.ReadString();
            break;
          }
          case 66: {
            ProfileUrl = input.ReadString();
            break;
          }
          case 74: {
            roles_.AddEntriesFrom(input, _repeated_roles_codec);
            break;
          }
          case 82: {
            permissions_.AddEntriesFrom(input, _repeated_permissions_codec);
            break;
          }
          case 90: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::TodoWorld.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
          case 98: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ConvertSessionToToken : pb::IMessage<ConvertSessionToToken> {
    private static readonly pb::MessageParser<ConvertSessionToToken> _parser = new pb::MessageParser<ConvertSessionToToken>(() => new ConvertSessionToToken());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConvertSessionToToken> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TodoWorld.ServicesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConvertSessionToToken() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConvertSessionToToken(ConvertSessionToToken other) : this() {
      preserveSession_ = other.preserveSession_;
      meta_ = other.meta_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConvertSessionToToken Clone() {
      return new ConvertSessionToToken(this);
    }

    /// <summary>Field number for the "PreserveSession" field.</summary>
    public const int PreserveSessionFieldNumber = 1;
    private bool preserveSession_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool PreserveSession {
      get { return preserveSession_; }
      set {
        preserveSession_ = value;
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 2;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 18);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConvertSessionToToken);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConvertSessionToToken other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PreserveSession != other.PreserveSession) return false;
      if (!Meta.Equals(other.Meta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PreserveSession != false) hash ^= PreserveSession.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PreserveSession != false) {
        output.WriteRawTag(8);
        output.WriteBool(PreserveSession);
      }
      meta_.WriteTo(output, _map_meta_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PreserveSession != false) {
        size += 1 + 1;
      }
      size += meta_.CalculateSize(_map_meta_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConvertSessionToToken other) {
      if (other == null) {
        return;
      }
      if (other.PreserveSession != false) {
        PreserveSession = other.PreserveSession;
      }
      meta_.Add(other.meta_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PreserveSession = input.ReadBool();
            break;
          }
          case 18: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ConvertSessionToTokenResponse : pb::IMessage<ConvertSessionToTokenResponse> {
    private static readonly pb::MessageParser<ConvertSessionToTokenResponse> _parser = new pb::MessageParser<ConvertSessionToTokenResponse>(() => new ConvertSessionToTokenResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConvertSessionToTokenResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TodoWorld.ServicesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConvertSessionToTokenResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConvertSessionToTokenResponse(ConvertSessionToTokenResponse other) : this() {
      meta_ = other.meta_.Clone();
      accessToken_ = other.accessToken_;
      refreshToken_ = other.refreshToken_;
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConvertSessionToTokenResponse Clone() {
      return new ConvertSessionToTokenResponse(this);
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 1;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 10);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    /// <summary>Field number for the "AccessToken" field.</summary>
    public const int AccessTokenFieldNumber = 2;
    private string accessToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccessToken {
      get { return accessToken_; }
      set {
        accessToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RefreshToken" field.</summary>
    public const int RefreshTokenFieldNumber = 3;
    private string refreshToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RefreshToken {
      get { return refreshToken_; }
      set {
        refreshToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 4;
    private global::TodoWorld.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TodoWorld.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConvertSessionToTokenResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConvertSessionToTokenResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Meta.Equals(other.Meta)) return false;
      if (AccessToken != other.AccessToken) return false;
      if (RefreshToken != other.RefreshToken) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Meta.GetHashCode();
      if (AccessToken.Length != 0) hash ^= AccessToken.GetHashCode();
      if (RefreshToken.Length != 0) hash ^= RefreshToken.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      meta_.WriteTo(output, _map_meta_codec);
      if (AccessToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AccessToken);
      }
      if (RefreshToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RefreshToken);
      }
      if (responseStatus_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += meta_.CalculateSize(_map_meta_codec);
      if (AccessToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessToken);
      }
      if (RefreshToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RefreshToken);
      }
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConvertSessionToTokenResponse other) {
      if (other == null) {
        return;
      }
      meta_.Add(other.meta_);
      if (other.AccessToken.Length != 0) {
        AccessToken = other.AccessToken;
      }
      if (other.RefreshToken.Length != 0) {
        RefreshToken = other.RefreshToken;
      }
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::TodoWorld.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
          case 18: {
            AccessToken = input.ReadString();
            break;
          }
          case 26: {
            RefreshToken = input.ReadString();
            break;
          }
          case 34: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::TodoWorld.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateTodo : pb::IMessage<CreateTodo> {
    private static readonly pb::MessageParser<CreateTodo> _parser = new pb::MessageParser<CreateTodo>(() => new CreateTodo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateTodo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TodoWorld.ServicesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTodo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTodo(CreateTodo other) : this() {
      title_ = other.title_;
      order_ = other.order_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTodo Clone() {
      return new CreateTodo(this);
    }

    /// <summary>Field number for the "Title" field.</summary>
    public const int TitleFieldNumber = 1;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Order" field.</summary>
    public const int OrderFieldNumber = 2;
    private int order_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Order {
      get { return order_; }
      set {
        order_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateTodo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateTodo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Title != other.Title) return false;
      if (Order != other.Order) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Order != 0) hash ^= Order.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Title.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Title);
      }
      if (Order != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Order);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Order != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Order);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateTodo other) {
      if (other == null) {
        return;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Order != 0) {
        Order = other.Order;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Title = input.ReadString();
            break;
          }
          case 16: {
            Order = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateTodoResponse : pb::IMessage<CreateTodoResponse> {
    private static readonly pb::MessageParser<CreateTodoResponse> _parser = new pb::MessageParser<CreateTodoResponse>(() => new CreateTodoResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateTodoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TodoWorld.ServicesReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTodoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTodoResponse(CreateTodoResponse other) : this() {
      result_ = other.result_ != null ? other.result_.Clone() : null;
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTodoResponse Clone() {
      return new CreateTodoResponse(this);
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::TodoWorld.Todo result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TodoWorld.Todo Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 2;
    private global::TodoWorld.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TodoWorld.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateTodoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateTodoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Result, other.Result)) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (result_ != null) hash ^= Result.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (result_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Result);
      }
      if (responseStatus_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateTodoResponse other) {
      if (other == null) {
        return;
      }
      if (other.result_ != null) {
        if (result_ == null) {
          Result = new global::TodoWorld.Todo();
        }
        Result.MergeFrom(other.Result);
      }
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::TodoWorld.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (result_ == null) {
              Result = new global::TodoWorld.Todo();
            }
            input.ReadMessage(Result);
            break;
          }
          case 18: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::TodoWorld.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteTodo : pb::IMessage<DeleteTodo> {
    private static readonly pb::MessageParser<DeleteTodo> _parser = new pb::MessageParser<DeleteTodo>(() => new DeleteTodo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteTodo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TodoWorld.ServicesReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteTodo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteTodo(DeleteTodo other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteTodo Clone() {
      return new DeleteTodo(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteTodo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteTodo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteTodo other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteTodos : pb::IMessage<DeleteTodos> {
    private static readonly pb::MessageParser<DeleteTodos> _parser = new pb::MessageParser<DeleteTodos>(() => new DeleteTodos());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteTodos> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TodoWorld.ServicesReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteTodos() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteTodos(DeleteTodos other) : this() {
      ids_ = other.ids_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteTodos Clone() {
      return new DeleteTodos(this);
    }

    /// <summary>Field number for the "Ids" field.</summary>
    public const int IdsFieldNumber = 1;
    private static readonly pb::FieldCodec<long> _repeated_ids_codec
        = pb::FieldCodec.ForInt64(8);
    private readonly pbc::RepeatedField<long> ids_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> Ids {
      get { return ids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteTodos);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteTodos other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!ids_.Equals(other.ids_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ids_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      ids_.WriteTo(output, _repeated_ids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += ids_.CalculateSize(_repeated_ids_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteTodos other) {
      if (other == null) {
        return;
      }
      ids_.Add(other.ids_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            ids_.AddEntriesFrom(input, _repeated_ids_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class EmptyResponse : pb::IMessage<EmptyResponse> {
    private static readonly pb::MessageParser<EmptyResponse> _parser = new pb::MessageParser<EmptyResponse>(() => new EmptyResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EmptyResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TodoWorld.ServicesReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmptyResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmptyResponse(EmptyResponse other) : this() {
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmptyResponse Clone() {
      return new EmptyResponse(this);
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 1;
    private global::TodoWorld.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TodoWorld.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EmptyResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EmptyResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (responseStatus_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EmptyResponse other) {
      if (other == null) {
        return;
      }
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::TodoWorld.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::TodoWorld.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class FileContent : pb::IMessage<FileContent> {
    private static readonly pb::MessageParser<FileContent> _parser = new pb::MessageParser<FileContent>(() => new FileContent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FileContent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TodoWorld.ServicesReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileContent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileContent(FileContent other) : this() {
      name_ = other.name_;
      type_ = other.type_;
      length_ = other.length_;
      body_ = other.body_;
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileContent Clone() {
      return new FileContent(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 2;
    private string type_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Length" field.</summary>
    public const int LengthFieldNumber = 3;
    private int length_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Length {
      get { return length_; }
      set {
        length_ = value;
      }
    }

    /// <summary>Field number for the "Body" field.</summary>
    public const int BodyFieldNumber = 4;
    private pb::ByteString body_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Body {
      get { return body_; }
      set {
        body_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 5;
    private global::TodoWorld.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TodoWorld.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FileContent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FileContent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Type != other.Type) return false;
      if (Length != other.Length) return false;
      if (Body != other.Body) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (Length != 0) hash ^= Length.GetHashCode();
      if (Body.Length != 0) hash ^= Body.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Type);
      }
      if (Length != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Length);
      }
      if (Body.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Body);
      }
      if (responseStatus_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Length);
      }
      if (Body.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Body);
      }
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FileContent other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.Length != 0) {
        Length = other.Length;
      }
      if (other.Body.Length != 0) {
        Body = other.Body;
      }
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::TodoWorld.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Type = input.ReadString();
            break;
          }
          case 24: {
            Length = input.ReadInt32();
            break;
          }
          case 34: {
            Body = input.ReadBytes();
            break;
          }
          case 42: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::TodoWorld.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAccessToken : pb::IMessage<GetAccessToken> {
    private static readonly pb::MessageParser<GetAccessToken> _parser = new pb::MessageParser<GetAccessToken>(() => new GetAccessToken());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAccessToken> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TodoWorld.ServicesReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccessToken() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccessToken(GetAccessToken other) : this() {
      refreshToken_ = other.refreshToken_;
      useTokenCookie_ = other.useTokenCookie_;
      meta_ = other.meta_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccessToken Clone() {
      return new GetAccessToken(this);
    }

    /// <summary>Field number for the "RefreshToken" field.</summary>
    public const int RefreshTokenFieldNumber = 1;
    private string refreshToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RefreshToken {
      get { return refreshToken_; }
      set {
        refreshToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UseTokenCookie" field.</summary>
    public const int UseTokenCookieFieldNumber = 2;
    private bool useTokenCookie_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UseTokenCookie {
      get { return useTokenCookie_; }
      set {
        useTokenCookie_ = value;
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 3;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 26);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAccessToken);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAccessToken other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RefreshToken != other.RefreshToken) return false;
      if (UseTokenCookie != other.UseTokenCookie) return false;
      if (!Meta.Equals(other.Meta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RefreshToken.Length != 0) hash ^= RefreshToken.GetHashCode();
      if (UseTokenCookie != false) hash ^= UseTokenCookie.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RefreshToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RefreshToken);
      }
      if (UseTokenCookie != false) {
        output.WriteRawTag(16);
        output.WriteBool(UseTokenCookie);
      }
      meta_.WriteTo(output, _map_meta_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RefreshToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RefreshToken);
      }
      if (UseTokenCookie != false) {
        size += 1 + 1;
      }
      size += meta_.CalculateSize(_map_meta_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAccessToken other) {
      if (other == null) {
        return;
      }
      if (other.RefreshToken.Length != 0) {
        RefreshToken = other.RefreshToken;
      }
      if (other.UseTokenCookie != false) {
        UseTokenCookie = other.UseTokenCookie;
      }
      meta_.Add(other.meta_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RefreshToken = input.ReadString();
            break;
          }
          case 16: {
            UseTokenCookie = input.ReadBool();
            break;
          }
          case 26: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAccessTokenResponse : pb::IMessage<GetAccessTokenResponse> {
    private static readonly pb::MessageParser<GetAccessTokenResponse> _parser = new pb::MessageParser<GetAccessTokenResponse>(() => new GetAccessTokenResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAccessTokenResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TodoWorld.ServicesReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccessTokenResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccessTokenResponse(GetAccessTokenResponse other) : this() {
      accessToken_ = other.accessToken_;
      meta_ = other.meta_.Clone();
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccessTokenResponse Clone() {
      return new GetAccessTokenResponse(this);
    }

    /// <summary>Field number for the "AccessToken" field.</summary>
    public const int AccessTokenFieldNumber = 1;
    private string accessToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccessToken {
      get { return accessToken_; }
      set {
        accessToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 2;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 18);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 3;
    private global::TodoWorld.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TodoWorld.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAccessTokenResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAccessTokenResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccessToken != other.AccessToken) return false;
      if (!Meta.Equals(other.Meta)) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccessToken.Length != 0) hash ^= AccessToken.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccessToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccessToken);
      }
      meta_.WriteTo(output, _map_meta_codec);
      if (responseStatus_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccessToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessToken);
      }
      size += meta_.CalculateSize(_map_meta_codec);
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAccessTokenResponse other) {
      if (other == null) {
        return;
      }
      if (other.AccessToken.Length != 0) {
        AccessToken = other.AccessToken;
      }
      meta_.Add(other.meta_);
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::TodoWorld.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccessToken = input.ReadString();
            break;
          }
          case 18: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
          case 26: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::TodoWorld.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetTodo : pb::IMessage<GetTodo> {
    private static readonly pb::MessageParser<GetTodo> _parser = new pb::MessageParser<GetTodo>(() => new GetTodo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTodo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TodoWorld.ServicesReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTodo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTodo(GetTodo other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTodo Clone() {
      return new GetTodo(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTodo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTodo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTodo other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetTodoResponse : pb::IMessage<GetTodoResponse> {
    private static readonly pb::MessageParser<GetTodoResponse> _parser = new pb::MessageParser<GetTodoResponse>(() => new GetTodoResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTodoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TodoWorld.ServicesReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTodoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTodoResponse(GetTodoResponse other) : this() {
      result_ = other.result_ != null ? other.result_.Clone() : null;
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTodoResponse Clone() {
      return new GetTodoResponse(this);
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::TodoWorld.Todo result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TodoWorld.Todo Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 2;
    private global::TodoWorld.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TodoWorld.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTodoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTodoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Result, other.Result)) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (result_ != null) hash ^= Result.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (result_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Result);
      }
      if (responseStatus_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTodoResponse other) {
      if (other == null) {
        return;
      }
      if (other.result_ != null) {
        if (result_ == null) {
          Result = new global::TodoWorld.Todo();
        }
        Result.MergeFrom(other.Result);
      }
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::TodoWorld.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (result_ == null) {
              Result = new global::TodoWorld.Todo();
            }
            input.ReadMessage(Result);
            break;
          }
          case 18: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::TodoWorld.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetTodos : pb::IMessage<GetTodos> {
    private static readonly pb::MessageParser<GetTodos> _parser = new pb::MessageParser<GetTodos>(() => new GetTodos());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTodos> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TodoWorld.ServicesReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTodos() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTodos(GetTodos other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTodos Clone() {
      return new GetTodos(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTodos);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTodos other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTodos other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetTodosResponse : pb::IMessage<GetTodosResponse> {
    private static readonly pb::MessageParser<GetTodosResponse> _parser = new pb::MessageParser<GetTodosResponse>(() => new GetTodosResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTodosResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TodoWorld.ServicesReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTodosResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTodosResponse(GetTodosResponse other) : this() {
      results_ = other.results_.Clone();
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTodosResponse Clone() {
      return new GetTodosResponse(this);
    }

    /// <summary>Field number for the "Results" field.</summary>
    public const int ResultsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::TodoWorld.Todo> _repeated_results_codec
        = pb::FieldCodec.ForMessage(10, global::TodoWorld.Todo.Parser);
    private readonly pbc::RepeatedField<global::TodoWorld.Todo> results_ = new pbc::RepeatedField<global::TodoWorld.Todo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TodoWorld.Todo> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 2;
    private global::TodoWorld.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TodoWorld.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTodosResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTodosResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!results_.Equals(other.results_)) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= results_.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      results_.WriteTo(output, _repeated_results_codec);
      if (responseStatus_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += results_.CalculateSize(_repeated_results_codec);
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTodosResponse other) {
      if (other == null) {
        return;
      }
      results_.Add(other.results_);
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::TodoWorld.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 18: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::TodoWorld.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Hello : pb::IMessage<Hello> {
    private static readonly pb::MessageParser<Hello> _parser = new pb::MessageParser<Hello>(() => new Hello());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Hello> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TodoWorld.ServicesReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hello() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hello(Hello other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hello Clone() {
      return new Hello(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Hello);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Hello other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Hello other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HelloResponse : pb::IMessage<HelloResponse> {
    private static readonly pb::MessageParser<HelloResponse> _parser = new pb::MessageParser<HelloResponse>(() => new HelloResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HelloResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TodoWorld.ServicesReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloResponse(HelloResponse other) : this() {
      result_ = other.result_;
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloResponse Clone() {
      return new HelloResponse(this);
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 1;
    private string result_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Result {
      get { return result_; }
      set {
        result_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 2;
    private global::TodoWorld.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TodoWorld.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HelloResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HelloResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result.Length != 0) hash ^= Result.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Result);
      }
      if (responseStatus_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Result);
      }
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HelloResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result.Length != 0) {
        Result = other.Result;
      }
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::TodoWorld.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Result = input.ReadString();
            break;
          }
          case 18: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::TodoWorld.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class HelloSecure : pb::IMessage<HelloSecure> {
    private static readonly pb::MessageParser<HelloSecure> _parser = new pb::MessageParser<HelloSecure>(() => new HelloSecure());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HelloSecure> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TodoWorld.ServicesReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloSecure() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloSecure(HelloSecure other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloSecure Clone() {
      return new HelloSecure(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HelloSecure);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HelloSecure other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HelloSecure other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Register : pb::IMessage<Register> {
    private static readonly pb::MessageParser<Register> _parser = new pb::MessageParser<Register>(() => new Register());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Register> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TodoWorld.ServicesReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Register() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Register(Register other) : this() {
      userName_ = other.userName_;
      firstName_ = other.firstName_;
      lastName_ = other.lastName_;
      displayName_ = other.displayName_;
      email_ = other.email_;
      password_ = other.password_;
      confirmPassword_ = other.confirmPassword_;
      autoLogin_ = other.autoLogin_;
      continue_ = other.continue_;
      errorView_ = other.errorView_;
      meta_ = other.meta_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Register Clone() {
      return new Register(this);
    }

    /// <summary>Field number for the "UserName" field.</summary>
    public const int UserNameFieldNumber = 1;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FirstName" field.</summary>
    public const int FirstNameFieldNumber = 2;
    private string firstName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirstName {
      get { return firstName_; }
      set {
        firstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LastName" field.</summary>
    public const int LastNameFieldNumber = 3;
    private string lastName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastName {
      get { return lastName_; }
      set {
        lastName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DisplayName" field.</summary>
    public const int DisplayNameFieldNumber = 4;
    private string displayName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Email" field.</summary>
    public const int EmailFieldNumber = 5;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Password" field.</summary>
    public const int PasswordFieldNumber = 6;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConfirmPassword" field.</summary>
    public const int ConfirmPasswordFieldNumber = 7;
    private string confirmPassword_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConfirmPassword {
      get { return confirmPassword_; }
      set {
        confirmPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AutoLogin" field.</summary>
    public const int AutoLoginFieldNumber = 8;
    private bool autoLogin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AutoLogin {
      get { return autoLogin_; }
      set {
        autoLogin_ = value;
      }
    }

    /// <summary>Field number for the "Continue" field.</summary>
    public const int ContinueFieldNumber = 9;
    private string continue_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Continue {
      get { return continue_; }
      set {
        continue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ErrorView" field.</summary>
    public const int ErrorViewFieldNumber = 10;
    private string errorView_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorView {
      get { return errorView_; }
      set {
        errorView_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 11;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 90);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Register);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Register other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserName != other.UserName) return false;
      if (FirstName != other.FirstName) return false;
      if (LastName != other.LastName) return false;
      if (DisplayName != other.DisplayName) return false;
      if (Email != other.Email) return false;
      if (Password != other.Password) return false;
      if (ConfirmPassword != other.ConfirmPassword) return false;
      if (AutoLogin != other.AutoLogin) return false;
      if (Continue != other.Continue) return false;
      if (ErrorView != other.ErrorView) return false;
      if (!Meta.Equals(other.Meta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (FirstName.Length != 0) hash ^= FirstName.GetHashCode();
      if (LastName.Length != 0) hash ^= LastName.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (ConfirmPassword.Length != 0) hash ^= ConfirmPassword.GetHashCode();
      if (AutoLogin != false) hash ^= AutoLogin.GetHashCode();
      if (Continue.Length != 0) hash ^= Continue.GetHashCode();
      if (ErrorView.Length != 0) hash ^= ErrorView.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserName);
      }
      if (FirstName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FirstName);
      }
      if (LastName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LastName);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DisplayName);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Email);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Password);
      }
      if (ConfirmPassword.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ConfirmPassword);
      }
      if (AutoLogin != false) {
        output.WriteRawTag(64);
        output.WriteBool(AutoLogin);
      }
      if (Continue.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Continue);
      }
      if (ErrorView.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ErrorView);
      }
      meta_.WriteTo(output, _map_meta_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (FirstName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstName);
      }
      if (LastName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastName);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (ConfirmPassword.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConfirmPassword);
      }
      if (AutoLogin != false) {
        size += 1 + 1;
      }
      if (Continue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Continue);
      }
      if (ErrorView.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorView);
      }
      size += meta_.CalculateSize(_map_meta_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Register other) {
      if (other == null) {
        return;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.FirstName.Length != 0) {
        FirstName = other.FirstName;
      }
      if (other.LastName.Length != 0) {
        LastName = other.LastName;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.ConfirmPassword.Length != 0) {
        ConfirmPassword = other.ConfirmPassword;
      }
      if (other.AutoLogin != false) {
        AutoLogin = other.AutoLogin;
      }
      if (other.Continue.Length != 0) {
        Continue = other.Continue;
      }
      if (other.ErrorView.Length != 0) {
        ErrorView = other.ErrorView;
      }
      meta_.Add(other.meta_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserName = input.ReadString();
            break;
          }
          case 18: {
            FirstName = input.ReadString();
            break;
          }
          case 26: {
            LastName = input.ReadString();
            break;
          }
          case 34: {
            DisplayName = input.ReadString();
            break;
          }
          case 42: {
            Email = input.ReadString();
            break;
          }
          case 50: {
            Password = input.ReadString();
            break;
          }
          case 58: {
            ConfirmPassword = input.ReadString();
            break;
          }
          case 64: {
            AutoLogin = input.ReadBool();
            break;
          }
          case 74: {
            Continue = input.ReadString();
            break;
          }
          case 82: {
            ErrorView = input.ReadString();
            break;
          }
          case 90: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RegisterResponse : pb::IMessage<RegisterResponse> {
    private static readonly pb::MessageParser<RegisterResponse> _parser = new pb::MessageParser<RegisterResponse>(() => new RegisterResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegisterResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TodoWorld.ServicesReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterResponse(RegisterResponse other) : this() {
      userId_ = other.userId_;
      sessionId_ = other.sessionId_;
      userName_ = other.userName_;
      referrerUrl_ = other.referrerUrl_;
      bearerToken_ = other.bearerToken_;
      refreshToken_ = other.refreshToken_;
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      meta_ = other.meta_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterResponse Clone() {
      return new RegisterResponse(this);
    }

    /// <summary>Field number for the "UserId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SessionId" field.</summary>
    public const int SessionIdFieldNumber = 2;
    private string sessionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UserName" field.</summary>
    public const int UserNameFieldNumber = 3;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ReferrerUrl" field.</summary>
    public const int ReferrerUrlFieldNumber = 4;
    private string referrerUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReferrerUrl {
      get { return referrerUrl_; }
      set {
        referrerUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "BearerToken" field.</summary>
    public const int BearerTokenFieldNumber = 5;
    private string bearerToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BearerToken {
      get { return bearerToken_; }
      set {
        bearerToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RefreshToken" field.</summary>
    public const int RefreshTokenFieldNumber = 6;
    private string refreshToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RefreshToken {
      get { return refreshToken_; }
      set {
        refreshToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 7;
    private global::TodoWorld.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TodoWorld.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 8;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 66);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegisterResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegisterResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (SessionId != other.SessionId) return false;
      if (UserName != other.UserName) return false;
      if (ReferrerUrl != other.ReferrerUrl) return false;
      if (BearerToken != other.BearerToken) return false;
      if (RefreshToken != other.RefreshToken) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (ReferrerUrl.Length != 0) hash ^= ReferrerUrl.GetHashCode();
      if (BearerToken.Length != 0) hash ^= BearerToken.GetHashCode();
      if (RefreshToken.Length != 0) hash ^= RefreshToken.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (SessionId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SessionId);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UserName);
      }
      if (ReferrerUrl.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ReferrerUrl);
      }
      if (BearerToken.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(BearerToken);
      }
      if (RefreshToken.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(RefreshToken);
      }
      if (responseStatus_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ResponseStatus);
      }
      meta_.WriteTo(output, _map_meta_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (SessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
      }
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (ReferrerUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReferrerUrl);
      }
      if (BearerToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BearerToken);
      }
      if (RefreshToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RefreshToken);
      }
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      size += meta_.CalculateSize(_map_meta_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegisterResponse other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.SessionId.Length != 0) {
        SessionId = other.SessionId;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.ReferrerUrl.Length != 0) {
        ReferrerUrl = other.ReferrerUrl;
      }
      if (other.BearerToken.Length != 0) {
        BearerToken = other.BearerToken;
      }
      if (other.RefreshToken.Length != 0) {
        RefreshToken = other.RefreshToken;
      }
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::TodoWorld.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      meta_.Add(other.meta_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            SessionId = input.ReadString();
            break;
          }
          case 26: {
            UserName = input.ReadString();
            break;
          }
          case 34: {
            ReferrerUrl = input.ReadString();
            break;
          }
          case 42: {
            BearerToken = input.ReadString();
            break;
          }
          case 50: {
            RefreshToken = input.ReadString();
            break;
          }
          case 58: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::TodoWorld.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
          case 66: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ResetTodos : pb::IMessage<ResetTodos> {
    private static readonly pb::MessageParser<ResetTodos> _parser = new pb::MessageParser<ResetTodos>(() => new ResetTodos());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResetTodos> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TodoWorld.ServicesReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResetTodos() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResetTodos(ResetTodos other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResetTodos Clone() {
      return new ResetTodos(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResetTodos);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResetTodos other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResetTodos other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ResponseError : pb::IMessage<ResponseError> {
    private static readonly pb::MessageParser<ResponseError> _parser = new pb::MessageParser<ResponseError>(() => new ResponseError());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResponseError> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TodoWorld.ServicesReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseError() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseError(ResponseError other) : this() {
      errorCode_ = other.errorCode_;
      fieldName_ = other.fieldName_;
      message_ = other.message_;
      meta_ = other.meta_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseError Clone() {
      return new ResponseError(this);
    }

    /// <summary>Field number for the "ErrorCode" field.</summary>
    public const int ErrorCodeFieldNumber = 1;
    private string errorCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FieldName" field.</summary>
    public const int FieldNameFieldNumber = 2;
    private string fieldName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FieldName {
      get { return fieldName_; }
      set {
        fieldName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 3;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResponseError);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResponseError other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrorCode != other.ErrorCode) return false;
      if (FieldName != other.FieldName) return false;
      if (Message != other.Message) return false;
      if (!Meta.Equals(other.Meta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ErrorCode.Length != 0) hash ^= ErrorCode.GetHashCode();
      if (FieldName.Length != 0) hash ^= FieldName.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ErrorCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ErrorCode);
      }
      if (FieldName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FieldName);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Message);
      }
      meta_.WriteTo(output, _map_meta_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ErrorCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorCode);
      }
      if (FieldName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FieldName);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      size += meta_.CalculateSize(_map_meta_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResponseError other) {
      if (other == null) {
        return;
      }
      if (other.ErrorCode.Length != 0) {
        ErrorCode = other.ErrorCode;
      }
      if (other.FieldName.Length != 0) {
        FieldName = other.FieldName;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      meta_.Add(other.meta_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ErrorCode = input.ReadString();
            break;
          }
          case 18: {
            FieldName = input.ReadString();
            break;
          }
          case 26: {
            Message = input.ReadString();
            break;
          }
          case 34: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ResponseStatus : pb::IMessage<ResponseStatus> {
    private static readonly pb::MessageParser<ResponseStatus> _parser = new pb::MessageParser<ResponseStatus>(() => new ResponseStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResponseStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TodoWorld.ServicesReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseStatus(ResponseStatus other) : this() {
      errorCode_ = other.errorCode_;
      message_ = other.message_;
      stackTrace_ = other.stackTrace_;
      errors_ = other.errors_.Clone();
      meta_ = other.meta_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseStatus Clone() {
      return new ResponseStatus(this);
    }

    /// <summary>Field number for the "ErrorCode" field.</summary>
    public const int ErrorCodeFieldNumber = 1;
    private string errorCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "StackTrace" field.</summary>
    public const int StackTraceFieldNumber = 3;
    private string stackTrace_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StackTrace {
      get { return stackTrace_; }
      set {
        stackTrace_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Errors" field.</summary>
    public const int ErrorsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::TodoWorld.ResponseError> _repeated_errors_codec
        = pb::FieldCodec.ForMessage(34, global::TodoWorld.ResponseError.Parser);
    private readonly pbc::RepeatedField<global::TodoWorld.ResponseError> errors_ = new pbc::RepeatedField<global::TodoWorld.ResponseError>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TodoWorld.ResponseError> Errors {
      get { return errors_; }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 5;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 42);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResponseStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResponseStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrorCode != other.ErrorCode) return false;
      if (Message != other.Message) return false;
      if (StackTrace != other.StackTrace) return false;
      if(!errors_.Equals(other.errors_)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ErrorCode.Length != 0) hash ^= ErrorCode.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (StackTrace.Length != 0) hash ^= StackTrace.GetHashCode();
      hash ^= errors_.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ErrorCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ErrorCode);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (StackTrace.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(StackTrace);
      }
      errors_.WriteTo(output, _repeated_errors_codec);
      meta_.WriteTo(output, _map_meta_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ErrorCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorCode);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (StackTrace.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StackTrace);
      }
      size += errors_.CalculateSize(_repeated_errors_codec);
      size += meta_.CalculateSize(_map_meta_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResponseStatus other) {
      if (other == null) {
        return;
      }
      if (other.ErrorCode.Length != 0) {
        ErrorCode = other.ErrorCode;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.StackTrace.Length != 0) {
        StackTrace = other.StackTrace;
      }
      errors_.Add(other.errors_);
      meta_.Add(other.meta_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ErrorCode = input.ReadString();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 26: {
            StackTrace = input.ReadString();
            break;
          }
          case 34: {
            errors_.AddEntriesFrom(input, _repeated_errors_codec);
            break;
          }
          case 42: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class StreamFiles : pb::IMessage<StreamFiles> {
    private static readonly pb::MessageParser<StreamFiles> _parser = new pb::MessageParser<StreamFiles>(() => new StreamFiles());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamFiles> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TodoWorld.ServicesReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamFiles() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamFiles(StreamFiles other) : this() {
      paths_ = other.paths_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamFiles Clone() {
      return new StreamFiles(this);
    }

    /// <summary>Field number for the "Paths" field.</summary>
    public const int PathsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_paths_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> paths_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Paths {
      get { return paths_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamFiles);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamFiles other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!paths_.Equals(other.paths_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= paths_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      paths_.WriteTo(output, _repeated_paths_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += paths_.CalculateSize(_repeated_paths_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamFiles other) {
      if (other == null) {
        return;
      }
      paths_.Add(other.paths_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            paths_.AddEntriesFrom(input, _repeated_paths_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class StreamServerEvents : pb::IMessage<StreamServerEvents> {
    private static readonly pb::MessageParser<StreamServerEvents> _parser = new pb::MessageParser<StreamServerEvents>(() => new StreamServerEvents());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamServerEvents> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TodoWorld.ServicesReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamServerEvents() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamServerEvents(StreamServerEvents other) : this() {
      channels_ = other.channels_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamServerEvents Clone() {
      return new StreamServerEvents(this);
    }

    /// <summary>Field number for the "Channels" field.</summary>
    public const int ChannelsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_channels_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> channels_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Channels {
      get { return channels_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamServerEvents);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamServerEvents other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!channels_.Equals(other.channels_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= channels_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      channels_.WriteTo(output, _repeated_channels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += channels_.CalculateSize(_repeated_channels_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamServerEvents other) {
      if (other == null) {
        return;
      }
      channels_.Add(other.channels_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            channels_.AddEntriesFrom(input, _repeated_channels_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class StreamServerEventsResponse : pb::IMessage<StreamServerEventsResponse> {
    private static readonly pb::MessageParser<StreamServerEventsResponse> _parser = new pb::MessageParser<StreamServerEventsResponse>(() => new StreamServerEventsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamServerEventsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TodoWorld.ServicesReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamServerEventsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamServerEventsResponse(StreamServerEventsResponse other) : this() {
      eventId_ = other.eventId_;
      channel_ = other.channel_;
      selector_ = other.selector_;
      json_ = other.json_;
      op_ = other.op_;
      target_ = other.target_;
      cssSelector_ = other.cssSelector_;
      meta_ = other.meta_.Clone();
      userId_ = other.userId_;
      displayName_ = other.displayName_;
      profileUrl_ = other.profileUrl_;
      isAuthenticated_ = other.isAuthenticated_;
      channels_ = other.channels_.Clone();
      createdAt_ = other.createdAt_;
      id_ = other.id_;
      unRegisterUrl_ = other.unRegisterUrl_;
      updateSubscriberUrl_ = other.updateSubscriberUrl_;
      heartbeatUrl_ = other.heartbeatUrl_;
      heartbeatIntervalMs_ = other.heartbeatIntervalMs_;
      idleTimeoutMs_ = other.idleTimeoutMs_;
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamServerEventsResponse Clone() {
      return new StreamServerEventsResponse(this);
    }

    /// <summary>Field number for the "EventId" field.</summary>
    public const int EventIdFieldNumber = 1;
    private long eventId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EventId {
      get { return eventId_; }
      set {
        eventId_ = value;
      }
    }

    /// <summary>Field number for the "Channel" field.</summary>
    public const int ChannelFieldNumber = 2;
    private string channel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Channel {
      get { return channel_; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Selector" field.</summary>
    public const int SelectorFieldNumber = 4;
    private string selector_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Selector {
      get { return selector_; }
      set {
        selector_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Json" field.</summary>
    public const int JsonFieldNumber = 5;
    private string json_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Json {
      get { return json_; }
      set {
        json_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Op" field.</summary>
    public const int OpFieldNumber = 6;
    private string op_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Op {
      get { return op_; }
      set {
        op_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Target" field.</summary>
    public const int TargetFieldNumber = 7;
    private string target_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Target {
      get { return target_; }
      set {
        target_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CssSelector" field.</summary>
    public const int CssSelectorFieldNumber = 8;
    private string cssSelector_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CssSelector {
      get { return cssSelector_; }
      set {
        cssSelector_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 9;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 74);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    /// <summary>Field number for the "UserId" field.</summary>
    public const int UserIdFieldNumber = 10;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DisplayName" field.</summary>
    public const int DisplayNameFieldNumber = 11;
    private string displayName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ProfileUrl" field.</summary>
    public const int ProfileUrlFieldNumber = 12;
    private string profileUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProfileUrl {
      get { return profileUrl_; }
      set {
        profileUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsAuthenticated" field.</summary>
    public const int IsAuthenticatedFieldNumber = 13;
    private bool isAuthenticated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsAuthenticated {
      get { return isAuthenticated_; }
      set {
        isAuthenticated_ = value;
      }
    }

    /// <summary>Field number for the "Channels" field.</summary>
    public const int ChannelsFieldNumber = 14;
    private static readonly pb::FieldCodec<string> _repeated_channels_codec
        = pb::FieldCodec.ForString(114);
    private readonly pbc::RepeatedField<string> channels_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Channels {
      get { return channels_; }
    }

    /// <summary>Field number for the "CreatedAt" field.</summary>
    public const int CreatedAtFieldNumber = 15;
    private long createdAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = value;
      }
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 21;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UnRegisterUrl" field.</summary>
    public const int UnRegisterUrlFieldNumber = 22;
    private string unRegisterUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnRegisterUrl {
      get { return unRegisterUrl_; }
      set {
        unRegisterUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UpdateSubscriberUrl" field.</summary>
    public const int UpdateSubscriberUrlFieldNumber = 23;
    private string updateSubscriberUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UpdateSubscriberUrl {
      get { return updateSubscriberUrl_; }
      set {
        updateSubscriberUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HeartbeatUrl" field.</summary>
    public const int HeartbeatUrlFieldNumber = 24;
    private string heartbeatUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HeartbeatUrl {
      get { return heartbeatUrl_; }
      set {
        heartbeatUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HeartbeatIntervalMs" field.</summary>
    public const int HeartbeatIntervalMsFieldNumber = 25;
    private long heartbeatIntervalMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long HeartbeatIntervalMs {
      get { return heartbeatIntervalMs_; }
      set {
        heartbeatIntervalMs_ = value;
      }
    }

    /// <summary>Field number for the "IdleTimeoutMs" field.</summary>
    public const int IdleTimeoutMsFieldNumber = 26;
    private long idleTimeoutMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long IdleTimeoutMs {
      get { return idleTimeoutMs_; }
      set {
        idleTimeoutMs_ = value;
      }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 30;
    private global::TodoWorld.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TodoWorld.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamServerEventsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamServerEventsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EventId != other.EventId) return false;
      if (Channel != other.Channel) return false;
      if (Selector != other.Selector) return false;
      if (Json != other.Json) return false;
      if (Op != other.Op) return false;
      if (Target != other.Target) return false;
      if (CssSelector != other.CssSelector) return false;
      if (!Meta.Equals(other.Meta)) return false;
      if (UserId != other.UserId) return false;
      if (DisplayName != other.DisplayName) return false;
      if (ProfileUrl != other.ProfileUrl) return false;
      if (IsAuthenticated != other.IsAuthenticated) return false;
      if(!channels_.Equals(other.channels_)) return false;
      if (CreatedAt != other.CreatedAt) return false;
      if (Id != other.Id) return false;
      if (UnRegisterUrl != other.UnRegisterUrl) return false;
      if (UpdateSubscriberUrl != other.UpdateSubscriberUrl) return false;
      if (HeartbeatUrl != other.HeartbeatUrl) return false;
      if (HeartbeatIntervalMs != other.HeartbeatIntervalMs) return false;
      if (IdleTimeoutMs != other.IdleTimeoutMs) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EventId != 0L) hash ^= EventId.GetHashCode();
      if (Channel.Length != 0) hash ^= Channel.GetHashCode();
      if (Selector.Length != 0) hash ^= Selector.GetHashCode();
      if (Json.Length != 0) hash ^= Json.GetHashCode();
      if (Op.Length != 0) hash ^= Op.GetHashCode();
      if (Target.Length != 0) hash ^= Target.GetHashCode();
      if (CssSelector.Length != 0) hash ^= CssSelector.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (ProfileUrl.Length != 0) hash ^= ProfileUrl.GetHashCode();
      if (IsAuthenticated != false) hash ^= IsAuthenticated.GetHashCode();
      hash ^= channels_.GetHashCode();
      if (CreatedAt != 0L) hash ^= CreatedAt.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (UnRegisterUrl.Length != 0) hash ^= UnRegisterUrl.GetHashCode();
      if (UpdateSubscriberUrl.Length != 0) hash ^= UpdateSubscriberUrl.GetHashCode();
      if (HeartbeatUrl.Length != 0) hash ^= HeartbeatUrl.GetHashCode();
      if (HeartbeatIntervalMs != 0L) hash ^= HeartbeatIntervalMs.GetHashCode();
      if (IdleTimeoutMs != 0L) hash ^= IdleTimeoutMs.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EventId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(EventId);
      }
      if (Channel.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Channel);
      }
      if (Selector.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Selector);
      }
      if (Json.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Json);
      }
      if (Op.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Op);
      }
      if (Target.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Target);
      }
      if (CssSelector.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CssSelector);
      }
      meta_.WriteTo(output, _map_meta_codec);
      if (UserId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(UserId);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(DisplayName);
      }
      if (ProfileUrl.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(ProfileUrl);
      }
      if (IsAuthenticated != false) {
        output.WriteRawTag(104);
        output.WriteBool(IsAuthenticated);
      }
      channels_.WriteTo(output, _repeated_channels_codec);
      if (CreatedAt != 0L) {
        output.WriteRawTag(120);
        output.WriteInt64(CreatedAt);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(Id);
      }
      if (UnRegisterUrl.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(UnRegisterUrl);
      }
      if (UpdateSubscriberUrl.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(UpdateSubscriberUrl);
      }
      if (HeartbeatUrl.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(HeartbeatUrl);
      }
      if (HeartbeatIntervalMs != 0L) {
        output.WriteRawTag(200, 1);
        output.WriteInt64(HeartbeatIntervalMs);
      }
      if (IdleTimeoutMs != 0L) {
        output.WriteRawTag(208, 1);
        output.WriteInt64(IdleTimeoutMs);
      }
      if (responseStatus_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EventId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EventId);
      }
      if (Channel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (Selector.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Selector);
      }
      if (Json.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Json);
      }
      if (Op.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Op);
      }
      if (Target.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Target);
      }
      if (CssSelector.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CssSelector);
      }
      size += meta_.CalculateSize(_map_meta_codec);
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (ProfileUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProfileUrl);
      }
      if (IsAuthenticated != false) {
        size += 1 + 1;
      }
      size += channels_.CalculateSize(_repeated_channels_codec);
      if (CreatedAt != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreatedAt);
      }
      if (Id.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (UnRegisterUrl.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(UnRegisterUrl);
      }
      if (UpdateSubscriberUrl.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(UpdateSubscriberUrl);
      }
      if (HeartbeatUrl.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(HeartbeatUrl);
      }
      if (HeartbeatIntervalMs != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(HeartbeatIntervalMs);
      }
      if (IdleTimeoutMs != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(IdleTimeoutMs);
      }
      if (responseStatus_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamServerEventsResponse other) {
      if (other == null) {
        return;
      }
      if (other.EventId != 0L) {
        EventId = other.EventId;
      }
      if (other.Channel.Length != 0) {
        Channel = other.Channel;
      }
      if (other.Selector.Length != 0) {
        Selector = other.Selector;
      }
      if (other.Json.Length != 0) {
        Json = other.Json;
      }
      if (other.Op.Length != 0) {
        Op = other.Op;
      }
      if (other.Target.Length != 0) {
        Target = other.Target;
      }
      if (other.CssSelector.Length != 0) {
        CssSelector = other.CssSelector;
      }
      meta_.Add(other.meta_);
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.ProfileUrl.Length != 0) {
        ProfileUrl = other.ProfileUrl;
      }
      if (other.IsAuthenticated != false) {
        IsAuthenticated = other.IsAuthenticated;
      }
      channels_.Add(other.channels_);
      if (other.CreatedAt != 0L) {
        CreatedAt = other.CreatedAt;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.UnRegisterUrl.Length != 0) {
        UnRegisterUrl = other.UnRegisterUrl;
      }
      if (other.UpdateSubscriberUrl.Length != 0) {
        UpdateSubscriberUrl = other.UpdateSubscriberUrl;
      }
      if (other.HeartbeatUrl.Length != 0) {
        HeartbeatUrl = other.HeartbeatUrl;
      }
      if (other.HeartbeatIntervalMs != 0L) {
        HeartbeatIntervalMs = other.HeartbeatIntervalMs;
      }
      if (other.IdleTimeoutMs != 0L) {
        IdleTimeoutMs = other.IdleTimeoutMs;
      }
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::TodoWorld.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EventId = input.ReadInt64();
            break;
          }
          case 18: {
            Channel = input.ReadString();
            break;
          }
          case 34: {
            Selector = input.ReadString();
            break;
          }
          case 42: {
            Json = input.ReadString();
            break;
          }
          case 50: {
            Op = input.ReadString();
            break;
          }
          case 58: {
            Target = input.ReadString();
            break;
          }
          case 66: {
            CssSelector = input.ReadString();
            break;
          }
          case 74: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
          case 82: {
            UserId = input.ReadString();
            break;
          }
          case 90: {
            DisplayName = input.ReadString();
            break;
          }
          case 98: {
            ProfileUrl = input.ReadString();
            break;
          }
          case 104: {
            IsAuthenticated = input.ReadBool();
            break;
          }
          case 114: {
            channels_.AddEntriesFrom(input, _repeated_channels_codec);
            break;
          }
          case 120: {
            CreatedAt = input.ReadInt64();
            break;
          }
          case 170: {
            Id = input.ReadString();
            break;
          }
          case 178: {
            UnRegisterUrl = input.ReadString();
            break;
          }
          case 186: {
            UpdateSubscriberUrl = input.ReadString();
            break;
          }
          case 194: {
            HeartbeatUrl = input.ReadString();
            break;
          }
          case 200: {
            HeartbeatIntervalMs = input.ReadInt64();
            break;
          }
          case 208: {
            IdleTimeoutMs = input.ReadInt64();
            break;
          }
          case 242: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::TodoWorld.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Todo : pb::IMessage<Todo> {
    private static readonly pb::MessageParser<Todo> _parser = new pb::MessageParser<Todo>(() => new Todo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Todo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TodoWorld.ServicesReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Todo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Todo(Todo other) : this() {
      id_ = other.id_;
      title_ = other.title_;
      order_ = other.order_;
      completed_ = other.completed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Todo Clone() {
      return new Todo(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Title" field.</summary>
    public const int TitleFieldNumber = 2;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Order" field.</summary>
    public const int OrderFieldNumber = 3;
    private int order_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Order {
      get { return order_; }
      set {
        order_ = value;
      }
    }

    /// <summary>Field number for the "Completed" field.</summary>
    public const int CompletedFieldNumber = 4;
    private bool completed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Completed {
      get { return completed_; }
      set {
        completed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Todo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Todo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Title != other.Title) return false;
      if (Order != other.Order) return false;
      if (Completed != other.Completed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Order != 0) hash ^= Order.GetHashCode();
      if (Completed != false) hash ^= Completed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (Order != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Order);
      }
      if (Completed != false) {
        output.WriteRawTag(32);
        output.WriteBool(Completed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Order != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Order);
      }
      if (Completed != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Todo other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Order != 0) {
        Order = other.Order;
      }
      if (other.Completed != false) {
        Completed = other.Completed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 24: {
            Order = input.ReadInt32();
            break;
          }
          case 32: {
            Completed = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnAssignRoles : pb::IMessage<UnAssignRoles> {
    private static readonly pb::MessageParser<UnAssignRoles> _parser = new pb::MessageParser<UnAssignRoles>(() => new UnAssignRoles());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnAssignRoles> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TodoWorld.ServicesReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnAssignRoles() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnAssignRoles(UnAssignRoles other) : this() {
      userName_ = other.userName_;
      permissions_ = other.permissions_.Clone();
      roles_ = other.roles_.Clone();
      meta_ = other.meta_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnAssignRoles Clone() {
      return new UnAssignRoles(this);
    }

    /// <summary>Field number for the "UserName" field.</summary>
    public const int UserNameFieldNumber = 1;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Permissions" field.</summary>
    public const int PermissionsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_permissions_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> permissions_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Permissions {
      get { return permissions_; }
    }

    /// <summary>Field number for the "Roles" field.</summary>
    public const int RolesFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_roles_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> roles_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Roles {
      get { return roles_; }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnAssignRoles);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnAssignRoles other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserName != other.UserName) return false;
      if(!permissions_.Equals(other.permissions_)) return false;
      if(!roles_.Equals(other.roles_)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      hash ^= permissions_.GetHashCode();
      hash ^= roles_.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserName);
      }
      permissions_.WriteTo(output, _repeated_permissions_codec);
      roles_.WriteTo(output, _repeated_roles_codec);
      meta_.WriteTo(output, _map_meta_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      size += permissions_.CalculateSize(_repeated_permissions_codec);
      size += roles_.CalculateSize(_repeated_roles_codec);
      size += meta_.CalculateSize(_map_meta_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnAssignRoles other) {
      if (other == null) {
        return;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      permissions_.Add(other.permissions_);
      roles_.Add(other.roles_);
      meta_.Add(other.meta_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserName = input.ReadString();
            break;
          }
          case 18: {
            permissions_.AddEntriesFrom(input, _repeated_permissions_codec);
            break;
          }
          case 26: {
            roles_.AddEntriesFrom(input, _repeated_roles_codec);
            break;
          }
          case 34: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnAssignRolesResponse : pb::IMessage<UnAssignRolesResponse> {
    private static readonly pb::MessageParser<UnAssignRolesResponse> _parser = new pb::MessageParser<UnAssignRolesResponse>(() => new UnAssignRolesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnAssignRolesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TodoWorld.ServicesReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnAssignRolesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnAssignRolesResponse(UnAssignRolesResponse other) : this() {
      allRoles_ = other.allRoles_.Clone();
      allPermissions_ = other.allPermissions_.Clone();
      meta_ = other.meta_.Clone();
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnAssignRolesResponse Clone() {
      return new UnAssignRolesResponse(this);
    }

    /// <summary>Field number for the "AllRoles" field.</summary>
    public const int AllRolesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_allRoles_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> allRoles_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AllRoles {
      get { return allRoles_; }
    }

    /// <summary>Field number for the "AllPermissions" field.</summary>
    public const int AllPermissionsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_allPermissions_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> allPermissions_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AllPermissions {
      get { return allPermissions_; }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 3;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 26);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 4;
    private global::TodoWorld.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TodoWorld.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnAssignRolesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnAssignRolesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!allRoles_.Equals(other.allRoles_)) return false;
      if(!allPermissions_.Equals(other.allPermissions_)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= allRoles_.GetHashCode();
      hash ^= allPermissions_.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      allRoles_.WriteTo(output, _repeated_allRoles_codec);
      allPermissions_.WriteTo(output, _repeated_allPermissions_codec);
      meta_.WriteTo(output, _map_meta_codec);
      if (responseStatus_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += allRoles_.CalculateSize(_repeated_allRoles_codec);
      size += allPermissions_.CalculateSize(_repeated_allPermissions_codec);
      size += meta_.CalculateSize(_map_meta_codec);
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnAssignRolesResponse other) {
      if (other == null) {
        return;
      }
      allRoles_.Add(other.allRoles_);
      allPermissions_.Add(other.allPermissions_);
      meta_.Add(other.meta_);
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::TodoWorld.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            allRoles_.AddEntriesFrom(input, _repeated_allRoles_codec);
            break;
          }
          case 18: {
            allPermissions_.AddEntriesFrom(input, _repeated_allPermissions_codec);
            break;
          }
          case 26: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
          case 34: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::TodoWorld.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateTodo : pb::IMessage<UpdateTodo> {
    private static readonly pb::MessageParser<UpdateTodo> _parser = new pb::MessageParser<UpdateTodo>(() => new UpdateTodo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateTodo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TodoWorld.ServicesReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTodo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTodo(UpdateTodo other) : this() {
      id_ = other.id_;
      title_ = other.title_;
      order_ = other.order_;
      completed_ = other.completed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTodo Clone() {
      return new UpdateTodo(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Title" field.</summary>
    public const int TitleFieldNumber = 2;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Order" field.</summary>
    public const int OrderFieldNumber = 3;
    private int order_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Order {
      get { return order_; }
      set {
        order_ = value;
      }
    }

    /// <summary>Field number for the "Completed" field.</summary>
    public const int CompletedFieldNumber = 4;
    private bool completed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Completed {
      get { return completed_; }
      set {
        completed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateTodo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateTodo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Title != other.Title) return false;
      if (Order != other.Order) return false;
      if (Completed != other.Completed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Order != 0) hash ^= Order.GetHashCode();
      if (Completed != false) hash ^= Completed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (Order != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Order);
      }
      if (Completed != false) {
        output.WriteRawTag(32);
        output.WriteBool(Completed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Order != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Order);
      }
      if (Completed != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateTodo other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Order != 0) {
        Order = other.Order;
      }
      if (other.Completed != false) {
        Completed = other.Completed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 24: {
            Order = input.ReadInt32();
            break;
          }
          case 32: {
            Completed = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
